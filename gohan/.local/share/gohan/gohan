#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/IyEvdX-ags.js"

cat <<EOF | base64 --decode > $file
#!/usr/bin/gjs -m

// ../../../../usr/share/astal/gjs/gtk4/index.ts
import Astal6 from "gi://Astal?version=4.0";
import Gtk4 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../../usr/share/astal/gjs/variable.ts
import Astal3 from "gi://AstalIO";

// ../../../../usr/share/astal/gjs/binding.ts
import GObject from "gi://GObject";
var snakeify = (str) => str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
var kebabify = (str) => str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
var Binding = class _Binding {
  constructor(emitter, prop) {
    this.transformFn = (v) => v;
    this.#emitter = emitter;
    this.#prop = prop && kebabify(prop);
  }
  #emitter;
  #prop;
  static bind(emitter, prop) {
    return new _Binding(emitter, prop);
  }
  [Symbol.toPrimitive]() {
    console.warn("Binding implicitly converted to a primitive value. This is almost always a mistake.");
    return this.toString();
  }
  /**
   * This function is mostly here to aid in debugging.
   * It returns a regular, non-reactive string,
   * and will not work to reactively use a binding somewhere that expects a plain string.
   */
  toString() {
    return `Binding<${this.#emitter}${this.#prop ? `, "${this.#prop}"` : ""}>`;
  }
  /**
   * Create a new binding that additionally applies a function on its value.
   * @param fn The transformation to apply. This should be a pure function, as it can be called at any time.
   */
  as(fn) {
    const bind2 = new _Binding(this.#emitter, this.#prop);
    bind2.transformFn = (v) => fn(this.transformFn(v));
    return bind2;
  }
  /**
   * Get the binding's current value (non-reactively).
   */
  get() {
    if (typeof this.#emitter.get === "function")
      return this.transformFn(this.#emitter.get());
    if (typeof this.#prop === "string") {
      const getter = `get_${snakeify(this.#prop)}`;
      if (typeof this.#emitter[getter] === "function")
        return this.transformFn(this.#emitter[getter]());
      return this.transformFn(this.#emitter[this.#prop]);
    }
    throw Error("can not get value of binding");
  }
  subscribe(callback) {
    if (typeof this.#emitter.subscribe === "function") {
      return this.#emitter.subscribe(() => {
        callback(this.get());
      });
    } else if (typeof this.#emitter.connect === "function") {
      const signal = `notify::${this.#prop}`;
      const id = this.#emitter.connect(signal, () => {
        callback(this.get());
      });
      return () => {
        if (GObject.signal_handler_is_connected(this.#emitter, id))
          this.#emitter.disconnect(id);
      };
    }
    throw Error(`${this.#emitter} is not bindable`);
  }
};
var { bind } = Binding;
var binding_default = Binding;

// ../../../../usr/share/astal/gjs/time.ts
import Astal from "gi://AstalIO";
var Time = Astal.Time;
function interval(interval3, callback) {
  return Astal.Time.interval(interval3, () => void callback?.());
}
function timeout(timeout2, callback) {
  return Astal.Time.timeout(timeout2, () => void callback?.());
}

// ../../../../usr/share/astal/gjs/process.ts
import Astal2 from "gi://AstalIO";
var Process = Astal2.Process;
function subprocess(argsOrCmd, onOut = print, onErr = printerr) {
  const args = Array.isArray(argsOrCmd) || typeof argsOrCmd === "string";
  const { cmd, err, out } = {
    cmd: args ? argsOrCmd : argsOrCmd.cmd,
    err: args ? onErr : argsOrCmd.err || onErr,
    out: args ? onOut : argsOrCmd.out || onOut
  };
  const proc = Array.isArray(cmd) ? Astal2.Process.subprocessv(cmd) : Astal2.Process.subprocess(cmd);
  proc.connect("stdout", (_, stdout) => out(stdout));
  proc.connect("stderr", (_, stderr) => err(stderr));
  return proc;
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      Astal2.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(Astal2.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      Astal2.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(Astal2.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/astal/gjs/variable.ts
var VariableWrapper = class extends Function {
  constructor(init) {
    super();
    this.errHandler = console.error;
    this.pollInterval = 1e3;
    this._value = init;
    this.variable = new Astal3.VariableBase();
    this.variable.connect("dropped", () => {
      this.stopWatch();
      this.stopPoll();
    });
    this.variable.connect("error", (_, err) => this.errHandler?.(err));
    return new Proxy(this, {
      apply: (target, _, args) => target._call(args[0])
    });
  }
  _call(transform) {
    const b = binding_default.bind(this);
    return transform ? b.as(transform) : b;
  }
  toString() {
    return String(`Variable<${this.get()}>`);
  }
  get() {
    return this._value;
  }
  set(value) {
    if (value !== this._value) {
      this._value = value;
      this.variable.emit("changed");
    }
  }
  startPoll() {
    if (this._poll)
      return;
    if (this.pollFn) {
      this._poll = interval(this.pollInterval, () => {
        const v = this.pollFn(this.get());
        if (v instanceof Promise) {
          v.then((v2) => this.set(v2)).catch((err) => this.variable.emit("error", err));
        } else {
          this.set(v);
        }
      });
    } else if (this.pollExec) {
      this._poll = interval(this.pollInterval, () => {
        execAsync(this.pollExec).then((v) => this.set(this.pollTransform(v, this.get()))).catch((err) => this.variable.emit("error", err));
      });
    }
  }
  startWatch() {
    if (this._watch)
      return;
    this._watch = subprocess({
      cmd: this.watchExec,
      out: (out) => this.set(this.watchTransform(out, this.get())),
      err: (err) => this.variable.emit("error", err)
    });
  }
  stopPoll() {
    this._poll?.cancel();
    delete this._poll;
  }
  stopWatch() {
    this._watch?.kill();
    delete this._watch;
  }
  isPolling() {
    return !!this._poll;
  }
  isWatching() {
    return !!this._watch;
  }
  drop() {
    this.variable.emit("dropped");
  }
  onDropped(callback) {
    this.variable.connect("dropped", callback);
    return this;
  }
  onError(callback) {
    delete this.errHandler;
    this.variable.connect("error", (_, err) => callback(err));
    return this;
  }
  subscribe(callback) {
    const id = this.variable.connect("changed", () => {
      callback(this.get());
    });
    return () => this.variable.disconnect(id);
  }
  poll(interval3, exec2, transform = (out) => out) {
    this.stopPoll();
    this.pollInterval = interval3;
    this.pollTransform = transform;
    if (typeof exec2 === "function") {
      this.pollFn = exec2;
      delete this.pollExec;
    } else {
      this.pollExec = exec2;
      delete this.pollFn;
    }
    this.startPoll();
    return this;
  }
  watch(exec2, transform = (out) => out) {
    this.stopWatch();
    this.watchExec = exec2;
    this.watchTransform = transform;
    this.startWatch();
    return this;
  }
  observe(objs, sigOrFn, callback) {
    const f = typeof sigOrFn === "function" ? sigOrFn : callback ?? (() => this.get());
    const set = (obj, ...args) => this.set(f(obj, ...args));
    if (Array.isArray(objs)) {
      for (const obj of objs) {
        const [o, s] = obj;
        const id = o.connect(s, set);
        this.onDropped(() => o.disconnect(id));
      }
    } else {
      if (typeof sigOrFn === "string") {
        const id = objs.connect(sigOrFn, set);
        this.onDropped(() => objs.disconnect(id));
      }
    }
    return this;
  }
  static derive(deps, fn = (...args) => args) {
    const update = () => fn(...deps.map((d) => d.get()));
    const derived = new Variable(update());
    const unsubs = deps.map((dep) => dep.subscribe(() => derived.set(update())));
    derived.onDropped(() => unsubs.map((unsub) => unsub()));
    return derived;
  }
};
var Variable = new Proxy(VariableWrapper, {
  apply: (_t, _a, args) => new VariableWrapper(args[0])
});
var { derive } = Variable;
var variable_default = Variable;

// ../../../../usr/share/astal/gjs/_astal.ts
var noImplicitDestroy = Symbol("no no implicit destroy");
var setChildren = Symbol("children setter method");
function mergeBindings(array) {
  function getValues(...args) {
    let i = 0;
    return array.map(
      (value) => value instanceof binding_default ? args[i++] : value
    );
  }
  const bindings = array.filter((i) => i instanceof binding_default);
  if (bindings.length === 0)
    return array;
  if (bindings.length === 1)
    return bindings[0].as(getValues);
  return variable_default.derive(bindings, getValues)();
}
function setProp(obj, prop, value) {
  try {
    const setter = `set_${snakeify(prop)}`;
    if (typeof obj[setter] === "function")
      return obj[setter](value);
    return obj[prop] = value;
  } catch (error) {
    console.error(`could not set property "${prop}" on ${obj}:`, error);
  }
}
function construct(widget, config) {
  let { setup, child, children = [], ...props } = config;
  if (children instanceof binding_default) {
    children = [children];
  }
  if (child) {
    children.unshift(child);
  }
  for (const [key, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key];
    }
  }
  const bindings = Object.keys(props).reduce((acc, prop) => {
    if (props[prop] instanceof binding_default) {
      const binding = props[prop];
      delete props[prop];
      return [...acc, [prop, binding]];
    }
    return acc;
  }, []);
  const onHandlers = Object.keys(props).reduce((acc, key) => {
    if (key.startsWith("on")) {
      const sig = kebabify(key).split("-").slice(1).join("-");
      const handler = props[key];
      delete props[key];
      return [...acc, [sig, handler]];
    }
    return acc;
  }, []);
  const mergedChildren = mergeBindings(children.flat(Infinity));
  if (mergedChildren instanceof binding_default) {
    widget[setChildren](mergedChildren.get());
    widget.connect("destroy", mergedChildren.subscribe((v) => {
      widget[setChildren](v);
    }));
  } else {
    if (mergedChildren.length > 0) {
      widget[setChildren](mergedChildren);
    }
  }
  for (const [signal, callback] of onHandlers) {
    const sig = signal.startsWith("notify") ? signal.replace("-", "::") : signal;
    if (typeof callback === "function") {
      widget.connect(sig, callback);
    } else {
      widget.connect(sig, () => execAsync(callback).then(print).catch(console.error));
    }
  }
  for (const [prop, binding] of bindings) {
    if (prop === "child" || prop === "children") {
      widget.connect("destroy", binding.subscribe((v) => {
        widget[setChildren](v);
      }));
    }
    widget.connect("destroy", binding.subscribe((v) => {
      setProp(widget, prop, v);
    }));
    setProp(widget, prop, binding.get());
  }
  for (const [key, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key];
    }
  }
  Object.assign(widget, props);
  setup?.(widget);
  return widget;
}
function isArrowFunction(func) {
  return !Object.hasOwn(func, "prototype");
}
function jsx(ctors2, ctor, { children, ...props }) {
  children ??= [];
  if (!Array.isArray(children))
    children = [children];
  children = children.filter(Boolean);
  if (children.length === 1)
    props.child = children[0];
  else if (children.length > 1)
    props.children = children;
  if (typeof ctor === "string") {
    if (isArrowFunction(ctors2[ctor]))
      return ctors2[ctor](props);
    return new ctors2[ctor](props);
  }
  if (isArrowFunction(ctor))
    return ctor(props);
  return new ctor(props);
}

// ../../../../usr/share/astal/gjs/gtk4/astalify.ts
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
var type = Symbol("child type");
var dummyBulder = new Gtk.Builder();
function _getChildren(widget) {
  if ("get_child" in widget && typeof widget.get_child == "function") {
    return widget.get_child() ? [widget.get_child()] : [];
  }
  const children = [];
  let ch = widget.get_first_child();
  while (ch !== null) {
    children.push(ch);
    ch = ch.get_next_sibling();
  }
  return children;
}
function _setChildren(widget, children) {
  children = children.flat(Infinity).map((ch) => ch instanceof Gtk.Widget ? ch : new Gtk.Label({ visible: true, label: String(ch) }));
  for (const child of children) {
    widget.vfunc_add_child(
      dummyBulder,
      child,
      type in child ? child[type] : null
    );
  }
}
function astalify(cls, config = {}) {
  Object.assign(cls.prototype, {
    [setChildren](children) {
      const w = this;
      for (const child of config.getChildren?.(w) || _getChildren(w)) {
        if (child instanceof Gtk.Widget) {
          child.unparent();
          if (!children.includes(child) && noImplicitDestroy in this)
            child.run_dispose();
        }
      }
      if (config.setChildren) {
        config.setChildren(w, children);
      } else {
        _setChildren(w, children);
      }
    }
  });
  return {
    [cls.name]: (props = {}, ...children) => {
      const widget = new cls("cssName" in props ? { cssName: props.cssName } : {});
      if ("cssName" in props) {
        delete props.cssName;
      }
      if (props.noImplicitDestroy) {
        Object.assign(widget, { [noImplicitDestroy]: true });
        delete props.noImplicitDestroy;
      }
      if (props.type) {
        Object.assign(widget, { [type]: props.type });
        delete props.type;
      }
      if (children.length > 0) {
        Object.assign(props, { children });
      }
      return construct(widget, setupControllers(widget, props));
    }
  }[cls.name];
}
function setupControllers(widget, {
  onFocusEnter,
  onFocusLeave,
  onKeyPressed,
  onKeyReleased,
  onKeyModifier,
  onLegacy,
  onButtonPressed,
  onButtonReleased,
  onHoverEnter,
  onHoverLeave,
  onMotion,
  onScroll,
  onScrollDecelerate,
  ...props
}) {
  if (onFocusEnter || onFocusLeave) {
    const focus = new Gtk.EventControllerFocus();
    widget.add_controller(focus);
    if (onFocusEnter)
      focus.connect("enter", () => onFocusEnter(widget));
    if (onFocusLeave)
      focus.connect("leave", () => onFocusLeave(widget));
  }
  if (onKeyPressed || onKeyReleased || onKeyModifier) {
    const key = new Gtk.EventControllerKey();
    widget.add_controller(key);
    if (onKeyPressed)
      key.connect("key-pressed", (_, val, code, state) => onKeyPressed(widget, val, code, state));
    if (onKeyReleased)
      key.connect("key-released", (_, val, code, state) => onKeyReleased(widget, val, code, state));
    if (onKeyModifier)
      key.connect("modifiers", (_, state) => onKeyModifier(widget, state));
  }
  if (onLegacy || onButtonPressed || onButtonReleased) {
    const legacy = new Gtk.EventControllerLegacy();
    widget.add_controller(legacy);
    legacy.connect("event", (_, event) => {
      if (event.get_event_type() === Gdk.EventType.BUTTON_PRESS) {
        onButtonPressed?.(widget, event);
      }
      if (event.get_event_type() === Gdk.EventType.BUTTON_RELEASE) {
        onButtonReleased?.(widget, event);
      }
      onLegacy?.(widget, event);
    });
  }
  if (onMotion || onHoverEnter || onHoverLeave) {
    const hover = new Gtk.EventControllerMotion();
    widget.add_controller(hover);
    if (onHoverEnter)
      hover.connect("enter", (_, x, y) => onHoverEnter(widget, x, y));
    if (onHoverLeave)
      hover.connect("leave", () => onHoverLeave(widget));
    if (onMotion)
      hover.connect("motion", (_, x, y) => onMotion(widget, x, y));
  }
  if (onScroll || onScrollDecelerate) {
    const scroll = new Gtk.EventControllerScroll();
    scroll.flags = Gtk.EventControllerScrollFlags.BOTH_AXES | Gtk.EventControllerScrollFlags.KINETIC;
    widget.add_controller(scroll);
    if (onScroll)
      scroll.connect("scroll", (_, x, y) => onScroll(widget, x, y));
    if (onScrollDecelerate)
      scroll.connect("decelerate", (_, x, y) => onScrollDecelerate(widget, x, y));
  }
  return props;
}

// ../../../../usr/share/astal/gjs/gtk4/app.ts
import GLib from "gi://GLib?version=2.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Astal4 from "gi://Astal?version=4.0";

// ../../../../usr/share/astal/gjs/overrides.ts
var snakeify2 = (str) => str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video, Node, Endpoint, Device }) => {
  patch(Wp.prototype, "nodes");
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
  patch(Endpoint.prototype, "routes");
  patch(Node.prototype, "channels");
  patch(Device.prototype, "profiles");
  patch(Device.prototype, "routes");
});

// ../../../../usr/share/astal/gjs/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
import IO from "gi://AstalIO";
import GObject2 from "gi://GObject";
function mkApp(App5) {
  return new class AstalJS extends App5 {
    static {
      GObject2.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(
            conn,
            String(response),
            (_, res) => IO.write_sock_finish(res)
          );
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        main?.(...programArgs);
      });
      try {
        app.acquire_socket();
      } catch (error) {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css)
        this.apply_css(css, false);
      if (icons)
        app.add_icons(icons);
      hold ??= true;
      if (hold)
        app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/astal/gjs/gtk4/app.ts
Gtk2.init();
GLib.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal4.Application);

// ../../../../usr/share/astal/gjs/gtk4/widget.ts
import Astal5 from "gi://Astal?version=4.0";
import Gtk3 from "gi://Gtk?version=4.0";
function filter(children) {
  return children.flat(Infinity).map((ch) => ch instanceof Gtk3.Widget ? ch : new Gtk3.Label({ visible: true, label: String(ch) }));
}
Object.defineProperty(Astal5.Box.prototype, "children", {
  get() {
    return this.get_children();
  },
  set(v) {
    this.set_children(v);
  }
});
var Box = astalify(Astal5.Box, {
  getChildren(self) {
    return self.get_children();
  },
  setChildren(self, children) {
    return self.set_children(filter(children));
  }
});
var Button = astalify(Gtk3.Button);
var CenterBox = astalify(Gtk3.CenterBox, {
  getChildren(box) {
    return [box.startWidget, box.centerWidget, box.endWidget];
  },
  setChildren(box, children) {
    const ch = filter(children);
    box.startWidget = ch[0] || new Gtk3.Box();
    box.centerWidget = ch[1] || new Gtk3.Box();
    box.endWidget = ch[2] || new Gtk3.Box();
  }
});
var Entry = astalify(Gtk3.Entry, {
  getChildren() {
    return [];
  }
});
var Image = astalify(Gtk3.Image, {
  getChildren() {
    return [];
  }
});
var Label = astalify(Gtk3.Label, {
  getChildren() {
    return [];
  },
  setChildren(self, children) {
    self.label = String(children);
  }
});
var LevelBar = astalify(Gtk3.LevelBar, {
  getChildren() {
    return [];
  }
});
var Overlay = astalify(Gtk3.Overlay, {
  getChildren(self) {
    const children = [];
    let ch = self.get_first_child();
    while (ch !== null) {
      children.push(ch);
      ch = ch.get_next_sibling();
    }
    return children.filter((ch2) => ch2 !== self.child);
  },
  setChildren(self, children) {
    for (const child of filter(children)) {
      const types = type in child ? child[type].split(/\s+/) : [];
      if (types.includes("overlay")) {
        self.add_overlay(child);
      } else {
        self.set_child(child);
      }
      self.set_measure_overlay(child, types.includes("measure"));
      self.set_clip_overlay(child, types.includes("clip"));
    }
  }
});
var Revealer = astalify(Gtk3.Revealer);
var Slider = astalify(Astal5.Slider, {
  getChildren() {
    return [];
  }
});
var Stack = astalify(Gtk3.Stack, {
  setChildren(self, children) {
    for (const child of filter(children)) {
      if (child.name != "" && child.name != null) {
        self.add_named(child, child.name);
      } else {
        self.add_child(child);
      }
    }
  }
});
var Switch = astalify(Gtk3.Switch, {
  getChildren() {
    return [];
  }
});
var Window = astalify(Astal5.Window);
var MenuButton = astalify(Gtk3.MenuButton, {
  getChildren(self) {
    return [self.popover, self.child];
  },
  setChildren(self, children) {
    for (const child of filter(children)) {
      if (child instanceof Gtk3.Popover) {
        self.set_popover(child);
      } else {
        self.set_child(child);
      }
    }
  }
});
var Popover = astalify(Gtk3.Popover);

// src/services/Cursor.ts
var Cursor = class {
  constructor() {
    this.DEFAULT = Gdk2.Cursor.new_from_name("default", null);
    this.POINTER = Gdk2.Cursor.new_from_name("pointer", null);
    this.NOT_ALLOWED = Gdk2.Cursor.new_from_name("not-allowed", null);
  }
};
var Cursor_default = Cursor;

// src/services/Hyprland.ts
import AstalHyprland from "gi://AstalHyprland?version=0.1";

// ../../../../usr/share/astal/gjs/index.ts
import { default as default3 } from "gi://AstalIO?version=0.1";

// ../../../../usr/share/astal/gjs/file.ts
import Astal7 from "gi://AstalIO";
import Gio from "gi://Gio?version=2.0";
function monitorFile(path, callback) {
  return Astal7.monitor_file(path, (file, event) => {
    callback(file, event);
  });
}

// ../../../../usr/share/astal/gjs/gobject.ts
import GObject3 from "gi://GObject";
import { default as default2 } from "gi://GLib?version=2.0";
var meta = Symbol("meta");
var priv = Symbol("priv");
var { ParamSpec, ParamFlags } = GObject3;

// src/services/Hyprland.ts
var Hyprland = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
    this.instance = AstalHyprland.get_default();
  }
  async start() {
    this.listeners.set("submap", this.instance.connect("submap", this.onSubmap.bind(this)));
  }
  async stop() {
    this.listeners.forEach((id, event) => {
      this.instance.disconnect(id);
      this.listeners.delete(event);
    });
  }
  onSubmap(_source, name) {
    console.log("Submap event:", name);
    if (name === "resize") {
      execAsync("notify-send -a Hyprland -t 1000 'Resize mode activated'");
      return;
    }
    execAsync("notify-send -a Hyprland -t 1000 'Back to normal mode'");
  }
};
var Hyprland_default = Hyprland;

// src/services/Theme.ts
var Theme = class {
  constructor() {
    this.dir = `${default2.get_home_dir()}/.local/share/gohan/styles`;
    this.colors = `${this.dir}/colors.scss`;
    this.scss = `${this.dir}/styles.scss`;
    this.css = `${this.dir}/styles.css`;
  }
  async start() {
    await this.compileSass().catch(console.error);
    this.applyTheme();
    this.monitorColorChanges();
  }
  async stop() {
    if (this.fileMonitor) {
      this.fileMonitor.cancel();
      this.fileMonitor = void 0;
    }
  }
  async compileSass() {
    const scss = `${default2.get_home_dir()}/.local/share/gohan/styles/styles.scss`;
    const css = `${default2.get_home_dir()}/.local/share/gohan/styles/styles.css`;
    await execAsync(`sass ${scss} ${css}`).catch(console.error);
  }
  applyTheme() {
    const css = `${default2.get_home_dir()}/.local/share/gohan/styles/styles.css`;
    app_default.apply_css(css, true);
  }
  monitorColorChanges() {
    this.fileMonitor = monitorFile(this.colors, async (file, event) => {
      if (event == Gio.FileMonitorEvent.CHANGED) {
        await this.compileSass().catch(console.error);
        this.applyTheme();
      }
    });
  }
};
var Theme_default = Theme;

// src/services/Time.ts
var Time2 = class {
  constructor() {
    this.datetime = Variable("");
  }
  async start() {
    this.stop();
    this.datetime.poll(1e3, this.command(), (output) => {
      return output.trim();
    });
  }
  async stop() {
    this.datetime.drop();
  }
  subscribe(callback) {
    return this.datetime.subscribe(callback);
  }
  get() {
    return this.datetime.get();
  }
  command() {
    return "date +'%b %d, %H:%M'";
  }
};
var Time_default = Time2;

// ../../../../usr/share/astal/gjs/gtk4/jsx-runtime.ts
function jsx2(ctor, props) {
  return jsx(ctors, ctor, props);
}
var ctors = {
  box: Box,
  button: Button,
  centerbox: CenterBox,
  // circularprogress: Widget.CircularProgress,
  // drawingarea: Widget.DrawingArea,
  entry: Entry,
  image: Image,
  label: Label,
  levelbar: LevelBar,
  overlay: Overlay,
  revealer: Revealer,
  slider: Slider,
  stack: Stack,
  switch: Switch,
  window: Window,
  menubutton: MenuButton,
  popover: Popover
};
var jsxs = jsx2;

// src/widgets/Bar/Modules/Launcher.tsx
var Launcher = () => {
  return /* @__PURE__ */ jsx2("box", { cssClasses: ["Launcher"], children: /* @__PURE__ */ jsx2(
    "button",
    {
      onClicked: () => {
        execAsync(
          `rofi -show drun -run-command "uwsm app -- {cmd}"`
        );
      },
      tooltipText: "Launcher",
      cursor: gohan().Cursor.POINTER,
      children: /* @__PURE__ */ jsx2(
        "label",
        {
          cssClasses: ["icon"],
          label: "\u{F08C7}"
        }
      )
    }
  ) });
};
var Launcher_default = Launcher;

// src/widgets/commons/Separator.tsx
var Separator = (props) => {
  const classess = props.cssClasses || [];
  const orientation = props.orientation === void 0 ? Gtk4.Orientation.VERTICAL : props.orientation;
  if (orientation === Gtk4.Orientation.HORIZONTAL) {
    classess.push("Horizontal");
  } else {
    classess.push("Vertical");
  }
  return /* @__PURE__ */ jsx2(
    Gtk4.Separator,
    {
      ...props,
      cssClasses: classess,
      orientation,
      visible: props.visible || true
    }
  );
};
var Separator_default = Separator;

// src/widgets/Bar/Modules/Workspaces.tsx
var Workspaces = () => {
  const workspaces = bind(gohan().Workspaces);
  return /* @__PURE__ */ jsx2(
    "box",
    {
      cssClasses: ["Workspaces"],
      halign: Gtk4.Align.CENTER,
      valign: Gtk4.Align.BASELINE,
      spacing: 1,
      children: workspaces.as(
        (workspaces2) => workspaces2.map((workspace) => /* @__PURE__ */ jsx2(WorkspaceButton, { workspace }))
      )
    }
  );
};
var WorkspaceButton = ({ workspace }) => {
  const classes = [
    "WorkspaceButton",
    workspace.focused ? "Focused" : "",
    workspace.occupied ? "Occupied" : ""
  ];
  const workspaceName = workspace.ws.name === "10" ? "0" : workspace.ws.name;
  const tooltipText = `Switch to workspace ${workspaceName}`;
  const cursor = workspace.focused ? gohan().Cursor.DEFAULT : gohan().Cursor.POINTER;
  return /* @__PURE__ */ jsx2(
    "button",
    {
      cssClasses: classes,
      onClicked: () => {
        if (workspace.ws.id === gohan().Hyprland.instance.get_focused_workspace()?.id) {
          return;
        }
        workspace.ws.focus();
      },
      tooltipText,
      cursor,
      children: /* @__PURE__ */ jsx2(
        "label",
        {
          label: workspaceName,
          cssClasses: ["WorkspaceButtonLabel"],
          halign: Gtk4.Align.START,
          useUnderline: true
        }
      )
    }
  );
};
var Workspaces_default = Workspaces;

// src/widgets/Bar/Modules/FocusedClient.tsx
import Pango from "gi://Pango?version=1.0";
var FocusedClient = () => {
  const focusedClient = bind(gohan().FocusedClient);
  return /* @__PURE__ */ jsx2(
    "box",
    {
      name: "FocusedClient",
      cssClasses: ["FocusedClient"],
      halign: Gtk4.Align.CENTER,
      valign: Gtk4.Align.BASELINE,
      children: /* @__PURE__ */ jsx2(
        "label",
        {
          label: bind(focusedClient).as((client) => client.title),
          cssClasses: ["FocusedClientLabel"],
          maxWidthChars: 36,
          ellipsize: Pango.EllipsizeMode.MIDDLE
        }
      )
    }
  );
};
var FocusedClient_default = FocusedClient;

// src/widgets/Bar/Left.tsx
var Left = ({ gdkmonitor }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      name: `Left`,
      cssClasses: ["Section", "Left"],
      hexpand: true,
      halign: Gtk4.Align.START,
      valign: Gtk4.Align.CENTER,
      spacing: 10,
      children: [
        /* @__PURE__ */ jsx2(Launcher_default, {}),
        /* @__PURE__ */ jsx2(Separator_default, { orientation: Gtk4.Orientation.VERTICAL }),
        /* @__PURE__ */ jsx2(Workspaces_default, {}),
        /* @__PURE__ */ jsx2(Separator_default, { orientation: Gtk4.Orientation.VERTICAL }),
        /* @__PURE__ */ jsx2(FocusedClient_default, {})
      ]
    }
  );
};
var Left_default = Left;

// src/widgets/Bar/Modules/Tray.tsx
var ImageIcon = ({ item }) => {
  if (item.customIcon) {
    return /* @__PURE__ */ jsx2(
      "label",
      {
        cssClasses: ["icon", "TrayLabelIcon"],
        label: item.customIcon
      }
    );
  }
  return /* @__PURE__ */ jsx2(
    "image",
    {
      gicon: item.gicon,
      cssClasses: ["icon", "TrayImageIcon"],
      pixelSize: 16
    }
  );
};
var Tray = () => {
  return /* @__PURE__ */ jsx2(
    "box",
    {
      cssClasses: ["Tray"],
      spacing: 10,
      halign: Gtk4.Align.CENTER,
      valign: Gtk4.Align.CENTER,
      children: bind(gohan().Tray).as(
        (items) => items.map((item) => /* @__PURE__ */ jsxs(
          "menubutton",
          {
            setup: (self) => {
              self.insert_action_group(
                "dbusmenu",
                item.actionGroup
              );
            },
            cursor: gohan().Cursor.POINTER,
            tooltipMarkup: item.tooltip,
            cssClasses: ["TrayMenuButton"],
            halign: Gtk4.Align.CENTER,
            valign: Gtk4.Align.CENTER,
            children: [
              /* @__PURE__ */ jsx2(ImageIcon, { item }),
              Gtk4.PopoverMenu.new_from_model(item.menuModel)
            ]
          }
        ))
      )
    }
  );
};
var Tray_default = Tray;

// src/widgets/Bar/Center.tsx
var Center = ({ gdkmonitor }) => {
  return /* @__PURE__ */ jsx2(
    "box",
    {
      name: `Center`,
      cssClasses: ["Section", "Center"],
      hexpand: true,
      halign: Gtk4.Align.CENTER,
      valign: Gtk4.Align.CENTER,
      spacing: 10,
      children: /* @__PURE__ */ jsx2(Tray_default, {})
    }
  );
};
var Center_default = Center;

// src/widgets/Bar/Modules/Time.tsx
var Time3 = () => {
  return /* @__PURE__ */ jsx2("box", { cssClasses: ["Time"], hexpand: true, children: /* @__PURE__ */ jsx2("label", { label: bind(gohan().Time) }) });
};
var Time_default2 = Time3;

// src/widgets/Bar/Modules/Battery.tsx
var Battery = ({ gdkmonitor }) => {
  const battery = bind(gohan().Battery);
  return /* @__PURE__ */ jsx2(
    "box",
    {
      cssClasses: ["Battery"],
      hexpand: true,
      cursor: gohan().Cursor.POINTER,
      children: /* @__PURE__ */ jsx2(
        "button",
        {
          onButtonPressed: (_self, event) => {
            const [, x] = event.get_position();
            if (event.get_button() === Gdk2.BUTTON_PRIMARY) {
              gohan().WidgetsManager.hidePopoverWidgets(
                gdkmonitor,
                "BatteryMenu"
              );
              gohan().WidgetsManager.toggleWidget(
                "BatteryMenu",
                gdkmonitor,
                x
              );
            }
          },
          children: /* @__PURE__ */ jsxs("box", { spacing: 5, children: [
            /* @__PURE__ */ jsx2(
              "image",
              {
                iconName: bind(battery).as((b) => b.batteryIcon),
                cssClasses: ["icon", "Icon"]
              }
            ),
            /* @__PURE__ */ jsx2(
              "label",
              {
                label: bind(battery).as(
                  (b) => `${(b.percentage * 100).toFixed(0)}%`
                ),
                cssClasses: ["Percentage"],
                visible: bind(battery).as((b) => b.isBattery)
              }
            )
          ] })
        }
      )
    }
  );
};
var Battery_default = Battery;

// src/widgets/Bar/Modules/Volume.tsx
var Volume = ({ gdkmonitor }) => {
  const volume = bind(gohan().Volume);
  return /* @__PURE__ */ jsx2(
    "box",
    {
      cssClasses: ["Volume"],
      hexpand: true,
      cursor: gohan().Cursor.POINTER,
      children: /* @__PURE__ */ jsx2(
        "button",
        {
          onButtonPressed: (_self, event) => {
            const [, x] = event.get_position();
            if (event.get_button() === Gdk2.BUTTON_PRIMARY) {
              gohan().WidgetsManager.hidePopoverWidgets(
                gdkmonitor,
                "VolumeMenu"
              );
              gohan().WidgetsManager.toggleWidget(
                "VolumeMenu",
                gdkmonitor,
                x
              );
            }
          },
          children: /* @__PURE__ */ jsxs("box", { spacing: 5, children: [
            /* @__PURE__ */ jsx2(
              "image",
              {
                iconName: bind(volume).as((b) => b.volumeIcon),
                cssClasses: ["icon", "Icon"]
              }
            ),
            /* @__PURE__ */ jsx2(
              "label",
              {
                label: bind(volume).as(
                  (b) => `${(b.volume * 100).toFixed(0)}%`
                ),
                cssClasses: ["Percentage"]
              }
            )
          ] })
        }
      )
    }
  );
};
var Volume_default = Volume;

// src/widgets/Bar/Right.tsx
var Right = ({ gdkmonitor }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      name: `Right`,
      cssClasses: ["Section", "Right"],
      hexpand: true,
      halign: Gtk4.Align.END,
      valign: Gtk4.Align.CENTER,
      spacing: 10,
      children: [
        /* @__PURE__ */ jsx2(Volume_default, { gdkmonitor }),
        /* @__PURE__ */ jsx2(Battery_default, { gdkmonitor }),
        /* @__PURE__ */ jsx2(Time_default2, {})
      ]
    }
  );
};
var Right_default = Right;

// src/widgets/Bar/Bar.tsx
var Bar = (name, gdkmonitor) => {
  console.log("Creating Bar for monitor", gdkmonitor.connector);
  const { TOP, LEFT, RIGHT } = Astal6.WindowAnchor;
  return /* @__PURE__ */ jsx2(
    "window",
    {
      name,
      cssClasses: ["Bar"],
      gdkmonitor,
      exclusivity: Astal6.Exclusivity.EXCLUSIVE,
      anchor: TOP | LEFT | RIGHT,
      application: app_default,
      visible: true,
      children: /* @__PURE__ */ jsx2(
        "centerbox",
        {
          cssClasses: ["Container", "shadow", "rounded", "bordered"],
          startWidget: /* @__PURE__ */ jsx2(Left_default, { gdkmonitor }),
          centerWidget: /* @__PURE__ */ jsx2(Center_default, { gdkmonitor }),
          endWidget: /* @__PURE__ */ jsx2(Right_default, { gdkmonitor })
        }
      )
    }
  );
};
var Bar_default = Bar;

// src/widgets/PopoverMenu/PopoverMenu.tsx
var PopoverMenu = ({
  gdkmonitor,
  name,
  child,
  left = 9999,
  // Default to a large value to push the menu off-screen
  top = 0,
  right = 0,
  bottom = 0,
  valign = Gtk4.Align.START,
  halign = Gtk4.Align.START,
  onClose,
  visible = true
}) => {
  const { TOP, LEFT, RIGHT, BOTTOM } = Astal6.WindowAnchor;
  return /* @__PURE__ */ jsx2(
    "window",
    {
      name: `${name}_${gdkmonitor.connector}`,
      cssClasses: ["PopoverMenu"],
      gdkmonitor,
      keymode: Astal6.Keymode.ON_DEMAND,
      anchor: TOP | LEFT | RIGHT | BOTTOM,
      application: app_default,
      visible,
      onKeyPressed: (_event, keyval) => {
        if (keyval === Gdk2.KEY_Escape) {
          gohan().WidgetsManager.hideWidget(name, gdkmonitor);
        }
      },
      onButtonPressed: (self, e) => {
        const [, _x, _y] = e.get_position();
        const { x, y, width, height } = self.get_child().get_allocation();
        const xOut = _x < x || _x > x + width;
        const yOut = _y < y || _y > y + height;
        if (xOut || yOut) {
          gohan().WidgetsManager.hideWidget(name, gdkmonitor);
        }
      },
      setup: (self) => {
        setTimeout(() => {
          gohan().WidgetsManager.hideWidget(name, gdkmonitor);
        }, 500);
        self.set_default_size(1, 1);
      },
      children: /* @__PURE__ */ jsx2(
        "box",
        {
          onButtonPressed: (e) => true,
          cssClasses: ["Container", "shadow", "rounded", "bordered"],
          hexpand: true,
          vexpand: true,
          valign,
          halign,
          marginStart: left,
          marginTop: top,
          marginEnd: right,
          marginBottom: bottom,
          children: child
        }
      )
    }
  );
};
var PopoverMenu_default = PopoverMenu;

// src/widgets/BatteryMenu.tsx
var BatteryMenu = (name, gdkmonitor) => {
  return /* @__PURE__ */ jsx2(PopoverMenu_default, { gdkmonitor, name, children: /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["BatteryMenu"],
      hexpand: true,
      valign: Gtk4.Align.START,
      halign: Gtk4.Align.START,
      spacing: 10,
      vertical: true,
      children: [
        /* @__PURE__ */ jsx2(
          ProfileButton,
          {
            profile: "power-saver",
            after: () => {
              gohan().WidgetsManager.hideWidget(name, gdkmonitor);
            }
          }
        ),
        /* @__PURE__ */ jsx2(
          ProfileButton,
          {
            profile: "balanced",
            after: () => {
              gohan().WidgetsManager.hideWidget(name, gdkmonitor);
            }
          }
        ),
        /* @__PURE__ */ jsx2(
          ProfileButton,
          {
            profile: "performance",
            after: () => {
              gohan().WidgetsManager.hideWidget(name, gdkmonitor);
            }
          }
        )
      ]
    }
  ) });
};
var ProfileButton = ({ profile, after }) => {
  const battery = bind(gohan().Battery);
  return /* @__PURE__ */ jsx2(
    "button",
    {
      cssClasses: bind(battery).as((b) => {
        return b.powerProfile === profile ? ["ProfileButton", "Active"] : ["ProfileButton"];
      }),
      cursor: gohan().Cursor.POINTER,
      onClicked: () => {
        gohan().Battery.setPowerProfile(profile);
        after?.();
      },
      children: /* @__PURE__ */ jsx2("label", { label: profile.charAt(0).toUpperCase() + profile.slice(1) })
    }
  );
};
var BatteryMenu_default = BatteryMenu;

// src/widgets/VolumeMenu.tsx
var VolumeMenu = (name, gdkmonitor) => {
  const volume = bind(gohan().Volume);
  const speakers = bind(volume).as((v) => {
    const speakers2 = [...v.speakers];
    speakers2.sort((a, b) => b.id - a.id);
    return speakers2;
  });
  return /* @__PURE__ */ jsx2(PopoverMenu_default, { gdkmonitor, name, children: /* @__PURE__ */ jsx2(
    "box",
    {
      cssClasses: ["VolumeMenu"],
      hexpand: true,
      valign: Gtk4.Align.START,
      halign: Gtk4.Align.START,
      spacing: 10,
      vertical: true,
      children: bind(speakers).as(
        (speakers2) => speakers2.map((speaker) => /* @__PURE__ */ jsx2(
          SpeakerButton,
          {
            speaker,
            after: () => {
              gohan().WidgetsManager.hideWidget(
                name,
                gdkmonitor
              );
            },
            children: /* @__PURE__ */ jsx2("label", { label: speaker.description })
          }
        ))
      )
    }
  ) });
};
var SpeakerButton = ({ speaker, after }) => {
  return /* @__PURE__ */ jsx2(
    "button",
    {
      cssClasses: speaker.isDefault ? ["SpeakerButton", "Active"] : ["SpeakerButton"],
      cursor: gohan().Cursor.POINTER,
      onClicked: () => {
        speaker.set_is_default(true);
        after?.();
      },
      children: /* @__PURE__ */ jsx2("label", { label: speaker.description })
    }
  );
};
var VolumeMenu_default = VolumeMenu;

// src/widgets/Notification/NotificationItem.tsx
import AstalNotifd from "gi://AstalNotifd?version=0.1";

// src/widgets/Notification/Header.tsx
var Header = ({ notification }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["Header"],
      valign: Gtk4.Align.CENTER,
      vexpand: false,
      hexpand: false,
      children: [
        /* @__PURE__ */ jsxs(
          "box",
          {
            cssClasses: ["HeaderLeft"],
            halign: Gtk4.Align.START,
            vexpand: false,
            spacing: 5,
            children: [
              /* @__PURE__ */ jsx2(
                "image",
                {
                  cssClasses: ["AppIcon"],
                  iconName: notification.appIcon || notification.desktopEntry,
                  pixelSize: 18
                }
              ),
              /* @__PURE__ */ jsx2(
                "label",
                {
                  cssClasses: ["HeaderLabel"],
                  label: `${notification.appName || "Unknown App"}`
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ jsxs(
          "box",
          {
            cssClasses: ["HeaderRight"],
            halign: Gtk4.Align.END,
            hexpand: true,
            spacing: 5,
            children: [
              /* @__PURE__ */ jsx2(
                "label",
                {
                  cssClasses: ["HeaderTime"],
                  label: new Date(
                    notification.time * 1e3
                  ).toLocaleDateString("en-US", {
                    day: "2-digit",
                    month: "short",
                    hour: "2-digit",
                    minute: "2-digit",
                    second: void 0,
                    hour12: false
                  })
                }
              ),
              /* @__PURE__ */ jsx2(
                "button",
                {
                  cssClasses: ["CloseButton"],
                  tooltipText: "Close Notification",
                  onClicked: () => {
                    notification.dismiss();
                  },
                  children: /* @__PURE__ */ jsx2("label", { cssClasses: ["Icon"], label: "\u2715" })
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var Header_default = Header;

// src/widgets/Notification/Body.tsx
import Pango2 from "gi://Pango?version=1.0";
var isIcon = (icon) => {
  const iconTheme = new Gtk4.IconTheme();
  return iconTheme.has_icon(icon);
};
var fileExists = (path) => default2.file_test(path, default2.FileTest.EXISTS);
var MARKUP_SAFE_APPS = ["Hyprshot"];
var Body = ({ notification }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["Body"],
      valign: Gtk4.Align.CENTER,
      spacing: 10,
      vexpand: true,
      children: [
        notification.image && fileExists(notification.image) && /* @__PURE__ */ jsx2("box", { valign: Gtk4.Align.CENTER, cssClasses: ["Image"], children: /* @__PURE__ */ jsx2(
          "image",
          {
            file: notification.image,
            overflow: Gtk4.Overflow.HIDDEN,
            pixelSize: 48
          }
        ) }),
        notification.image && isIcon(notification.image) && /* @__PURE__ */ jsx2("box", { cssClasses: ["Icon"], valign: Gtk4.Align.CENTER, children: /* @__PURE__ */ jsx2(
          "image",
          {
            iconName: notification.image,
            pixelSize: 48,
            halign: Gtk4.Align.CENTER,
            valign: Gtk4.Align.CENTER
          }
        ) }),
        notification.appIcon && fileExists(notification.appIcon) && /* @__PURE__ */ jsx2("box", { cssClasses: ["Icon"], valign: Gtk4.Align.CENTER, children: /* @__PURE__ */ jsx2(
          "image",
          {
            file: notification.appIcon,
            pixelSize: 48,
            halign: Gtk4.Align.CENTER,
            valign: Gtk4.Align.CENTER
          }
        ) }),
        /* @__PURE__ */ jsxs("box", { hexpand: true, vertical: true, valign: Gtk4.Align.CENTER, spacing: 5, children: [
          /* @__PURE__ */ jsx2(
            "label",
            {
              ellipsize: Pango2.EllipsizeMode.END,
              maxWidthChars: 30,
              cssClasses: ["Summary"],
              halign: Gtk4.Align.START,
              xalign: 0,
              label: notification.summary
            }
          ),
          notification.body && /* @__PURE__ */ jsx2(
            "label",
            {
              cssClasses: ["Body"],
              maxWidthChars: 30,
              wrap: true,
              halign: Gtk4.Align.START,
              xalign: 0,
              label: notification.body,
              selectable: true,
              useMarkup: MARKUP_SAFE_APPS.includes(
                notification.appName
              )
            }
          )
        ] })
      ]
    }
  );
};
var Body_default = Body;

// src/widgets/Notification/Footer.tsx
import AstalHyprland2 from "gi://AstalHyprland?version=0.1";
var hyprland = AstalHyprland2.get_default();
var customActions = {
  Hyprshot: [
    {
      label: "Open",
      action: (notification) => {
        const file = notification.appIcon;
        const dir = file.substring(0, file.lastIndexOf("/"));
        execAsync(`xdg-open ${dir}`);
      }
    },
    {
      label: "View",
      action: (notification) => {
        const file = notification.appIcon;
        execAsync(`xdg-open ${file}`);
      }
    },
    {
      label: "Edit",
      action: (notification) => {
        const file = notification.appIcon;
        execAsync(`swappy -f ${file}`);
      }
    }
  ]
};
var Footer = ({ notification }) => {
  const actions = notification.get_actions();
  return /* @__PURE__ */ jsx2("box", { cssClasses: ["Footer"], children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Actions"], spacing: 6, children: [
    actions.map((action) => /* @__PURE__ */ jsx2(
      "button",
      {
        hexpand: true,
        onClicked: () => {
          notification.invoke(action.id);
          notification.dismiss();
          const clients = hyprland.get_clients();
          const client = clients.find(
            (c) => c.class.toLowerCase().includes(
              notification.appName.toLowerCase()
            )
          );
          if (client) {
            hyprland.dispatch(
              "focuswindow",
              `class:${client.class}`
            );
          }
        },
        children: /* @__PURE__ */ jsx2(
          "label",
          {
            label: action.label,
            halign: Gtk4.Align.CENTER,
            hexpand: true
          }
        )
      }
    )),
    customActions[notification.appName]?.map(
      (customAction) => /* @__PURE__ */ jsx2(
        "button",
        {
          hexpand: true,
          onClicked: () => {
            customAction.action(notification);
            notification.dismiss();
          },
          children: /* @__PURE__ */ jsx2(
            "label",
            {
              label: customAction.label,
              halign: Gtk4.Align.CENTER,
              hexpand: true
            }
          )
        }
      )
    )
  ] }) });
};
var Footer_default = Footer;

// src/widgets/Notification/NotificationItem.tsx
var notifd = AstalNotifd.get_default();
var NotificationItem = ({ timer }) => {
  const notification = notifd.get_notification(timer.id);
  if (!notification) {
    return null;
  }
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["NotificationItem", "shadow", "rounded", "bordered"],
      vertical: true,
      setup: (self) => {
        self.set_css_classes([
          "NotificationItem",
          "shadow",
          "rounded",
          "bordered",
          notification.urgency === AstalNotifd.Urgency.CRITICAL ? "Critical" : ""
        ]);
      },
      onHoverEnter: () => {
        timer.stop();
      },
      onHoverLeave: () => {
        timer.start();
      },
      spacing: 5,
      vexpand: false,
      children: [
        /* @__PURE__ */ jsx2(Header_default, { notification }),
        /* @__PURE__ */ jsx2(Body_default, { notification }),
        /* @__PURE__ */ jsx2(Footer_default, { notification })
      ]
    }
  );
};
var NotificationItem_default = NotificationItem;

// src/widgets/Notification/NotificationPopup.tsx
var NotificationPopup = (name, gdkmonitor) => {
  const { TOP, RIGHT } = Astal6.WindowAnchor;
  return /* @__PURE__ */ jsx2(
    "window",
    {
      name,
      namespace: "NotificationPopup",
      application: app_default,
      cssClasses: ["NotificationPopup"],
      gdkmonitor,
      layer: Astal6.Layer.TOP,
      anchor: TOP | RIGHT,
      visible: true,
      setup: (self) => {
        self.set_default_size(1, 1);
        gohan().NotificationManager.subscribe((entry) => {
          if (entry && entry.actives && entry.actives.length > 0) {
            self.show();
          } else {
            self.hide();
          }
        });
      },
      children: /* @__PURE__ */ jsx2(
        "box",
        {
          cssClasses: ["Container"],
          vertical: true,
          spacing: 10,
          valign: Gtk4.Align.START,
          children: bind(gohan().NotificationManager).as((entry) => {
            return [...entry.actives].map((timer) => /* @__PURE__ */ jsx2(NotificationItem_default, { timer }));
          })
        }
      )
    }
  );
};
var NotificationPopup_default = NotificationPopup;

// src/services/WidgetsManager.ts
var WidgetsManager = class {
  constructor() {
    this.widgets = [];
  }
  async start() {
  }
  async stop() {
    for (const widget of this.widgets) {
      widget.window.destroy();
    }
  }
  initWidgets(gdkmonitor) {
    function initWidget(name, createFn, type2 = "default") {
      return {
        name,
        gdkmonitor,
        window: createFn(name, gdkmonitor),
        type: type2
      };
    }
    const newWidgets = [
      initWidget(`Bar`, Bar_default),
      initWidget(`NotificationPopup`, NotificationPopup_default),
      initWidget("VolumeMenu", VolumeMenu_default, "popover"),
      initWidget("BatteryMenu", BatteryMenu_default, "popover")
    ];
    this.widgets.push(...newWidgets);
    return newWidgets;
  }
  destroyWidgets(gdkmonitor) {
    const widgetsToRemove = this.widgets.filter(
      (widget) => widget.gdkmonitor.connector === gdkmonitor.connector
    );
    widgetsToRemove.forEach((widget) => widget.window.destroy());
    this.widgets = this.widgets.filter(
      (widget) => widget.gdkmonitor.connector !== gdkmonitor.connector
    );
  }
  getWidget(name, gdkmonitor) {
    return this.widgets.find((widget) => {
      return widget.name === name && widget.gdkmonitor.connector === gdkmonitor.connector;
    });
  }
  showWidget(name, gdkmonitor, x = 0, y = 0) {
    const widget = this.getWidget(name, gdkmonitor);
    const child = widget?.window?.get_child();
    const { width } = child.get_allocation();
    child?.set_margin_start(x - width / 2);
    child?.set_margin_top(y);
    widget?.window?.set_visible(true);
  }
  hideWidget(name, gdkmonitor) {
    const widget = this.getWidget(name, gdkmonitor);
    widget?.window.set_visible(false);
  }
  toggleWidget(name, gdkmonitor, x = 0, y = 0) {
    const widget = this.getWidget(name, gdkmonitor);
    if (widget?.window.get_visible()) {
      this.hideWidget(name, gdkmonitor);
    } else {
      this.showWidget(name, gdkmonitor, x, y);
    }
  }
  hidePopoverWidgets(gdkmonitor, exceptName) {
    this.widgets.forEach((widget) => {
      if (widget.gdkmonitor.connector === gdkmonitor.connector && widget.type === "popover" && widget.name !== exceptName) {
        widget.window.set_visible(false);
      }
    });
  }
};
var WidgetsManager_default = WidgetsManager;

// src/services/Workspaces.ts
import AstalHyprland3 from "gi://AstalHyprland?version=0.1";
var maxWorkspaces = 5;
var workspacesNum = Array.from({ length: maxWorkspaces - 1 }, (_, i) => i);
function createWorkspaces(focusedId) {
  return workspacesNum.map((i) => {
    let workspace = gohan().Hyprland.instance.get_workspace(i + 1);
    if (!workspace) {
      workspace = AstalHyprland3.Workspace.dummy(i + 1, null);
    }
    return {
      ws: workspace,
      focused: workspace.id === focusedId,
      occupied: workspace.get_clients().length > 0
    };
  });
}
var Workspaces2 = class {
  constructor() {
    this.workspaces = Variable([]);
  }
  async start() {
    const focused = gohan().Hyprland.instance.get_focused_workspace();
    const workspaces = createWorkspaces(focused.id);
    this.workspaces.set(workspaces);
    gohan().Hyprland.instance.connect(
      "event",
      this.onHyprlandEvent.bind(this)
    );
  }
  async stop() {
    this.workspaces.drop();
  }
  onHyprlandEvent(instance, event, args) {
    const focused = gohan().Hyprland.instance.get_focused_workspace();
    const workspaces = createWorkspaces(focused.id);
    const index = workspaces.findIndex((ws) => ws.ws.id === focused.id);
    if (index === -1) {
      if (workspaces.length >= maxWorkspaces) {
        workspaces.pop();
      }
      workspaces.push({
        ws: focused,
        focused: true,
        occupied: focused.get_clients().length > 0
      });
    } else {
      let lastWorspace = gohan().Hyprland.instance.get_workspace(maxWorkspaces);
      if (!lastWorspace) {
        lastWorspace = AstalHyprland3.Workspace.dummy(
          maxWorkspaces,
          null
        );
      }
      workspaces.push({
        ws: lastWorspace,
        focused: false,
        occupied: lastWorspace.get_clients().length > 0
      });
    }
    this.workspaces.set(workspaces);
  }
  subscribe(callback) {
    return this.workspaces.subscribe(callback);
  }
  get() {
    return this.workspaces.get();
  }
};
var Workspaces_default2 = Workspaces2;

// src/services/Battery.ts
import AstalBattery from "gi://AstalBattery?version=0.1";
var Battery2 = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
    this.instance = AstalBattery.get_default();
    this.state = new Variable({
      isBattery: this.instance.get_is_battery(),
      level: this.instance.get_battery_level(),
      percentage: this.instance.get_percentage(),
      icon: this.instance.get_icon_name(),
      batteryIcon: this.instance.get_battery_icon_name(),
      isCharging: this.instance.get_charging(),
      powerProfile: ""
    });
    this.updateState();
  }
  async start() {
    this.listeners.set(
      "notify",
      this.instance.connect("notify", this.updateState.bind(this))
    );
  }
  async stop() {
    this.listeners.forEach((id, event) => {
      this.instance.disconnect(id);
      this.listeners.delete(event);
    });
    this.state.drop();
  }
  subscribe(callback) {
    return this.state.subscribe(callback);
  }
  get() {
    return this.state.get();
  }
  async getCurrentPowerProfile() {
    return await execAsync("powerprofilesctl get").then(
      (result) => result.trim()
    );
  }
  async setPowerProfile(profile) {
    await execAsync(`powerprofilesctl set ${profile}`);
    this.updateState();
  }
  async updateState() {
    this.state.set({
      isBattery: this.instance.get_is_battery(),
      level: this.instance.get_battery_level(),
      percentage: this.instance.get_percentage(),
      icon: this.instance.get_icon_name(),
      batteryIcon: this.instance.get_battery_icon_name(),
      isCharging: this.instance.get_charging(),
      powerProfile: await this.getCurrentPowerProfile()
    });
  }
};
var Battery_default2 = Battery2;

// src/services/MonitorsManager.ts
var MonitorsManager = class {
  constructor() {
    this.monitors = /* @__PURE__ */ new Map();
    this.listeners = /* @__PURE__ */ new Map();
  }
  async start() {
    this.listeners.set(
      "monitor-added",
      gohan().Hyprland.instance.connect(
        "monitor-added",
        this.onMonitorAdded.bind(this)
      )
    );
    this.listeners.set(
      "monitor-removed",
      gohan().Hyprland.instance.connect(
        "monitor-removed",
        this.onMonitorRemoved.bind(this)
      )
    );
    const monitors = gohan().Hyprland.instance.get_monitors();
    monitors.forEach((monitor) => {
      this.onMonitorAdded(gohan().Hyprland.instance, monitor);
    });
  }
  async stop() {
    this.listeners.forEach((id, event) => {
      gohan().Hyprland.instance.disconnect(id);
      this.listeners.delete(event);
    });
    this.monitors.clear();
  }
  onMonitorAdded(_source, monitor) {
    if (this.monitors.has(monitor.id)) {
      console.log("Monitor already exists, skipping:", monitor.id);
      return;
    }
    this.monitors.set(monitor.id, monitor);
    const gdkmonitor = app_default.get_monitors().find(
      (m) => m.connector === monitor.name
    );
    if (!gdkmonitor) {
      return;
    }
    gohan().WidgetsManager.initWidgets(gdkmonitor);
  }
  onMonitorRemoved(_source, id) {
    const monitor = this.monitors.get(id);
    if (!monitor) {
      return;
    }
    const gdkmonitor = app_default.get_monitors().find(
      (m) => m.connector === monitor.name
    );
    if (!gdkmonitor) {
      return;
    }
    gohan().WidgetsManager.destroyWidgets(gdkmonitor);
    this.monitors.delete(id);
  }
};
var MonitorsManager_default = MonitorsManager;

// src/services/Volume.ts
import AstalWp from "gi://AstalWp?version=0.1";
var Volume2 = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
    this.instance = AstalWp.get_default();
    this.state = Variable({
      volume: 50,
      volumeIcon: "audio-volume-medium-symbolic",
      speakers: [],
      microphonoes: []
    });
  }
  async start() {
    this.listeners.set(
      "ready",
      this.instance.connect("ready", (_source) => {
        this.state.set({
          volume: this.instance.defaultSpeaker.volume,
          volumeIcon: this.instance.defaultSpeaker.volumeIcon,
          speakers: this.instance.audio.get_speakers() || [],
          microphonoes: this.instance.audio.get_microphones() || []
        });
      })
    );
    this.listeners.set(
      "volume-changes",
      this.instance.defaultSpeaker.connect("notify", (_source, pspec) => {
        const events = ["volume", "volumeIcon", "mute"];
        if (events.includes(pspec.name)) {
          this.state.set({
            ...this.state.get(),
            volume: this.instance.defaultSpeaker.volume,
            volumeIcon: this.instance.defaultSpeaker.volumeIcon,
            speakers: this.instance.audio.get_speakers() || [],
            microphonoes: this.instance.audio.get_microphones() || []
          });
        }
      })
    );
  }
  async stop() {
    this.listeners.forEach((id, event) => {
      this.instance.disconnect(id);
      this.listeners.delete(event);
    });
    this.state.drop();
  }
  subscribe(callback) {
    return this.state.subscribe(callback);
  }
  get() {
    return this.state.get();
  }
};
var Volume_default2 = Volume2;

// src/services/NotificationManager.ts
import AstalNotifd3 from "gi://AstalNotifd?version=0.1";

// src/services/NotificationTimer.ts
import AstalNotifd2 from "gi://AstalNotifd?version=0.1";
var TICK = 10;
var CRITICAL_TICK = 30;
var NotificationTimer = class {
  constructor(id, urgency, dismisser) {
    this.id = id;
    this.tick = Variable(
      urgency === AstalNotifd2.Urgency.CRITICAL ? CRITICAL_TICK : TICK
    );
    this.dismisser = dismisser;
    this.start();
  }
  start() {
    if (this.interval) {
      return;
    }
    this.interval = interval(1e3, () => {
      const currentTick = this.tick.get();
      if (currentTick <= 0) {
        this.interval?.cancel();
        this.interval = void 0;
        this.dismisser(this.id);
      } else {
        this.tick.set(currentTick - 1);
      }
    });
  }
  stop() {
    this.interval?.cancel();
    this.interval = void 0;
    this.tick.set(TICK);
  }
};
var NotificationTimer_default = NotificationTimer;

// src/services/NotificationManager.ts
var MAX_PROCESSING = 3;
var NotificationManager = class {
  constructor() {
    this.actives = [];
    this.listeners = /* @__PURE__ */ new Map();
    this.instance = AstalNotifd3.get_default();
    this.instance.ignoreTimeout = true;
    this.list = this.instance.get_notifications().sort((a, b) => {
      return b.time - a.time;
    });
    this.queue = [...this.list].reverse().map((n) => n.id);
    this.entry = Variable({
      list: this.list,
      queue: this.queue,
      actives: this.actives
    });
  }
  async start() {
    this.listeners.set(
      "notified",
      this.instance.connect("notified", (_source, id, replaced) => {
        this.onNotified(_source, id, replaced);
      })
    );
    this.listeners.set(
      "resolved",
      this.instance.connect("resolved", (_source, id, reason) => {
        this.onResolved(_source, id, reason);
      })
    );
    this.processQueue();
  }
  async stop() {
    this.listeners.forEach((id, event) => {
      this.instance.disconnect(id);
      this.listeners.delete(event);
    });
    this.entry.drop();
  }
  onNotified(_source, id, replaced) {
    const notification = this.instance.get_notification(id);
    if (!notification) {
      return;
    }
    if (this.instance.dontDisturb && notification.urgency !== AstalNotifd3.Urgency.CRITICAL) {
      return;
    }
    this.queue.push(id);
    if (!this.list.some((n) => n.id === id)) {
      this.list.unshift(notification);
    }
    this.notify();
    this.processQueue();
  }
  onResolved(_source, id, reason) {
    const index = this.queue.indexOf(id);
    if (index !== -1) {
      this.queue.splice(index, 1);
    }
    const activeIndex = this.actives.findIndex((n) => n.id === id);
    if (activeIndex !== -1) {
      this.actives.splice(activeIndex, 1);
    }
    this.list = this.list.filter((n) => n.id !== id);
    this.notify();
    timeout(500, () => {
      this.processQueue();
    });
  }
  processQueue() {
    if (this.actives.length >= MAX_PROCESSING) {
      return;
    }
    if (this.queue.length === 0) {
      return;
    }
    const id = this.queue.shift();
    if (id === void 0) {
      return;
    }
    const notification = this.instance.get_notification(id);
    this.actives.push(
      new NotificationTimer_default(
        id,
        notification.urgency,
        this.softDismiss.bind(this)
      )
    );
    this.notify();
    timeout(500, () => {
      this.processQueue();
    });
  }
  get() {
    return this.entry.get();
  }
  subscribe(callback) {
    return this.entry.subscribe(callback);
  }
  softDismiss(id) {
    const index = this.actives.findIndex((n) => n.id === id);
    if (index !== -1) {
      this.actives.splice(index, 1);
    }
    this.notify();
    timeout(500, () => {
      this.processQueue();
    });
  }
  resolveAll() {
    this.queue = [];
    this.actives.forEach((timer) => timer.stop());
    this.actives = [];
    this.list = [];
    this.notify();
    for (const notification of this.instance.get_notifications()) {
      notification.dismiss();
    }
  }
  notify() {
    this.entry.set({
      list: this.list,
      queue: this.queue,
      actives: [...this.actives].reverse()
    });
  }
};
var NotificationManager_default = NotificationManager;

// src/services/Tray.ts
import AstalTray from "gi://AstalTray?version=0.1";
var CUSTOM_ICONS = {
  discord: "\uF1FF",
  steam: "\uF1B6",
  spotify: "\uF1BC"
};
var USE_CUSTOM_ICONS = [/steam/i, /discord/i, /spotify/i];
function getSearchWith(item) {
  const title = item.title;
  const tooltipMarkup = item.tooltipMarkup;
  return title && title.length ? title : tooltipMarkup;
}
function shouldUseCustomIcon(searchWith) {
  return USE_CUSTOM_ICONS.some((regex) => searchWith.match(regex));
}
function getCustomIcon(item) {
  const searchWith = getSearchWith(item);
  const shouldUse = shouldUseCustomIcon(searchWith);
  if (!shouldUse) {
    return null;
  }
  for (const [key, value] of Object.entries(CUSTOM_ICONS)) {
    if (searchWith.match(new RegExp(key, "i"))) {
      return value;
    }
  }
  return "\u{F082B}";
}
function toTitleCase(str) {
  return str.toLowerCase().split(" ").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(" ");
}
function getTooltipMarkup(item) {
  return toTitleCase(getSearchWith(item));
}
var Tray2 = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
    this.instance = AstalTray.get_default();
    this.entries = Variable(
      this.instance.get_items().map((item) => {
        return {
          item,
          item_id: item.get_item_id(),
          title: item.get_title(),
          tooltip: getTooltipMarkup(item),
          gicon: item.get_gicon(),
          customIcon: getCustomIcon(item),
          menuModel: item.get_menu_model(),
          actionGroup: item.get_action_group()
        };
      })
    );
  }
  async start() {
    this.listeners.set(
      "item-added",
      this.instance.connect("item-added", (source, item_id) => {
        const item = this.instance.get_item(item_id);
        const entry = {
          item,
          item_id: item.get_item_id(),
          title: item.get_title(),
          tooltip: getTooltipMarkup(item),
          gicon: item.get_gicon(),
          customIcon: getCustomIcon(item),
          menuModel: item.get_menu_model(),
          actionGroup: item.get_action_group()
        };
        this.entries.set([...this.entries.get(), entry]);
      })
    );
    this.listeners.set(
      "item-removed",
      this.instance.connect("item-removed", (source, item_id) => {
        const updatedEntries = this.entries.get().filter((entry) => entry.item_id !== item_id);
        this.entries.set(updatedEntries);
      })
    );
  }
  async stop() {
    this.listeners.forEach((id, name) => {
      this.instance.disconnect(id);
      this.listeners.delete(name);
    });
    this.entries.drop();
  }
  subscribe(callback) {
    return this.entries.subscribe(callback);
  }
  get() {
    return this.entries.get();
  }
};
var Tray_default2 = Tray2;

// src/services/FocusedClient.ts
var FocusedClient2 = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Map();
    this.client = Variable({
      title: ""
    });
  }
  async start() {
    this.listeners.set(
      "focused-client-changed",
      gohan().Hyprland.instance.connect(
        "notify::focused-client",
        (source, pspec) => {
          this.client.set({
            title: gohan().Hyprland.instance.get_focused_client()?.title || ""
          });
        }
      )
    );
  }
  async stop() {
    this.listeners.forEach((id) => {
      gohan().Hyprland.instance.disconnect(id);
    });
    this.listeners.clear();
  }
  subscribe(callback) {
    return this.client.subscribe(callback);
  }
  get() {
    return this.client.get();
  }
};
var FocusedClient_default2 = FocusedClient2;

// src/services/Gohan.ts
var Gohan = class {
  constructor() {
    this.Cursor = new Cursor_default();
    this.Theme = new Theme_default();
    this.Hyprland = new Hyprland_default();
    this.MonitorsManager = new MonitorsManager_default();
    this.WidgetsManager = new WidgetsManager_default();
    this.NotificationManager = new NotificationManager_default();
    this.Time = new Time_default();
    this.Workspaces = new Workspaces_default2();
    this.Battery = new Battery_default2();
    this.Volume = new Volume_default2();
    this.Tray = new Tray_default2();
    this.FocusedClient = new FocusedClient_default2();
  }
  async start() {
    console.log("Gohan service is starting...");
    await this.Hyprland.start();
    await this.MonitorsManager.start();
    await this.WidgetsManager.start();
    await this.NotificationManager.start();
    await this.Time.start();
    await this.Workspaces.start();
    await this.Battery.start();
    await this.Volume.start();
    await this.Tray.start();
    await this.FocusedClient.start();
    await this.Theme.start();
  }
  async stop() {
    console.log("Gohan service is stopping...");
    await this.Theme.stop();
    await this.Time.stop();
    await this.Workspaces.stop();
    await this.Battery.stop();
    await this.Volume.stop();
    await this.Tray.stop();
    await this.NotificationManager.stop();
    await this.WidgetsManager.stop();
    await this.MonitorsManager.stop();
    await this.Hyprland.stop();
    await this.FocusedClient.stop();
  }
};
var _gohan;
function gohan() {
  if (!_gohan) {
    _gohan = new Gohan();
  }
  return _gohan;
}

// src/app.tsx
app_default.start({
  instanceName: "Gohan",
  main() {
    gohan().start();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9ndGs0L2luZGV4LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hc3RhbC9nanMvdmFyaWFibGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9iaW5kaW5nLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hc3RhbC9nanMvdGltZS50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYXN0YWwvZ2pzL3Byb2Nlc3MudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9fYXN0YWwudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9ndGs0L2FzdGFsaWZ5LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hc3RhbC9nanMvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9vdmVycmlkZXMudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9fYXBwLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hc3RhbC9nanMvZ3RrNC93aWRnZXQudHMiLCAic3JjL3NlcnZpY2VzL0N1cnNvci50cyIsICJzcmMvc2VydmljZXMvSHlwcmxhbmQudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9pbmRleC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYXN0YWwvZ2pzL2ZpbGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2FzdGFsL2dqcy9nb2JqZWN0LnRzIiwgInNyYy9zZXJ2aWNlcy9UaGVtZS50cyIsICJzcmMvc2VydmljZXMvVGltZS50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYXN0YWwvZ2pzL2d0azQvanN4LXJ1bnRpbWUudHMiLCAic3JjL3dpZGdldHMvQmFyL01vZHVsZXMvTGF1bmNoZXIudHN4IiwgInNyYy93aWRnZXRzL2NvbW1vbnMvU2VwYXJhdG9yLnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvTW9kdWxlcy9Xb3Jrc3BhY2VzLnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvTW9kdWxlcy9Gb2N1c2VkQ2xpZW50LnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvTGVmdC50c3giLCAic3JjL3dpZGdldHMvQmFyL01vZHVsZXMvVHJheS50c3giLCAic3JjL3dpZGdldHMvQmFyL0NlbnRlci50c3giLCAic3JjL3dpZGdldHMvQmFyL01vZHVsZXMvVGltZS50c3giLCAic3JjL3dpZGdldHMvQmFyL01vZHVsZXMvQmF0dGVyeS50c3giLCAic3JjL3dpZGdldHMvQmFyL01vZHVsZXMvVm9sdW1lLnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvUmlnaHQudHN4IiwgInNyYy93aWRnZXRzL0Jhci9CYXIudHN4IiwgInNyYy93aWRnZXRzL1BvcG92ZXJNZW51L1BvcG92ZXJNZW51LnRzeCIsICJzcmMvd2lkZ2V0cy9CYXR0ZXJ5TWVudS50c3giLCAic3JjL3dpZGdldHMvVm9sdW1lTWVudS50c3giLCAic3JjL3dpZGdldHMvTm90aWZpY2F0aW9uL05vdGlmaWNhdGlvbkl0ZW0udHN4IiwgInNyYy93aWRnZXRzL05vdGlmaWNhdGlvbi9IZWFkZXIudHN4IiwgInNyYy93aWRnZXRzL05vdGlmaWNhdGlvbi9Cb2R5LnRzeCIsICJzcmMvd2lkZ2V0cy9Ob3RpZmljYXRpb24vRm9vdGVyLnRzeCIsICJzcmMvd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uUG9wdXAudHN4IiwgInNyYy9zZXJ2aWNlcy9XaWRnZXRzTWFuYWdlci50cyIsICJzcmMvc2VydmljZXMvV29ya3NwYWNlcy50cyIsICJzcmMvc2VydmljZXMvQmF0dGVyeS50cyIsICJzcmMvc2VydmljZXMvTW9uaXRvcnNNYW5hZ2VyLnRzIiwgInNyYy9zZXJ2aWNlcy9Wb2x1bWUudHMiLCAic3JjL3NlcnZpY2VzL05vdGlmaWNhdGlvbk1hbmFnZXIudHMiLCAic3JjL3NlcnZpY2VzL05vdGlmaWNhdGlvblRpbWVyLnRzIiwgInNyYy9zZXJ2aWNlcy9UcmF5LnRzIiwgInNyYy9zZXJ2aWNlcy9Gb2N1c2VkQ2xpZW50LnRzIiwgInNyYy9zZXJ2aWNlcy9Hb2hhbi50cyIsICJzcmMvYXBwLnRzeCJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBhc3RhbGlmeSwgeyB0eXBlIENvbnN0cnVjdFByb3BzIH0gZnJvbSBcIi4vYXN0YWxpZnkuanNcIlxuXG5leHBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfVxuZXhwb3J0IHsgZGVmYXVsdCBhcyBBcHAgfSBmcm9tIFwiLi9hcHAuanNcIlxuZXhwb3J0IHsgYXN0YWxpZnksIENvbnN0cnVjdFByb3BzIH1cbmV4cG9ydCAqIGFzIFdpZGdldCBmcm9tIFwiLi93aWRnZXQuanNcIlxuZXhwb3J0IHsgaG9vayB9IGZyb20gXCIuLi9fYXN0YWxcIlxuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBCaW5kaW5nLCB7IHR5cGUgQ29ubmVjdGFibGUsIHR5cGUgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vYmluZGluZy5qc1wiXG5pbXBvcnQgeyBpbnRlcnZhbCB9IGZyb20gXCIuL3RpbWUuanNcIlxuaW1wb3J0IHsgZXhlY0FzeW5jLCBzdWJwcm9jZXNzIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmNsYXNzIFZhcmlhYmxlV3JhcHBlcjxUPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBwcml2YXRlIHZhcmlhYmxlITogQXN0YWwuVmFyaWFibGVCYXNlXG4gICAgcHJpdmF0ZSBlcnJIYW5kbGVyPyA9IGNvbnNvbGUuZXJyb3JcblxuICAgIHByaXZhdGUgX3ZhbHVlOiBUXG4gICAgcHJpdmF0ZSBfcG9sbD86IEFzdGFsLlRpbWVcbiAgICBwcml2YXRlIF93YXRjaD86IEFzdGFsLlByb2Nlc3NcblxuICAgIHByaXZhdGUgcG9sbEludGVydmFsID0gMTAwMFxuICAgIHByaXZhdGUgcG9sbEV4ZWM/OiBzdHJpbmdbXSB8IHN0cmluZ1xuICAgIHByaXZhdGUgcG9sbFRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVFxuICAgIHByaXZhdGUgcG9sbEZuPzogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+XG5cbiAgICBwcml2YXRlIHdhdGNoVHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBUXG4gICAgcHJpdmF0ZSB3YXRjaEV4ZWM/OiBzdHJpbmdbXSB8IHN0cmluZ1xuXG4gICAgY29uc3RydWN0b3IoaW5pdDogVCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX3ZhbHVlID0gaW5pdFxuICAgICAgICB0aGlzLnZhcmlhYmxlID0gbmV3IEFzdGFsLlZhcmlhYmxlQmFzZSgpXG4gICAgICAgIHRoaXMudmFyaWFibGUuY29ubmVjdChcImRyb3BwZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zdG9wV2F0Y2goKVxuICAgICAgICAgICAgdGhpcy5zdG9wUG9sbCgpXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMudmFyaWFibGUuY29ubmVjdChcImVycm9yXCIsIChfLCBlcnIpID0+IHRoaXMuZXJySGFuZGxlcj8uKGVycikpXG4gICAgICAgIHJldHVybiBuZXcgUHJveHkodGhpcywge1xuICAgICAgICAgICAgYXBwbHk6ICh0YXJnZXQsIF8sIGFyZ3MpID0+IHRhcmdldC5fY2FsbChhcmdzWzBdKSxcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm0/OiAodmFsdWU6IFQpID0+IFIpOiBCaW5kaW5nPFI+IHtcbiAgICAgICAgY29uc3QgYiA9IEJpbmRpbmcuYmluZCh0aGlzKVxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gYi5hcyh0cmFuc2Zvcm0pIDogYiBhcyB1bmtub3duIGFzIEJpbmRpbmc8Uj5cbiAgICB9XG5cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhgVmFyaWFibGU8JHt0aGlzLmdldCgpfT5gKVxuICAgIH1cblxuICAgIGdldCgpOiBUIHsgcmV0dXJuIHRoaXMuX3ZhbHVlIH1cbiAgICBzZXQodmFsdWU6IFQpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSB0aGlzLl92YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgdGhpcy52YXJpYWJsZS5lbWl0KFwiY2hhbmdlZFwiKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhcnRQb2xsKCkge1xuICAgICAgICBpZiAodGhpcy5fcG9sbClcbiAgICAgICAgICAgIHJldHVyblxuXG4gICAgICAgIGlmICh0aGlzLnBvbGxGbikge1xuICAgICAgICAgICAgdGhpcy5fcG9sbCA9IGludGVydmFsKHRoaXMucG9sbEludGVydmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdiA9IHRoaXMucG9sbEZuISh0aGlzLmdldCgpKVxuICAgICAgICAgICAgICAgIGlmICh2IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICB2LnRoZW4odiA9PiB0aGlzLnNldCh2KSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gdGhpcy52YXJpYWJsZS5lbWl0KFwiZXJyb3JcIiwgZXJyKSlcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldCh2KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5wb2xsRXhlYykge1xuICAgICAgICAgICAgdGhpcy5fcG9sbCA9IGludGVydmFsKHRoaXMucG9sbEludGVydmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgZXhlY0FzeW5jKHRoaXMucG9sbEV4ZWMhKVxuICAgICAgICAgICAgICAgICAgICAudGhlbih2ID0+IHRoaXMuc2V0KHRoaXMucG9sbFRyYW5zZm9ybSEodiwgdGhpcy5nZXQoKSkpKVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IHRoaXMudmFyaWFibGUuZW1pdChcImVycm9yXCIsIGVycikpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhcnRXYXRjaCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3dhdGNoKVxuICAgICAgICAgICAgcmV0dXJuXG5cbiAgICAgICAgdGhpcy5fd2F0Y2ggPSBzdWJwcm9jZXNzKHtcbiAgICAgICAgICAgIGNtZDogdGhpcy53YXRjaEV4ZWMhLFxuICAgICAgICAgICAgb3V0OiBvdXQgPT4gdGhpcy5zZXQodGhpcy53YXRjaFRyYW5zZm9ybSEob3V0LCB0aGlzLmdldCgpKSksXG4gICAgICAgICAgICBlcnI6IGVyciA9PiB0aGlzLnZhcmlhYmxlLmVtaXQoXCJlcnJvclwiLCBlcnIpLFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHN0b3BQb2xsKCkge1xuICAgICAgICB0aGlzLl9wb2xsPy5jYW5jZWwoKVxuICAgICAgICBkZWxldGUgdGhpcy5fcG9sbFxuICAgIH1cblxuICAgIHN0b3BXYXRjaCgpIHtcbiAgICAgICAgdGhpcy5fd2F0Y2g/LmtpbGwoKVxuICAgICAgICBkZWxldGUgdGhpcy5fd2F0Y2hcbiAgICB9XG5cbiAgICBpc1BvbGxpbmcoKSB7IHJldHVybiAhIXRoaXMuX3BvbGwgfVxuICAgIGlzV2F0Y2hpbmcoKSB7IHJldHVybiAhIXRoaXMuX3dhdGNoIH1cblxuICAgIGRyb3AoKSB7XG4gICAgICAgIHRoaXMudmFyaWFibGUuZW1pdChcImRyb3BwZWRcIilcbiAgICB9XG5cbiAgICBvbkRyb3BwZWQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy52YXJpYWJsZS5jb25uZWN0KFwiZHJvcHBlZFwiLCBjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuIHRoaXMgYXMgdW5rbm93biBhcyBWYXJpYWJsZTxUPlxuICAgIH1cblxuICAgIG9uRXJyb3IoY2FsbGJhY2s6IChlcnI6IHN0cmluZykgPT4gdm9pZCkge1xuICAgICAgICBkZWxldGUgdGhpcy5lcnJIYW5kbGVyXG4gICAgICAgIHRoaXMudmFyaWFibGUuY29ubmVjdChcImVycm9yXCIsIChfLCBlcnIpID0+IGNhbGxiYWNrKGVycikpXG4gICAgICAgIHJldHVybiB0aGlzIGFzIHVua25vd24gYXMgVmFyaWFibGU8VD5cbiAgICB9XG5cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6ICh2YWx1ZTogVCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCBpZCA9IHRoaXMudmFyaWFibGUuY29ubmVjdChcImNoYW5nZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2sodGhpcy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuICgpID0+IHRoaXMudmFyaWFibGUuZGlzY29ubmVjdChpZClcbiAgICB9XG5cbiAgICBwb2xsKFxuICAgICAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgICAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICAgICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBUXG4gICAgKTogVmFyaWFibGU8VD5cblxuICAgIHBvbGwoXG4gICAgICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgICAgIGNhbGxiYWNrOiAocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD5cbiAgICApOiBWYXJpYWJsZTxUPlxuXG4gICAgcG9sbChcbiAgICAgICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICAgICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10gfCAoKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+KSxcbiAgICAgICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQgPSBvdXQgPT4gb3V0IGFzIFQsXG4gICAgKSB7XG4gICAgICAgIHRoaXMuc3RvcFBvbGwoKVxuICAgICAgICB0aGlzLnBvbGxJbnRlcnZhbCA9IGludGVydmFsXG4gICAgICAgIHRoaXMucG9sbFRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuICAgICAgICBpZiAodHlwZW9mIGV4ZWMgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgdGhpcy5wb2xsRm4gPSBleGVjXG4gICAgICAgICAgICBkZWxldGUgdGhpcy5wb2xsRXhlY1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wb2xsRXhlYyA9IGV4ZWNcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnBvbGxGblxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3RhcnRQb2xsKClcbiAgICAgICAgcmV0dXJuIHRoaXMgYXMgdW5rbm93biBhcyBWYXJpYWJsZTxUPlxuICAgIH1cblxuICAgIHdhdGNoKFxuICAgICAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICAgICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQgPSBvdXQgPT4gb3V0IGFzIFQsXG4gICAgKSB7XG4gICAgICAgIHRoaXMuc3RvcFdhdGNoKClcbiAgICAgICAgdGhpcy53YXRjaEV4ZWMgPSBleGVjXG4gICAgICAgIHRoaXMud2F0Y2hUcmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbiAgICAgICAgdGhpcy5zdGFydFdhdGNoKClcbiAgICAgICAgcmV0dXJuIHRoaXMgYXMgdW5rbm93biBhcyBWYXJpYWJsZTxUPlxuICAgIH1cblxuICAgIG9ic2VydmUoXG4gICAgICAgIG9ianM6IEFycmF5PFtvYmo6IENvbm5lY3RhYmxlLCBzaWduYWw6IHN0cmluZ10+LFxuICAgICAgICBjYWxsYmFjazogKC4uLmFyZ3M6IGFueVtdKSA9PiBULFxuICAgICk6IFZhcmlhYmxlPFQ+XG5cbiAgICBvYnNlcnZlKFxuICAgICAgICBvYmo6IENvbm5lY3RhYmxlLFxuICAgICAgICBzaWduYWw6IHN0cmluZyxcbiAgICAgICAgY2FsbGJhY2s6ICguLi5hcmdzOiBhbnlbXSkgPT4gVCxcbiAgICApOiBWYXJpYWJsZTxUPlxuXG4gICAgb2JzZXJ2ZShcbiAgICAgICAgb2JqczogQ29ubmVjdGFibGUgfCBBcnJheTxbb2JqOiBDb25uZWN0YWJsZSwgc2lnbmFsOiBzdHJpbmddPixcbiAgICAgICAgc2lnT3JGbjogc3RyaW5nIHwgKChvYmo6IENvbm5lY3RhYmxlLCAuLi5hcmdzOiBhbnlbXSkgPT4gVCksXG4gICAgICAgIGNhbGxiYWNrPzogKG9iajogQ29ubmVjdGFibGUsIC4uLmFyZ3M6IGFueVtdKSA9PiBULFxuICAgICkge1xuICAgICAgICBjb25zdCBmID0gdHlwZW9mIHNpZ09yRm4gPT09IFwiZnVuY3Rpb25cIiA/IHNpZ09yRm4gOiBjYWxsYmFjayA/PyAoKCkgPT4gdGhpcy5nZXQoKSlcbiAgICAgICAgY29uc3Qgc2V0ID0gKG9iajogQ29ubmVjdGFibGUsIC4uLmFyZ3M6IGFueVtdKSA9PiB0aGlzLnNldChmKG9iaiwgLi4uYXJncykpXG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkob2JqcykpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgb2JqIG9mIG9ianMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbbywgc10gPSBvYmpcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IG8uY29ubmVjdChzLCBzZXQpXG4gICAgICAgICAgICAgICAgdGhpcy5vbkRyb3BwZWQoKCkgPT4gby5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc2lnT3JGbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gb2Jqcy5jb25uZWN0KHNpZ09yRm4sIHNldClcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJvcHBlZCgoKSA9PiBvYmpzLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMgYXMgdW5rbm93biBhcyBWYXJpYWJsZTxUPlxuICAgIH1cblxuICAgIHN0YXRpYyBkZXJpdmU8XG4gICAgICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxTdWJzY3JpYmFibGU8YW55Pj4sXG4gICAgICAgIEFyZ3MgZXh0ZW5kcyB7XG4gICAgICAgICAgICBbSyBpbiBrZXlvZiBEZXBzXTogRGVwc1tLXSBleHRlbmRzIFN1YnNjcmliYWJsZTxpbmZlciBUPiA/IFQgOiBuZXZlclxuICAgICAgICB9LFxuICAgICAgICBWID0gQXJncyxcbiAgICA+KGRlcHM6IERlcHMsIGZuOiAoLi4uYXJnczogQXJncykgPT4gViA9ICguLi5hcmdzKSA9PiBhcmdzIGFzIHVua25vd24gYXMgVikge1xuICAgICAgICBjb25zdCB1cGRhdGUgPSAoKSA9PiBmbiguLi5kZXBzLm1hcChkID0+IGQuZ2V0KCkpIGFzIEFyZ3MpXG4gICAgICAgIGNvbnN0IGRlcml2ZWQgPSBuZXcgVmFyaWFibGUodXBkYXRlKCkpXG4gICAgICAgIGNvbnN0IHVuc3VicyA9IGRlcHMubWFwKGRlcCA9PiBkZXAuc3Vic2NyaWJlKCgpID0+IGRlcml2ZWQuc2V0KHVwZGF0ZSgpKSkpXG4gICAgICAgIGRlcml2ZWQub25Ecm9wcGVkKCgpID0+IHVuc3Vicy5tYXAodW5zdWIgPT4gdW5zdWIoKSkpXG4gICAgICAgIHJldHVybiBkZXJpdmVkXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZhcmlhYmxlPFQ+IGV4dGVuZHMgT21pdDxWYXJpYWJsZVdyYXBwZXI8VD4sIFwiYmluZFwiPiB7XG4gICAgPFI+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQmluZGluZzxSPlxuICAgICgpOiBCaW5kaW5nPFQ+XG59XG5cbmV4cG9ydCBjb25zdCBWYXJpYWJsZSA9IG5ldyBQcm94eShWYXJpYWJsZVdyYXBwZXIgYXMgYW55LCB7XG4gICAgYXBwbHk6IChfdCwgX2EsIGFyZ3MpID0+IG5ldyBWYXJpYWJsZVdyYXBwZXIoYXJnc1swXSksXG59KSBhcyB7XG4gICAgZGVyaXZlOiB0eXBlb2YgVmFyaWFibGVXcmFwcGVyW1wiZGVyaXZlXCJdXG4gICAgPFQ+KGluaXQ6IFQpOiBWYXJpYWJsZTxUPlxuICAgIG5ldzxUPihpbml0OiBUKTogVmFyaWFibGU8VD5cbn1cblxuZXhwb3J0IGNvbnN0IHsgZGVyaXZlIH0gPSBWYXJpYWJsZVxuZXhwb3J0IGRlZmF1bHQgVmFyaWFibGVcbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCI7XG5cbmV4cG9ydCBjb25zdCBzbmFrZWlmeSA9IChzdHI6IHN0cmluZykgPT4gc3RyXG4gICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgLnRvTG93ZXJDYXNlKClcblxuZXhwb3J0IGNvbnN0IGtlYmFiaWZ5ID0gKHN0cjogc3RyaW5nKSA9PiBzdHJcbiAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAudG9Mb3dlckNhc2UoKVxuXG4vKipcbiAqIEEgcmVhY3RpdmUgc291cmNlIG9mIGEgc2luZ2xlIHZhbHVlLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmliYWJsZTxUID0gdW5rbm93bj4ge1xuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSB0byB1cGRhdGVzIG9uIHRoZSB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGUgdmFsdWUgY2hhbmdlc1xuICAgICAqIEByZXR1cm5zIEEgZnVuY3Rpb24gdG8gY2FuY2VsIHRoZSBzdWJzY3JpcHRpb25cbiAgICAgKi9cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6ICh2YWx1ZTogVCkgPT4gdm9pZCk6ICgpID0+IHZvaWRcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGN1cnJlbnQgdmFsdWUgKG5vbi1yZWFjdGl2ZWx5KS5cbiAgICAgKi9cbiAgICBnZXQoKTogVFxuICAgIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG4vKipcbiAqIEEgcmVhY3RpdmUgb2JqZWN0IHdpdGggbWFueSBzaWduYWxzIHRoYXQgY2FuIGJlIGNvbm5lY3RlZCB0byBpbmRpdmlkdWFsbHkuXG4gKiBVc3VhbGx5LCB0aGVzZSBhcmUgZ29pbmcgdG8gYmUgR09iamVjdHMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29ubmVjdGFibGUge1xuICAgIGNvbm5lY3Qoc2lnbmFsOiBzdHJpbmcsIGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IHVua25vd24pOiBudW1iZXJcbiAgICBkaXNjb25uZWN0KGlkOiBudW1iZXIpOiB2b2lkXG4gICAgW2tleTogc3RyaW5nXTogYW55XG59XG5cbmV4cG9ydCBjbGFzcyBCaW5kaW5nPFZhbHVlPiBpbXBsZW1lbnRzIFN1YnNjcmliYWJsZTxWYWx1ZT4ge1xuICAgIHByaXZhdGUgdHJhbnNmb3JtRm4gPSAodjogYW55KSA9PiB2XG5cbiAgICAjZW1pdHRlcjogU3Vic2NyaWJhYmxlPFZhbHVlPiB8IENvbm5lY3RhYmxlXG4gICAgI3Byb3A/OiBzdHJpbmdcblxuICAgIC8qKlxuICAgICAqIEJpbmQgdG8gYSBgQ29ubmVjdGFibGVgJ3MgcHJvcGVydHksIHByZXNlcnZpbmcgaXRzIHJlYWN0aXZpdHkgdG8gYmUgdXNlZCBzb21ld2hlcmUgZWxzZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgYmluZDxcbiAgICAgICAgVCBleHRlbmRzIENvbm5lY3RhYmxlLFxuICAgICAgICBQIGV4dGVuZHMga2V5b2YgVCxcbiAgICA+KG9iamVjdDogVCwgcHJvcGVydHk6IFApOiBCaW5kaW5nPFRbUF0+XG5cbiAgICAvKipcbiAgICAgKiBCaW5kIHRvIGEgYFN1YnNjcmliYWJsZWAsIHByZXNlcnZpbmcgaXRzIHJlYWN0aXZpdHkgdG8gYmUgdXNlZCBzb21ld2hlcmUgZWxzZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgYmluZDxUPihvYmplY3Q6IFN1YnNjcmliYWJsZTxUPik6IEJpbmRpbmc8VD5cblxuICAgIHN0YXRpYyBiaW5kKGVtaXR0ZXI6IENvbm5lY3RhYmxlIHwgU3Vic2NyaWJhYmxlLCBwcm9wPzogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBuZXcgQmluZGluZyhlbWl0dGVyLCBwcm9wKVxuICAgIH1cblxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoZW1pdHRlcjogQ29ubmVjdGFibGUgfCBTdWJzY3JpYmFibGU8VmFsdWU+LCBwcm9wPzogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI2VtaXR0ZXIgPSBlbWl0dGVyXG4gICAgICAgIHRoaXMuI3Byb3AgPSBwcm9wICYmIGtlYmFiaWZ5KHByb3ApXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkJpbmRpbmcgaW1wbGljaXRseSBjb252ZXJ0ZWQgdG8gYSBwcmltaXRpdmUgdmFsdWUuIFRoaXMgaXMgYWxtb3N0IGFsd2F5cyBhIG1pc3Rha2UuXCIpXG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGlzIG1vc3RseSBoZXJlIHRvIGFpZCBpbiBkZWJ1Z2dpbmcuXG4gICAgICogSXQgcmV0dXJucyBhIHJlZ3VsYXIsIG5vbi1yZWFjdGl2ZSBzdHJpbmcsXG4gICAgICogYW5kIHdpbGwgbm90IHdvcmsgdG8gcmVhY3RpdmVseSB1c2UgYSBiaW5kaW5nIHNvbWV3aGVyZSB0aGF0IGV4cGVjdHMgYSBwbGFpbiBzdHJpbmcuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgQmluZGluZzwke3RoaXMuI2VtaXR0ZXJ9JHt0aGlzLiNwcm9wID8gYCwgXCIke3RoaXMuI3Byb3B9XCJgIDogXCJcIn0+YFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBiaW5kaW5nIHRoYXQgYWRkaXRpb25hbGx5IGFwcGxpZXMgYSBmdW5jdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIGZuIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gVGhpcyBzaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLCBhcyBpdCBjYW4gYmUgY2FsbGVkIGF0IGFueSB0aW1lLlxuICAgICAqL1xuICAgIGFzPFQ+KGZuOiAodjogVmFsdWUpID0+IFQpOiBCaW5kaW5nPFQ+IHtcbiAgICAgICAgY29uc3QgYmluZCA9IG5ldyBCaW5kaW5nKHRoaXMuI2VtaXR0ZXIsIHRoaXMuI3Byb3ApXG4gICAgICAgIGJpbmQudHJhbnNmb3JtRm4gPSAodjogVmFsdWUpID0+IGZuKHRoaXMudHJhbnNmb3JtRm4odikpXG4gICAgICAgIHJldHVybiBiaW5kIGFzIHVua25vd24gYXMgQmluZGluZzxUPlxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYmluZGluZydzIGN1cnJlbnQgdmFsdWUgKG5vbi1yZWFjdGl2ZWx5KS5cbiAgICAgKi9cbiAgICBnZXQoKTogVmFsdWUge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuI2VtaXR0ZXIuZ2V0ID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50cmFuc2Zvcm1Gbih0aGlzLiNlbWl0dGVyLmdldCgpKVxuXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy4jcHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3NuYWtlaWZ5KHRoaXMuI3Byb3ApfWBcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy4jZW1pdHRlcltnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtRm4odGhpcy4jZW1pdHRlcltnZXR0ZXJdKCkpXG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybUZuKHRoaXMuI2VtaXR0ZXJbdGhpcy4jcHJvcF0pXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihcImNhbiBub3QgZ2V0IHZhbHVlIG9mIGJpbmRpbmdcIilcbiAgICB9XG5cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6ICh2YWx1ZTogVmFsdWUpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLiNlbWl0dGVyLnN1YnNjcmliZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy4jZW1pdHRlci5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRoaXMuZ2V0KCkpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLiNlbWl0dGVyLmNvbm5lY3QgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmFsID0gYG5vdGlmeTo6JHt0aGlzLiNwcm9wfWBcbiAgICAgICAgICAgIGNvbnN0IGlkID0gdGhpcy4jZW1pdHRlci5jb25uZWN0KHNpZ25hbCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRoaXMuZ2V0KCkpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoR09iamVjdC5zaWduYWxfaGFuZGxlcl9pc19jb25uZWN0ZWQodGhpcy4jZW1pdHRlciwgaWQpKVxuICAgICAgICAgICAgICAgICAgICAodGhpcy4jZW1pdHRlci5kaXNjb25uZWN0IGFzIENvbm5lY3RhYmxlW1wiZGlzY29ubmVjdFwiXSkoaWQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy4jZW1pdHRlcn0gaXMgbm90IGJpbmRhYmxlYClcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCB7IGJpbmQgfSA9IEJpbmRpbmdcbmV4cG9ydCBkZWZhdWx0IEJpbmRpbmdcbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbC5UaW1lXG5leHBvcnQgY29uc3QgVGltZSA9IEFzdGFsLlRpbWVcblxuZXhwb3J0IGZ1bmN0aW9uIGludGVydmFsKGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbC5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWwuVGltZS50aW1lb3V0KHRpbWVvdXQsICgpID0+IHZvaWQgY2FsbGJhY2s/LigpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaWRsZShjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWwuVGltZS5pZGxlKCgpID0+IHZvaWQgY2FsbGJhY2s/LigpKVxufVxuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgUHJvY2VzcyA9IEFzdGFsLlByb2Nlc3NcbmV4cG9ydCBjb25zdCBQcm9jZXNzID0gQXN0YWwuUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhhcmdzOiBBcmdzKTogQXN0YWwuUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogQXN0YWwuUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZClcbiAgICAgICAgPyBBc3RhbC5Qcm9jZXNzLnN1YnByb2Nlc3N2KGNtZClcbiAgICAgICAgOiBBc3RhbC5Qcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0dMaWIuRXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpXG4gICAgICAgID8gQXN0YWwuUHJvY2Vzcy5leGVjdihjbWQpXG4gICAgICAgIDogQXN0YWwuUHJvY2Vzcy5leGVjKGNtZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4ZWNBc3luYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjbWQpKSB7XG4gICAgICAgICAgICBBc3RhbC5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWwuUHJvY2Vzcy5leGVjX2FzeW5jdl9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFzdGFsLlByb2Nlc3MuZXhlY19hc3luYyhjbWQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pXG59XG4iLCAiaW1wb3J0IFZhcmlhYmxlIGZyb20gXCIuL3ZhcmlhYmxlLmpzXCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCIuL3Byb2Nlc3MuanNcIlxuaW1wb3J0IEJpbmRpbmcsIHsgQ29ubmVjdGFibGUsIGtlYmFiaWZ5LCBzbmFrZWlmeSwgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vYmluZGluZy5qc1wiXG5cbmV4cG9ydCBjb25zdCBub0ltcGxpY2l0RGVzdHJveSA9IFN5bWJvbChcIm5vIG5vIGltcGxpY2l0IGRlc3Ryb3lcIilcbmV4cG9ydCBjb25zdCBzZXRDaGlsZHJlbiA9IFN5bWJvbChcImNoaWxkcmVuIHNldHRlciBtZXRob2RcIilcblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlQmluZGluZ3MoYXJyYXk6IGFueVtdKSB7XG4gICAgZnVuY3Rpb24gZ2V0VmFsdWVzKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICAgIGxldCBpID0gMFxuICAgICAgICByZXR1cm4gYXJyYXkubWFwKHZhbHVlID0+IHZhbHVlIGluc3RhbmNlb2YgQmluZGluZ1xuICAgICAgICAgICAgPyBhcmdzW2krK11cbiAgICAgICAgICAgIDogdmFsdWUsXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBjb25zdCBiaW5kaW5ncyA9IGFycmF5LmZpbHRlcihpID0+IGkgaW5zdGFuY2VvZiBCaW5kaW5nKVxuXG4gICAgaWYgKGJpbmRpbmdzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgcmV0dXJuIGFycmF5XG5cbiAgICBpZiAoYmluZGluZ3MubGVuZ3RoID09PSAxKVxuICAgICAgICByZXR1cm4gYmluZGluZ3NbMF0uYXMoZ2V0VmFsdWVzKVxuXG4gICAgcmV0dXJuIFZhcmlhYmxlLmRlcml2ZShiaW5kaW5ncywgZ2V0VmFsdWVzKSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRQcm9wKG9iajogYW55LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBzZXR0ZXIgPSBgc2V0XyR7c25ha2VpZnkocHJvcCl9YFxuICAgICAgICBpZiAodHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICByZXR1cm4gb2JqW3NldHRlcl0odmFsdWUpXG5cbiAgICAgICAgcmV0dXJuIChvYmpbcHJvcF0gPSB2YWx1ZSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBjb3VsZCBub3Qgc2V0IHByb3BlcnR5IFwiJHtwcm9wfVwiIG9uICR7b2JqfTpgLCBlcnJvcilcbiAgICB9XG59XG5cbmV4cG9ydCB0eXBlIEJpbmRhYmxlUHJvcHM8VD4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVF06IEJpbmRpbmc8VFtLXT4gfCBUW0tdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaG9vazxXaWRnZXQgZXh0ZW5kcyBDb25uZWN0YWJsZT4oXG4gICAgd2lkZ2V0OiBXaWRnZXQsXG4gICAgb2JqZWN0OiBDb25uZWN0YWJsZSB8IFN1YnNjcmliYWJsZSxcbiAgICBzaWduYWxPckNhbGxiYWNrOiBzdHJpbmcgfCAoKHNlbGY6IFdpZGdldCwgLi4uYXJnczogYW55W10pID0+IHZvaWQpLFxuICAgIGNhbGxiYWNrPzogKHNlbGY6IFdpZGdldCwgLi4uYXJnczogYW55W10pID0+IHZvaWQsXG4pIHtcbiAgICBpZiAodHlwZW9mIG9iamVjdC5jb25uZWN0ID09PSBcImZ1bmN0aW9uXCIgJiYgY2FsbGJhY2spIHtcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxPckNhbGxiYWNrLCAoXzogYW55LCAuLi5hcmdzOiB1bmtub3duW10pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh3aWRnZXQsIC4uLmFyZ3MpXG4gICAgICAgIH0pXG4gICAgICAgIHdpZGdldC5jb25uZWN0KFwiZGVzdHJveVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAob2JqZWN0LmRpc2Nvbm5lY3QgYXMgQ29ubmVjdGFibGVbXCJkaXNjb25uZWN0XCJdKShpZClcbiAgICAgICAgfSlcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBvYmplY3Quc3Vic2NyaWJlID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIHNpZ25hbE9yQ2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjb25zdCB1bnN1YiA9IG9iamVjdC5zdWJzY3JpYmUoKC4uLmFyZ3M6IHVua25vd25bXSkgPT4ge1xuICAgICAgICAgICAgc2lnbmFsT3JDYWxsYmFjayh3aWRnZXQsIC4uLmFyZ3MpXG4gICAgICAgIH0pXG4gICAgICAgIHdpZGdldC5jb25uZWN0KFwiZGVzdHJveVwiLCB1bnN1YilcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25zdHJ1Y3Q8V2lkZ2V0IGV4dGVuZHMgQ29ubmVjdGFibGUgJiB7IFtzZXRDaGlsZHJlbl06IChjaGlsZHJlbjogYW55W10pID0+IHZvaWQgfT4od2lkZ2V0OiBXaWRnZXQsIGNvbmZpZzogYW55KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdFxuICAgIGxldCB7IHNldHVwLCBjaGlsZCwgY2hpbGRyZW4gPSBbXSwgLi4ucHJvcHMgfSA9IGNvbmZpZ1xuXG4gICAgaWYgKGNoaWxkcmVuIGluc3RhbmNlb2YgQmluZGluZykge1xuICAgICAgICBjaGlsZHJlbiA9IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGQpIHtcbiAgICAgICAgY2hpbGRyZW4udW5zaGlmdChjaGlsZClcbiAgICB9XG5cbiAgICAvLyByZW1vdmUgdW5kZWZpbmVkIHZhbHVlc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbGxlY3QgYmluZGluZ3NcbiAgICBjb25zdCBiaW5kaW5nczogQXJyYXk8W3N0cmluZywgQmluZGluZzxhbnk+XT4gPSBPYmplY3RcbiAgICAgICAgLmtleXMocHJvcHMpXG4gICAgICAgIC5yZWR1Y2UoKGFjYzogYW55LCBwcm9wKSA9PiB7XG4gICAgICAgICAgICBpZiAocHJvcHNbcHJvcF0gaW5zdGFuY2VvZiBCaW5kaW5nKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmluZGluZyA9IHByb3BzW3Byb3BdXG4gICAgICAgICAgICAgICAgZGVsZXRlIHByb3BzW3Byb3BdXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIFtwcm9wLCBiaW5kaW5nXV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhY2NcbiAgICAgICAgfSwgW10pXG5cbiAgICAvLyBjb2xsZWN0IHNpZ25hbCBoYW5kbGVyc1xuICAgIGNvbnN0IG9uSGFuZGxlcnM6IEFycmF5PFtzdHJpbmcsIHN0cmluZyB8ICgoKSA9PiB1bmtub3duKV0+ID0gT2JqZWN0XG4gICAgICAgIC5rZXlzKHByb3BzKVxuICAgICAgICAucmVkdWNlKChhY2M6IGFueSwga2V5KSA9PiB7XG4gICAgICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZyA9IGtlYmFiaWZ5KGtleSkuc3BsaXQoXCItXCIpLnNsaWNlKDEpLmpvaW4oXCItXCIpXG4gICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IHByb3BzW2tleV1cbiAgICAgICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICAgICAgICAgIHJldHVybiBbLi4uYWNjLCBbc2lnLCBoYW5kbGVyXV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhY2NcbiAgICAgICAgfSwgW10pXG5cbiAgICAvLyBzZXQgY2hpbGRyZW5cbiAgICBjb25zdCBtZXJnZWRDaGlsZHJlbiA9IG1lcmdlQmluZGluZ3MoY2hpbGRyZW4uZmxhdChJbmZpbml0eSkpXG4gICAgaWYgKG1lcmdlZENoaWxkcmVuIGluc3RhbmNlb2YgQmluZGluZykge1xuICAgICAgICB3aWRnZXRbc2V0Q2hpbGRyZW5dKG1lcmdlZENoaWxkcmVuLmdldCgpKVxuICAgICAgICB3aWRnZXQuY29ubmVjdChcImRlc3Ryb3lcIiwgbWVyZ2VkQ2hpbGRyZW4uc3Vic2NyaWJlKCh2KSA9PiB7XG4gICAgICAgICAgICB3aWRnZXRbc2V0Q2hpbGRyZW5dKHYpXG4gICAgICAgIH0pKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChtZXJnZWRDaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB3aWRnZXRbc2V0Q2hpbGRyZW5dKG1lcmdlZENoaWxkcmVuKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2V0dXAgc2lnbmFsIGhhbmRsZXJzXG4gICAgZm9yIChjb25zdCBbc2lnbmFsLCBjYWxsYmFja10gb2Ygb25IYW5kbGVycykge1xuICAgICAgICBjb25zdCBzaWcgPSBzaWduYWwuc3RhcnRzV2l0aChcIm5vdGlmeVwiKVxuICAgICAgICAgICAgPyBzaWduYWwucmVwbGFjZShcIi1cIiwgXCI6OlwiKVxuICAgICAgICAgICAgOiBzaWduYWxcblxuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHdpZGdldC5jb25uZWN0KHNpZywgY2FsbGJhY2spXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3aWRnZXQuY29ubmVjdChzaWcsICgpID0+IGV4ZWNBc3luYyhjYWxsYmFjaylcbiAgICAgICAgICAgICAgICAudGhlbihwcmludCkuY2F0Y2goY29uc29sZS5lcnJvcikpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXR1cCBiaW5kaW5ncyBoYW5kbGVyc1xuICAgIGZvciAoY29uc3QgW3Byb3AsIGJpbmRpbmddIG9mIGJpbmRpbmdzKSB7XG4gICAgICAgIGlmIChwcm9wID09PSBcImNoaWxkXCIgfHwgcHJvcCA9PT0gXCJjaGlsZHJlblwiKSB7XG4gICAgICAgICAgICB3aWRnZXQuY29ubmVjdChcImRlc3Ryb3lcIiwgYmluZGluZy5zdWJzY3JpYmUoKHY6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIHdpZGdldFtzZXRDaGlsZHJlbl0odilcbiAgICAgICAgICAgIH0pKVxuICAgICAgICB9XG4gICAgICAgIHdpZGdldC5jb25uZWN0KFwiZGVzdHJveVwiLCBiaW5kaW5nLnN1YnNjcmliZSgodjogYW55KSA9PiB7XG4gICAgICAgICAgICBzZXRQcm9wKHdpZGdldCwgcHJvcCwgdilcbiAgICAgICAgfSkpXG4gICAgICAgIHNldFByb3Aod2lkZ2V0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgIH1cblxuICAgIC8vIGZpbHRlciB1bmRlZmluZWQgdmFsdWVzXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbih3aWRnZXQsIHByb3BzKVxuICAgIHNldHVwPy4od2lkZ2V0KVxuICAgIHJldHVybiB3aWRnZXRcbn1cblxuZnVuY3Rpb24gaXNBcnJvd0Z1bmN0aW9uKGZ1bmM6IGFueSk6IGZ1bmMgaXMgKGFyZ3M6IGFueSkgPT4gYW55IHtcbiAgICByZXR1cm4gIU9iamVjdC5oYXNPd24oZnVuYywgXCJwcm90b3R5cGVcIilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeChcbiAgICBjdG9yczogUmVjb3JkPHN0cmluZywgeyBuZXcocHJvcHM6IGFueSk6IGFueSB9IHwgKChwcm9wczogYW55KSA9PiBhbnkpPixcbiAgICBjdG9yOiBzdHJpbmcgfCAoKHByb3BzOiBhbnkpID0+IGFueSkgfCB7IG5ldyhwcm9wczogYW55KTogYW55IH0sXG4gICAgeyBjaGlsZHJlbiwgLi4ucHJvcHMgfTogYW55LFxuKSB7XG4gICAgY2hpbGRyZW4gPz89IFtdXG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKVxuICAgICAgICBjaGlsZHJlbiA9IFtjaGlsZHJlbl1cblxuICAgIGNoaWxkcmVuID0gY2hpbGRyZW4uZmlsdGVyKEJvb2xlYW4pXG5cbiAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoID09PSAxKVxuICAgICAgICBwcm9wcy5jaGlsZCA9IGNoaWxkcmVuWzBdXG4gICAgZWxzZSBpZiAoY2hpbGRyZW4ubGVuZ3RoID4gMSlcbiAgICAgICAgcHJvcHMuY2hpbGRyZW4gPSBjaGlsZHJlblxuXG4gICAgaWYgKHR5cGVvZiBjdG9yID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChpc0Fycm93RnVuY3Rpb24oY3RvcnNbY3Rvcl0pKVxuICAgICAgICAgICAgcmV0dXJuIGN0b3JzW2N0b3JdKHByb3BzKVxuXG4gICAgICAgIHJldHVybiBuZXcgY3RvcnNbY3Rvcl0ocHJvcHMpXG4gICAgfVxuXG4gICAgaWYgKGlzQXJyb3dGdW5jdGlvbihjdG9yKSlcbiAgICAgICAgcmV0dXJuIGN0b3IocHJvcHMpXG5cbiAgICByZXR1cm4gbmV3IGN0b3IocHJvcHMpXG59XG4iLCAiaW1wb3J0IHsgbm9JbXBsaWNpdERlc3Ryb3ksIHNldENoaWxkcmVuLCB0eXBlIEJpbmRhYmxlUHJvcHMsIGNvbnN0cnVjdCB9IGZyb20gXCIuLi9fYXN0YWwuanNcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEJpbmRpbmcgZnJvbSBcIi4uL2JpbmRpbmcuanNcIlxuXG5leHBvcnQgY29uc3QgdHlwZSA9IFN5bWJvbChcImNoaWxkIHR5cGVcIilcbmNvbnN0IGR1bW15QnVsZGVyID0gbmV3IEd0ay5CdWlsZGVyXG5cbmZ1bmN0aW9uIF9nZXRDaGlsZHJlbih3aWRnZXQ6IEd0ay5XaWRnZXQpOiBBcnJheTxHdGsuV2lkZ2V0PiB7XG4gICAgaWYgKFwiZ2V0X2NoaWxkXCIgaW4gd2lkZ2V0ICYmIHR5cGVvZiB3aWRnZXQuZ2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gd2lkZ2V0LmdldF9jaGlsZCgpID8gW3dpZGdldC5nZXRfY2hpbGQoKV0gOiBbXVxuICAgIH1cblxuICAgIGNvbnN0IGNoaWxkcmVuOiBBcnJheTxHdGsuV2lkZ2V0PiA9IFtdXG4gICAgbGV0IGNoID0gd2lkZ2V0LmdldF9maXJzdF9jaGlsZCgpXG4gICAgd2hpbGUgKGNoICE9PSBudWxsKSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2goY2gpXG4gICAgICAgIGNoID0gY2guZ2V0X25leHRfc2libGluZygpXG4gICAgfVxuICAgIHJldHVybiBjaGlsZHJlblxufVxuXG5mdW5jdGlvbiBfc2V0Q2hpbGRyZW4od2lkZ2V0OiBHdGsuV2lkZ2V0LCBjaGlsZHJlbjogYW55W10pIHtcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuLmZsYXQoSW5maW5pdHkpLm1hcChjaCA9PiBjaCBpbnN0YW5jZW9mIEd0ay5XaWRnZXRcbiAgICAgICAgPyBjaFxuICAgICAgICA6IG5ldyBHdGsuTGFiZWwoeyB2aXNpYmxlOiB0cnVlLCBsYWJlbDogU3RyaW5nKGNoKSB9KSlcblxuXG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBjaGlsZHJlbikge1xuICAgICAgICB3aWRnZXQudmZ1bmNfYWRkX2NoaWxkKFxuICAgICAgICAgICAgZHVtbXlCdWxkZXIsXG4gICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgIHR5cGUgaW4gY2hpbGQgPyBjaGlsZFt0eXBlXSA6IG51bGwsXG4gICAgICAgIClcbiAgICB9XG59XG5cbnR5cGUgQ29uZmlnPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0PiA9IHtcbiAgICBzZXRDaGlsZHJlbih3aWRnZXQ6IFQsIGNoaWxkcmVuOiBhbnlbXSk6IHZvaWRcbiAgICBnZXRDaGlsZHJlbih3aWRnZXQ6IFQpOiBBcnJheTxHdGsuV2lkZ2V0PlxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhc3RhbGlmeTxcbiAgICBXaWRnZXQgZXh0ZW5kcyBHdGsuV2lkZ2V0LFxuICAgIFByb3BzIGV4dGVuZHMgR3RrLldpZGdldC5Db25zdHJ1Y3RvclByb3BzID0gR3RrLldpZGdldC5Db25zdHJ1Y3RvclByb3BzLFxuICAgIFNpZ25hbHMgZXh0ZW5kcyBSZWNvcmQ8YG9uJHtzdHJpbmd9YCwgQXJyYXk8dW5rbm93bj4+ID0gUmVjb3JkPGBvbiR7c3RyaW5nfWAsIGFueVtdPixcbj4oY2xzOiB7IG5ldyguLi5hcmdzOiBhbnlbXSk6IFdpZGdldCB9LCBjb25maWc6IFBhcnRpYWw8Q29uZmlnPFdpZGdldD4+ID0ge30pIHtcbiAgICBPYmplY3QuYXNzaWduKGNscy5wcm90b3R5cGUsIHtcbiAgICAgICAgW3NldENoaWxkcmVuXShjaGlsZHJlbjogYW55W10pIHtcbiAgICAgICAgICAgIGNvbnN0IHcgPSB0aGlzIGFzIHVua25vd24gYXMgV2lkZ2V0XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIChjb25maWcuZ2V0Q2hpbGRyZW4/Lih3KSB8fCBfZ2V0Q2hpbGRyZW4odykpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCkge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZC51bnBhcmVudCgpXG4gICAgICAgICAgICAgICAgICAgIGlmICghY2hpbGRyZW4uaW5jbHVkZXMoY2hpbGQpICYmIG5vSW1wbGljaXREZXN0cm95IGluIHRoaXMpXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5ydW5fZGlzcG9zZSgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY29uZmlnLnNldENoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgY29uZmlnLnNldENoaWxkcmVuKHcsIGNoaWxkcmVuKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfc2V0Q2hpbGRyZW4odywgY2hpbGRyZW4pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSlcblxuICAgIHJldHVybiB7XG4gICAgICAgIFtjbHMubmFtZV06IChcbiAgICAgICAgICAgIHByb3BzOiBDb25zdHJ1Y3RQcm9wczxXaWRnZXQsIFByb3BzLCBTaWduYWxzPiA9IHt9LFxuICAgICAgICAgICAgLi4uY2hpbGRyZW46IGFueVtdXG4gICAgICAgICk6IFdpZGdldCA9PiB7XG4gICAgICAgICAgICBjb25zdCB3aWRnZXQgPSBuZXcgY2xzKFwiY3NzTmFtZVwiIGluIHByb3BzID8geyBjc3NOYW1lOiBwcm9wcy5jc3NOYW1lIH0gOiB7fSlcblxuICAgICAgICAgICAgaWYgKFwiY3NzTmFtZVwiIGluIHByb3BzKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHByb3BzLmNzc05hbWVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3BzLm5vSW1wbGljaXREZXN0cm95KSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih3aWRnZXQsIHsgW25vSW1wbGljaXREZXN0cm95XTogdHJ1ZSB9KVxuICAgICAgICAgICAgICAgIGRlbGV0ZSBwcm9wcy5ub0ltcGxpY2l0RGVzdHJveVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcHMudHlwZSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24od2lkZ2V0LCB7IFt0eXBlXTogcHJvcHMudHlwZSB9KVxuICAgICAgICAgICAgICAgIGRlbGV0ZSBwcm9wcy50eXBlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBjaGlsZHJlbiB9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY29uc3RydWN0KHdpZGdldCBhcyBhbnksIHNldHVwQ29udHJvbGxlcnMod2lkZ2V0LCBwcm9wcyBhcyBhbnkpKVxuICAgICAgICB9LFxuICAgIH1bY2xzLm5hbWVdXG59XG5cbnR5cGUgU2lnSGFuZGxlcjxcbiAgICBXIGV4dGVuZHMgSW5zdGFuY2VUeXBlPHR5cGVvZiBHdGsuV2lkZ2V0PixcbiAgICBBcmdzIGV4dGVuZHMgQXJyYXk8dW5rbm93bj4sXG4+ID0gKChzZWxmOiBXLCAuLi5hcmdzOiBBcmdzKSA9PiB1bmtub3duKSB8IHN0cmluZyB8IHN0cmluZ1tdXG5cbmV4cG9ydCB7IEJpbmRhYmxlUHJvcHMgfVxuZXhwb3J0IHR5cGUgQmluZGFibGVDaGlsZCA9IEd0ay5XaWRnZXQgfCBCaW5kaW5nPEd0ay5XaWRnZXQ+XG5cbmV4cG9ydCB0eXBlIENvbnN0cnVjdFByb3BzPFxuICAgIFNlbGYgZXh0ZW5kcyBJbnN0YW5jZVR5cGU8dHlwZW9mIEd0ay5XaWRnZXQ+LFxuICAgIFByb3BzIGV4dGVuZHMgR3RrLldpZGdldC5Db25zdHJ1Y3RvclByb3BzLFxuICAgIFNpZ25hbHMgZXh0ZW5kcyBSZWNvcmQ8YG9uJHtzdHJpbmd9YCwgQXJyYXk8dW5rbm93bj4+ID0gUmVjb3JkPGBvbiR7c3RyaW5nfWAsIGFueVtdPixcbj4gPSBQYXJ0aWFsPHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGNhbid0IGFzc2lnbiB0byB1bmtub3duLCBidXQgaXQgd29ya3MgYXMgZXhwZWN0ZWQgdGhvdWdoXG4gICAgW1MgaW4ga2V5b2YgU2lnbmFsc106IFNpZ0hhbmRsZXI8U2VsZiwgU2lnbmFsc1tTXT5cbn0+ICYgUGFydGlhbDx7XG4gICAgW0tleSBpbiBgb24ke3N0cmluZ31gXTogU2lnSGFuZGxlcjxTZWxmLCBhbnlbXT5cbn0+ICYgUGFydGlhbDxCaW5kYWJsZVByb3BzPE9taXQ8UHJvcHMsIFwiY3NzTmFtZVwiIHwgXCJjc3NfbmFtZVwiPj4+ICYge1xuICAgIG5vSW1wbGljaXREZXN0cm95PzogdHJ1ZVxuICAgIHR5cGU/OiBzdHJpbmdcbiAgICBjc3NOYW1lPzogc3RyaW5nXG59ICYgRXZlbnRDb250cm9sbGVyPFNlbGY+ICYge1xuICAgIG9uRGVzdHJveT86IChzZWxmOiBTZWxmKSA9PiB1bmtub3duXG4gICAgc2V0dXA/OiAoc2VsZjogU2VsZikgPT4gdm9pZFxufVxuXG50eXBlIEV2ZW50Q29udHJvbGxlcjxTZWxmIGV4dGVuZHMgR3RrLldpZGdldD4gPSB7XG4gICAgb25Gb2N1c0VudGVyPzogKHNlbGY6IFNlbGYpID0+IHZvaWRcbiAgICBvbkZvY3VzTGVhdmU/OiAoc2VsZjogU2VsZikgPT4gdm9pZFxuXG4gICAgb25LZXlQcmVzc2VkPzogKHNlbGY6IFNlbGYsIGtleXZhbDogbnVtYmVyLCBrZXljb2RlOiBudW1iZXIsIHN0YXRlOiBHZGsuTW9kaWZpZXJUeXBlKSA9PiB2b2lkXG4gICAgb25LZXlSZWxlYXNlZD86IChzZWxmOiBTZWxmLCBrZXl2YWw6IG51bWJlciwga2V5Y29kZTogbnVtYmVyLCBzdGF0ZTogR2RrLk1vZGlmaWVyVHlwZSkgPT4gdm9pZFxuICAgIG9uS2V5TW9kaWZpZXI/OiAoc2VsZjogU2VsZiwgc3RhdGU6IEdkay5Nb2RpZmllclR5cGUpID0+IHZvaWRcblxuICAgIG9uTGVnYWN5PzogKHNlbGY6IFNlbGYsIGV2ZW50OiBHZGsuRXZlbnQpID0+IHZvaWRcbiAgICBvbkJ1dHRvblByZXNzZWQ/OiAoc2VsZjogU2VsZiwgc3RhdGU6IEdkay5CdXR0b25FdmVudCkgPT4gdm9pZFxuICAgIG9uQnV0dG9uUmVsZWFzZWQ/OiAoc2VsZjogU2VsZiwgc3RhdGU6IEdkay5CdXR0b25FdmVudCkgPT4gdm9pZFxuXG4gICAgb25Ib3ZlckVudGVyPzogKHNlbGY6IFNlbGYsIHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiB2b2lkXG4gICAgb25Ib3ZlckxlYXZlPzogKHNlbGY6IFNlbGYpID0+IHZvaWRcbiAgICBvbk1vdGlvbj86IChzZWxmOiBTZWxmLCB4OiBudW1iZXIsIHk6IG51bWJlcikgPT4gdm9pZFxuXG4gICAgb25TY3JvbGw/OiAoc2VsZjogU2VsZiwgZHg6IG51bWJlciwgZHk6IG51bWJlcikgPT4gdm9pZFxuICAgIG9uU2Nyb2xsRGVjZWxlcmF0ZT86IChzZWxmOiBTZWxmLCB2ZWxfeDogbnVtYmVyLCB2ZWxfeTogbnVtYmVyKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIHNldHVwQ29udHJvbGxlcnM8VD4od2lkZ2V0OiBHdGsuV2lkZ2V0LCB7XG4gICAgb25Gb2N1c0VudGVyLFxuICAgIG9uRm9jdXNMZWF2ZSxcbiAgICBvbktleVByZXNzZWQsXG4gICAgb25LZXlSZWxlYXNlZCxcbiAgICBvbktleU1vZGlmaWVyLFxuICAgIG9uTGVnYWN5LFxuICAgIG9uQnV0dG9uUHJlc3NlZCxcbiAgICBvbkJ1dHRvblJlbGVhc2VkLFxuICAgIG9uSG92ZXJFbnRlcixcbiAgICBvbkhvdmVyTGVhdmUsXG4gICAgb25Nb3Rpb24sXG4gICAgb25TY3JvbGwsXG4gICAgb25TY3JvbGxEZWNlbGVyYXRlLFxuICAgIC4uLnByb3BzXG59OiBFdmVudENvbnRyb2xsZXI8R3RrLldpZGdldD4gJiBUKSB7XG4gICAgaWYgKG9uRm9jdXNFbnRlciB8fCBvbkZvY3VzTGVhdmUpIHtcbiAgICAgICAgY29uc3QgZm9jdXMgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlckZvY3VzXG4gICAgICAgIHdpZGdldC5hZGRfY29udHJvbGxlcihmb2N1cylcblxuICAgICAgICBpZiAob25Gb2N1c0VudGVyKVxuICAgICAgICAgICAgZm9jdXMuY29ubmVjdChcImVudGVyXCIsICgpID0+IG9uRm9jdXNFbnRlcih3aWRnZXQpKVxuXG4gICAgICAgIGlmIChvbkZvY3VzTGVhdmUpXG4gICAgICAgICAgICBmb2N1cy5jb25uZWN0KFwibGVhdmVcIiwgKCkgPT4gb25Gb2N1c0xlYXZlKHdpZGdldCkpXG4gICAgfVxuXG4gICAgaWYgKG9uS2V5UHJlc3NlZCB8fCBvbktleVJlbGVhc2VkIHx8IG9uS2V5TW9kaWZpZXIpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJLZXlcbiAgICAgICAgd2lkZ2V0LmFkZF9jb250cm9sbGVyKGtleSlcblxuICAgICAgICBpZiAob25LZXlQcmVzc2VkKVxuICAgICAgICAgICAga2V5LmNvbm5lY3QoXCJrZXktcHJlc3NlZFwiLCAoXywgdmFsLCBjb2RlLCBzdGF0ZSkgPT4gb25LZXlQcmVzc2VkKHdpZGdldCwgdmFsLCBjb2RlLCBzdGF0ZSkpXG5cbiAgICAgICAgaWYgKG9uS2V5UmVsZWFzZWQpXG4gICAgICAgICAgICBrZXkuY29ubmVjdChcImtleS1yZWxlYXNlZFwiLCAoXywgdmFsLCBjb2RlLCBzdGF0ZSkgPT4gb25LZXlSZWxlYXNlZCh3aWRnZXQsIHZhbCwgY29kZSwgc3RhdGUpKVxuXG4gICAgICAgIGlmIChvbktleU1vZGlmaWVyKVxuICAgICAgICAgICAga2V5LmNvbm5lY3QoXCJtb2RpZmllcnNcIiwgKF8sIHN0YXRlKSA9PiBvbktleU1vZGlmaWVyKHdpZGdldCwgc3RhdGUpKVxuICAgIH1cblxuICAgIGlmIChvbkxlZ2FjeSB8fCBvbkJ1dHRvblByZXNzZWQgfHwgb25CdXR0b25SZWxlYXNlZCkge1xuICAgICAgICBjb25zdCBsZWdhY3kgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlckxlZ2FjeVxuICAgICAgICB3aWRnZXQuYWRkX2NvbnRyb2xsZXIobGVnYWN5KVxuXG4gICAgICAgIGxlZ2FjeS5jb25uZWN0KFwiZXZlbnRcIiwgKF8sIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuZ2V0X2V2ZW50X3R5cGUoKSA9PT0gR2RrLkV2ZW50VHlwZS5CVVRUT05fUFJFU1MpIHtcbiAgICAgICAgICAgICAgICBvbkJ1dHRvblByZXNzZWQ/Lih3aWRnZXQsIGV2ZW50IGFzIEdkay5CdXR0b25FdmVudClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGV2ZW50LmdldF9ldmVudF90eXBlKCkgPT09IEdkay5FdmVudFR5cGUuQlVUVE9OX1JFTEVBU0UpIHtcbiAgICAgICAgICAgICAgICBvbkJ1dHRvblJlbGVhc2VkPy4od2lkZ2V0LCBldmVudCBhcyBHZGsuQnV0dG9uRXZlbnQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG9uTGVnYWN5Py4od2lkZ2V0LCBldmVudClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAob25Nb3Rpb24gfHwgb25Ib3ZlckVudGVyIHx8IG9uSG92ZXJMZWF2ZSkge1xuICAgICAgICBjb25zdCBob3ZlciA9IG5ldyBHdGsuRXZlbnRDb250cm9sbGVyTW90aW9uXG4gICAgICAgIHdpZGdldC5hZGRfY29udHJvbGxlcihob3ZlcilcblxuICAgICAgICBpZiAob25Ib3ZlckVudGVyKVxuICAgICAgICAgICAgaG92ZXIuY29ubmVjdChcImVudGVyXCIsIChfLCB4LCB5KSA9PiBvbkhvdmVyRW50ZXIod2lkZ2V0LCB4LCB5KSlcblxuICAgICAgICBpZiAob25Ib3ZlckxlYXZlKVxuICAgICAgICAgICAgaG92ZXIuY29ubmVjdChcImxlYXZlXCIsICgpID0+IG9uSG92ZXJMZWF2ZSh3aWRnZXQpKVxuXG4gICAgICAgIGlmIChvbk1vdGlvbilcbiAgICAgICAgICAgIGhvdmVyLmNvbm5lY3QoXCJtb3Rpb25cIiwgKF8sIHgsIHkpID0+IG9uTW90aW9uKHdpZGdldCwgeCwgeSkpXG4gICAgfVxuXG4gICAgaWYgKG9uU2Nyb2xsIHx8IG9uU2Nyb2xsRGVjZWxlcmF0ZSkge1xuICAgICAgICBjb25zdCBzY3JvbGwgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbFxuICAgICAgICBzY3JvbGwuZmxhZ3MgPSBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsRmxhZ3MuQk9USF9BWEVTIHwgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLktJTkVUSUNcbiAgICAgICAgd2lkZ2V0LmFkZF9jb250cm9sbGVyKHNjcm9sbClcblxuICAgICAgICBpZiAob25TY3JvbGwpXG4gICAgICAgICAgICBzY3JvbGwuY29ubmVjdChcInNjcm9sbFwiLCAoXywgeCwgeSkgPT4gb25TY3JvbGwod2lkZ2V0LCB4LCB5KSlcblxuICAgICAgICBpZiAob25TY3JvbGxEZWNlbGVyYXRlKVxuICAgICAgICAgICAgc2Nyb2xsLmNvbm5lY3QoXCJkZWNlbGVyYXRlXCIsIChfLCB4LCB5KSA9PiBvblNjcm9sbERlY2VsZXJhdGUod2lkZ2V0LCB4LCB5KSlcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcHNcbn1cbiIsICJpbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBta0FwcCB9IGZyb20gXCIuLi9fYXBwXCJcblxuR3RrLmluaXQoKVxuXG4vLyBzdG9wIHRoaXMgZnJvbSBsZWFraW5nIGludG8gc3VicHJvY2Vzc2VzXG4vLyBhbmQgZ2lvIGxhdW5jaCBpbnZvY2F0aW9uc1xuR0xpYi51bnNldGVudihcIkxEX1BSRUxPQURcIilcblxuLy8gdXNlcnMgbWlnaHQgd2FudCB0byB1c2UgQWR3YWl0YSBpbiB3aGljaCBjYXNlIGl0IGhhcyB0byBiZSBpbml0aWFsaXplZFxuLy8gaXQgbWlnaHQgYmUgY29tbW9uIHBpdGZhbGwgdG8gZm9yZ2V0IGl0IGJlY2F1c2UgYEFwcGAgaXMgbm90IGBBZHcuQXBwbGljYXRpb25gXG5hd2FpdCBpbXBvcnQoXCJnaTovL0Fkdz92ZXJzaW9uPTFcIilcbiAgICAudGhlbigoeyBkZWZhdWx0OiBBZHcgfSkgPT4gQWR3LmluaXQoKSlcbiAgICAuY2F0Y2goKCkgPT4gdm9pZCAwKVxuXG5leHBvcnQgZGVmYXVsdCBta0FwcChBc3RhbC5BcHBsaWNhdGlvbilcbiIsICIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHsgfVxuXG5jb25zdCBzbmFrZWlmeSA9IChzdHI6IHN0cmluZykgPT4gc3RyXG4gICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgLnRvTG93ZXJDYXNlKClcblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKG0gPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHsgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKCkgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvLCBOb2RlLCBFbmRwb2ludCwgRGV2aWNlIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwibm9kZXNcIilcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEVuZHBvaW50LnByb3RvdHlwZSwgXCJyb3V0ZXNcIilcbiAgICBwYXRjaChOb2RlLnByb3RvdHlwZSwgXCJjaGFubmVsc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwicHJvZmlsZXNcIilcbiAgICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCBcInJvdXRlc1wiKVxufSlcbiIsICJpbXBvcnQgXCIuL292ZXJyaWRlcy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgc3RhdGljIHsgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSkgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2tfZmluaXNoKHJlcyksXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgbWFpbj8uKC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xpZW50KG1zZyA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSEsIC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY3NzKVxuICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpXG5cbiAgICAgICAgICAgIGlmIChpY29ucylcbiAgICAgICAgICAgICAgICBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZClcbiAgICAgICAgICAgICAgICBhcHAuaG9sZCgpXG5cbiAgICAgICAgICAgIGFwcC5ydW5Bc3luYyhbXSlcbiAgICAgICAgfVxuICAgIH0pXG59XG4iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBhc3RhbGlmeSwgeyB0eXBlLCB0eXBlIENvbnN0cnVjdFByb3BzIH0gZnJvbSBcIi4vYXN0YWxpZnkuanNcIlxuXG5mdW5jdGlvbiBmaWx0ZXIoY2hpbGRyZW46IGFueVtdKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuLmZsYXQoSW5maW5pdHkpLm1hcChjaCA9PiBjaCBpbnN0YW5jZW9mIEd0ay5XaWRnZXRcbiAgICAgICAgPyBjaFxuICAgICAgICA6IG5ldyBHdGsuTGFiZWwoeyB2aXNpYmxlOiB0cnVlLCBsYWJlbDogU3RyaW5nKGNoKSB9KSlcbn1cblxuLy8gQm94XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoQXN0YWwuQm94LnByb3RvdHlwZSwgXCJjaGlsZHJlblwiLCB7XG4gICAgZ2V0KCkgeyByZXR1cm4gdGhpcy5nZXRfY2hpbGRyZW4oKSB9LFxuICAgIHNldCh2KSB7IHRoaXMuc2V0X2NoaWxkcmVuKHYpIH0sXG59KVxuXG5leHBvcnQgdHlwZSBCb3hQcm9wcyA9IENvbnN0cnVjdFByb3BzPEFzdGFsLkJveCwgQXN0YWwuQm94LkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgQm94ID0gYXN0YWxpZnk8QXN0YWwuQm94LCBBc3RhbC5Cb3guQ29uc3RydWN0b3JQcm9wcz4oQXN0YWwuQm94LCB7XG4gICAgZ2V0Q2hpbGRyZW4oc2VsZikgeyByZXR1cm4gc2VsZi5nZXRfY2hpbGRyZW4oKSB9LFxuICAgIHNldENoaWxkcmVuKHNlbGYsIGNoaWxkcmVuKSB7IHJldHVybiBzZWxmLnNldF9jaGlsZHJlbihmaWx0ZXIoY2hpbGRyZW4pKSB9LFxufSlcblxuLy8gQnV0dG9uXG50eXBlIEJ1dHRvblNpZ25hbHMgPSB7XG4gICAgb25DbGlja2VkOiBbXVxufVxuXG5leHBvcnQgdHlwZSBCdXR0b25Qcm9wcyA9IENvbnN0cnVjdFByb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcywgQnV0dG9uU2lnbmFscz5cbmV4cG9ydCBjb25zdCBCdXR0b24gPSBhc3RhbGlmeTxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHMsIEJ1dHRvblNpZ25hbHM+KEd0ay5CdXR0b24pXG5cbi8vIENlbnRlckJveFxuZXhwb3J0IHR5cGUgQ2VudGVyQm94UHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuQ2VudGVyQm94LCBHdGsuQ2VudGVyQm94LkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgQ2VudGVyQm94ID0gYXN0YWxpZnk8R3RrLkNlbnRlckJveCwgR3RrLkNlbnRlckJveC5Db25zdHJ1Y3RvclByb3BzPihHdGsuQ2VudGVyQm94LCB7XG4gICAgZ2V0Q2hpbGRyZW4oYm94KSB7XG4gICAgICAgIHJldHVybiBbYm94LnN0YXJ0V2lkZ2V0LCBib3guY2VudGVyV2lkZ2V0LCBib3guZW5kV2lkZ2V0XVxuICAgIH0sXG4gICAgc2V0Q2hpbGRyZW4oYm94LCBjaGlsZHJlbikge1xuICAgICAgICBjb25zdCBjaCA9IGZpbHRlcihjaGlsZHJlbilcbiAgICAgICAgYm94LnN0YXJ0V2lkZ2V0ID0gY2hbMF0gfHwgbmV3IEd0ay5Cb3hcbiAgICAgICAgYm94LmNlbnRlcldpZGdldCA9IGNoWzFdIHx8IG5ldyBHdGsuQm94XG4gICAgICAgIGJveC5lbmRXaWRnZXQgPSBjaFsyXSB8fCBuZXcgR3RrLkJveFxuICAgIH0sXG59KVxuXG4vLyBUT0RPOiBDaXJjdWxhclByb2dyZXNzXG4vLyBUT0RPOiBEcmF3aW5nQXJlYVxuXG4vLyBFbnRyeVxudHlwZSBFbnRyeVNpZ25hbHMgPSB7XG4gICAgb25BY3RpdmF0ZTogW11cbiAgICBvbk5vdGlmeVRleHQ6IFtdXG59XG5cbmV4cG9ydCB0eXBlIEVudHJ5UHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuRW50cnksIEd0ay5FbnRyeS5Db25zdHJ1Y3RvclByb3BzLCBFbnRyeVNpZ25hbHM+XG5leHBvcnQgY29uc3QgRW50cnkgPSBhc3RhbGlmeTxHdGsuRW50cnksIEd0ay5FbnRyeS5Db25zdHJ1Y3RvclByb3BzLCBFbnRyeVNpZ25hbHM+KEd0ay5FbnRyeSwge1xuICAgIGdldENoaWxkcmVuKCkgeyByZXR1cm4gW10gfSxcbn0pXG5cbi8vIEltYWdlXG5leHBvcnQgdHlwZSBJbWFnZVByb3BzID0gQ29uc3RydWN0UHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbmV4cG9ydCBjb25zdCBJbWFnZSA9IGFzdGFsaWZ5PEd0ay5JbWFnZSwgR3RrLkltYWdlLkNvbnN0cnVjdG9yUHJvcHM+KEd0ay5JbWFnZSwge1xuICAgIGdldENoaWxkcmVuKCkgeyByZXR1cm4gW10gfSxcbn0pXG5cbi8vIExhYmVsXG5leHBvcnQgdHlwZSBMYWJlbFByb3BzID0gQ29uc3RydWN0UHJvcHM8R3RrLkxhYmVsLCBHdGsuTGFiZWwuQ29uc3RydWN0b3JQcm9wcz5cbmV4cG9ydCBjb25zdCBMYWJlbCA9IGFzdGFsaWZ5PEd0ay5MYWJlbCwgR3RrLkxhYmVsLkNvbnN0cnVjdG9yUHJvcHM+KEd0ay5MYWJlbCwge1xuICAgIGdldENoaWxkcmVuKCkgeyByZXR1cm4gW10gfSxcbiAgICBzZXRDaGlsZHJlbihzZWxmLCBjaGlsZHJlbikgeyBzZWxmLmxhYmVsID0gU3RyaW5nKGNoaWxkcmVuKSB9LFxufSlcblxuLy8gTGV2ZWxCYXJcbmV4cG9ydCB0eXBlIExldmVsQmFyUHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuTGV2ZWxCYXIsIEd0ay5MZXZlbEJhci5Db25zdHJ1Y3RvclByb3BzPlxuZXhwb3J0IGNvbnN0IExldmVsQmFyID0gYXN0YWxpZnk8R3RrLkxldmVsQmFyLCBHdGsuTGV2ZWxCYXIuQ29uc3RydWN0b3JQcm9wcz4oR3RrLkxldmVsQmFyLCB7XG4gICAgZ2V0Q2hpbGRyZW4oKSB7IHJldHVybiBbXSB9LFxufSlcblxuLy8gVE9ETzogTGlzdEJveFxuXG4vLyBPdmVybGF5XG5leHBvcnQgdHlwZSBPdmVybGF5UHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuT3ZlcmxheSwgR3RrLk92ZXJsYXkuQ29uc3RydWN0b3JQcm9wcz5cbmV4cG9ydCBjb25zdCBPdmVybGF5ID0gYXN0YWxpZnk8R3RrLk92ZXJsYXksIEd0ay5PdmVybGF5LkNvbnN0cnVjdG9yUHJvcHM+KEd0ay5PdmVybGF5LCB7XG4gICAgZ2V0Q2hpbGRyZW4oc2VsZikge1xuICAgICAgICBjb25zdCBjaGlsZHJlbjogQXJyYXk8R3RrLldpZGdldD4gPSBbXVxuICAgICAgICBsZXQgY2ggPSBzZWxmLmdldF9maXJzdF9jaGlsZCgpXG4gICAgICAgIHdoaWxlIChjaCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY2hpbGRyZW4ucHVzaChjaClcbiAgICAgICAgICAgIGNoID0gY2guZ2V0X25leHRfc2libGluZygpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2hpbGRyZW4uZmlsdGVyKGNoID0+IGNoICE9PSBzZWxmLmNoaWxkKVxuICAgIH0sXG4gICAgc2V0Q2hpbGRyZW4oc2VsZiwgY2hpbGRyZW4pIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBmaWx0ZXIoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlcyA9IHR5cGUgaW4gY2hpbGRcbiAgICAgICAgICAgICAgICA/IChjaGlsZFt0eXBlXSBhcyBzdHJpbmcpLnNwbGl0KC9cXHMrLylcbiAgICAgICAgICAgICAgICA6IFtdXG5cbiAgICAgICAgICAgIGlmICh0eXBlcy5pbmNsdWRlcyhcIm92ZXJsYXlcIikpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmFkZF9vdmVybGF5KGNoaWxkKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNldF9jaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi5zZXRfbWVhc3VyZV9vdmVybGF5KGNoaWxkLCB0eXBlcy5pbmNsdWRlcyhcIm1lYXN1cmVcIikpXG4gICAgICAgICAgICBzZWxmLnNldF9jbGlwX292ZXJsYXkoY2hpbGQsIHR5cGVzLmluY2x1ZGVzKFwiY2xpcFwiKSlcbiAgICAgICAgfVxuICAgIH0sXG59KVxuXG4vLyBSZXZlYWxlclxuZXhwb3J0IHR5cGUgUmV2ZWFsZXJQcm9wcyA9IENvbnN0cnVjdFByb3BzPEd0ay5SZXZlYWxlciwgR3RrLlJldmVhbGVyLkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgUmV2ZWFsZXIgPSBhc3RhbGlmeTxHdGsuUmV2ZWFsZXIsIEd0ay5SZXZlYWxlci5Db25zdHJ1Y3RvclByb3BzPihHdGsuUmV2ZWFsZXIpXG5cbi8vIFNsaWRlclxudHlwZSBTbGlkZXJTaWduYWxzID0ge1xuICAgIG9uQ2hhbmdlVmFsdWU6IFtdXG59XG5cbmV4cG9ydCB0eXBlIFNsaWRlclByb3BzID0gQ29uc3RydWN0UHJvcHM8QXN0YWwuU2xpZGVyLCBBc3RhbC5TbGlkZXIuQ29uc3RydWN0b3JQcm9wcywgU2xpZGVyU2lnbmFscz5cbmV4cG9ydCBjb25zdCBTbGlkZXIgPSBhc3RhbGlmeTxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzLCBTbGlkZXJTaWduYWxzPihBc3RhbC5TbGlkZXIsIHtcbiAgICBnZXRDaGlsZHJlbigpIHsgcmV0dXJuIFtdIH0sXG59KVxuXG4vLyBTdGFja1xuZXhwb3J0IHR5cGUgU3RhY2tQcm9wcyA9IENvbnN0cnVjdFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgU3RhY2sgPSBhc3RhbGlmeTxHdGsuU3RhY2ssIEd0ay5TdGFjay5Db25zdHJ1Y3RvclByb3BzPihHdGsuU3RhY2ssIHtcbiAgICBzZXRDaGlsZHJlbihzZWxmLCBjaGlsZHJlbikge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZpbHRlcihjaGlsZHJlbikpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZC5uYW1lICE9IFwiXCIgJiYgY2hpbGQubmFtZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NoaWxkKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbn0pXG5cbi8vIFN3aXRjaFxuZXhwb3J0IHR5cGUgU3dpdGNoUHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuU3dpdGNoLCBHdGsuU3dpdGNoLkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgU3dpdGNoID0gYXN0YWxpZnk8R3RrLlN3aXRjaCwgR3RrLlN3aXRjaC5Db25zdHJ1Y3RvclByb3BzPihHdGsuU3dpdGNoLCB7XG4gICAgZ2V0Q2hpbGRyZW4oKSB7IHJldHVybiBbXSB9LFxufSlcblxuLy8gV2luZG93XG5leHBvcnQgdHlwZSBXaW5kb3dQcm9wcyA9IENvbnN0cnVjdFByb3BzPEFzdGFsLldpbmRvdywgQXN0YWwuV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgV2luZG93ID0gYXN0YWxpZnk8QXN0YWwuV2luZG93LCBBc3RhbC5XaW5kb3cuQ29uc3RydWN0b3JQcm9wcz4oQXN0YWwuV2luZG93KVxuXG4vLyBNZW51QnV0dG9uXG5leHBvcnQgdHlwZSBNZW51QnV0dG9uUHJvcHMgPSBDb25zdHJ1Y3RQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbmV4cG9ydCBjb25zdCBNZW51QnV0dG9uID0gYXN0YWxpZnk8R3RrLk1lbnVCdXR0b24sIEd0ay5NZW51QnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+KEd0ay5NZW51QnV0dG9uLCB7XG4gICAgZ2V0Q2hpbGRyZW4oc2VsZikgeyByZXR1cm4gW3NlbGYucG9wb3Zlciwgc2VsZi5jaGlsZF0gfSxcbiAgICBzZXRDaGlsZHJlbihzZWxmLCBjaGlsZHJlbikge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZpbHRlcihjaGlsZHJlbikpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5zZXRfcG9wb3ZlcihjaGlsZClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VsZi5zZXRfY2hpbGQoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxufSlcblxuLy8gUG9wb3BlclxuZXhwb3J0IHR5cGUgUG9wb3ZlclByb3BzID0gQ29uc3RydWN0UHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG5leHBvcnQgY29uc3QgUG9wb3ZlciA9IGFzdGFsaWZ5PEd0ay5Qb3BvdmVyLCBHdGsuUG9wb3Zlci5Db25zdHJ1Y3RvclByb3BzPihHdGsuUG9wb3ZlcilcbiIsICJpbXBvcnQgeyBHZGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5cbmNsYXNzIEN1cnNvciB7XG4gICAgcHVibGljIERFRkFVTFQgPSBHZGsuQ3Vyc29yLm5ld19mcm9tX25hbWUoXCJkZWZhdWx0XCIsIG51bGwpXG5cbiAgICBwdWJsaWMgUE9JTlRFUiA9IEdkay5DdXJzb3IubmV3X2Zyb21fbmFtZShcInBvaW50ZXJcIiwgbnVsbClcblxuICAgIHB1YmxpYyBOT1RfQUxMT1dFRCA9IEdkay5DdXJzb3IubmV3X2Zyb21fbmFtZShcIm5vdC1hbGxvd2VkXCIsIG51bGwpXG59XG5cbmV4cG9ydCBkZWZhdWx0IEN1cnNvclxuIiwgImltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjFcIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5cbmNsYXNzIEh5cHJsYW5kIGltcGxlbWVudHMgU2VydmljZSB7XG4gICAgcHVibGljIGluc3RhbmNlOiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kXG5cbiAgICBwcml2YXRlIGxpc3RlbmVyczogTWFwPHN0cmluZywgbnVtYmVyPiA9IG5ldyBNYXAoKVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KClcbiAgICB9XG4gICAgXG4gICAgcHVibGljIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXCJzdWJtYXBcIiwgdGhpcy5pbnN0YW5jZS5jb25uZWN0KFwic3VibWFwXCIsIHRoaXMub25TdWJtYXAuYmluZCh0aGlzKSkpXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGlkLCBldmVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5kaXNjb25uZWN0KGlkKVxuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGV2ZW50KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgb25TdWJtYXAoX3NvdXJjZTogQXN0YWxIeXBybGFuZC5IeXBybGFuZCwgbmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiU3VibWFwIGV2ZW50OlwiLCBuYW1lKVxuXG4gICAgICAgIGlmIChuYW1lID09PSBcInJlc2l6ZVwiKSB7XG4gICAgICAgICAgICBleGVjQXN5bmMoXCJub3RpZnktc2VuZCAtYSBIeXBybGFuZCAtdCAxMDAwICdSZXNpemUgbW9kZSBhY3RpdmF0ZWQnXCIpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGV4ZWNBc3luYyhcIm5vdGlmeS1zZW5kIC1hIEh5cHJsYW5kIC10IDEwMDAgJ0JhY2sgdG8gbm9ybWFsIG1vZGUnXCIpXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBIeXBybGFuZFxuIiwgImltcG9ydCBcIi4vb3ZlcnJpZGVzLmpzXCJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXN0YWxJTyB9IGZyb20gXCJnaTovL0FzdGFsSU8/dmVyc2lvbj0wLjFcIlxuZXhwb3J0ICogZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi90aW1lLmpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL2ZpbGUuanNcIlxuZXhwb3J0ICogZnJvbSBcIi4vZ29iamVjdC5qc1wiXG5leHBvcnQgeyBCaW5kaW5nLCBiaW5kIH0gZnJvbSBcIi4vYmluZGluZy5qc1wiXG5leHBvcnQgeyBWYXJpYWJsZSwgZGVyaXZlIH0gZnJvbSBcIi4vdmFyaWFibGUuanNcIlxuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcblxuZXhwb3J0IHsgR2lvIH1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIEFzdGFsLnJlYWRfZmlsZShwYXRoKSB8fCBcIlwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZUFzeW5jKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwucmVhZF9maWxlX2FzeW5jKHBhdGgsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC5yZWFkX2ZpbGVfZmluaXNoKHJlcykgfHwgXCJcIilcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBBc3RhbC53cml0ZV9maWxlKHBhdGgsIGNvbnRlbnQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVBc3luYyhwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLndyaXRlX2ZpbGVfYXN5bmMocGF0aCwgY29udGVudCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLndyaXRlX2ZpbGVfZmluaXNoKHJlcykpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9uaXRvckZpbGUoXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHZvaWQsXG4pOiBHaW8uRmlsZU1vbml0b3Ige1xuICAgIHJldHVybiBBc3RhbC5tb25pdG9yX2ZpbGUocGF0aCwgKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGZpbGUsIGV2ZW50KVxuICAgIH0pIVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgeyBkZWZhdWx0IGFzIEdMaWIgfSBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmV4cG9ydCB7IEdPYmplY3QsIEdPYmplY3QgYXMgZGVmYXVsdCB9XG5cbmNvbnN0IG1ldGEgPSBTeW1ib2woXCJtZXRhXCIpXG5jb25zdCBwcml2ID0gU3ltYm9sKFwicHJpdlwiKVxuXG5jb25zdCB7IFBhcmFtU3BlYywgUGFyYW1GbGFncyB9ID0gR09iamVjdFxuXG5jb25zdCBrZWJhYmlmeSA9IChzdHI6IHN0cmluZykgPT4gc3RyXG4gICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAucmVwbGFjZUFsbChcIl9cIiwgXCItXCIpXG4gICAgLnRvTG93ZXJDYXNlKClcblxudHlwZSBTaWduYWxEZWNsYXJhdGlvbiA9IHtcbiAgICBmbGFncz86IEdPYmplY3QuU2lnbmFsRmxhZ3NcbiAgICBhY2N1bXVsYXRvcj86IEdPYmplY3QuQWNjdW11bGF0b3JUeXBlXG4gICAgcmV0dXJuX3R5cGU/OiBHT2JqZWN0LkdUeXBlXG4gICAgcGFyYW1fdHlwZXM/OiBBcnJheTxHT2JqZWN0LkdUeXBlPlxufVxuXG50eXBlIFByb3BlcnR5RGVjbGFyYXRpb24gPVxuICAgIHwgSW5zdGFuY2VUeXBlPHR5cGVvZiBHT2JqZWN0LlBhcmFtU3BlYz5cbiAgICB8IHsgJGd0eXBlOiBHT2JqZWN0LkdUeXBlIH1cbiAgICB8IHR5cGVvZiBTdHJpbmdcbiAgICB8IHR5cGVvZiBOdW1iZXJcbiAgICB8IHR5cGVvZiBCb29sZWFuXG4gICAgfCB0eXBlb2YgT2JqZWN0XG5cbnR5cGUgR09iamVjdENvbnN0cnVjdG9yID0ge1xuICAgIFttZXRhXT86IHtcbiAgICAgICAgUHJvcGVydGllcz86IHsgW2tleTogc3RyaW5nXTogR09iamVjdC5QYXJhbVNwZWMgfVxuICAgICAgICBTaWduYWxzPzogeyBba2V5OiBzdHJpbmddOiBHT2JqZWN0LlNpZ25hbERlZmluaXRpb24gfVxuICAgIH1cbiAgICBuZXcoLi4uYXJnczogYW55W10pOiBhbnlcbn1cblxudHlwZSBNZXRhSW5mbyA9IEdPYmplY3QuTWV0YUluZm88bmV2ZXIsIEFycmF5PHsgJGd0eXBlOiBHT2JqZWN0LkdUeXBlIH0+LCBuZXZlcj5cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKG9wdGlvbnM6IE1ldGFJbmZvID0ge30pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNsczogR09iamVjdENvbnN0cnVjdG9yKSB7XG4gICAgICAgIGNvbnN0IHQgPSBvcHRpb25zLlRlbXBsYXRlXG4gICAgICAgIGlmICh0eXBlb2YgdCA9PT0gXCJzdHJpbmdcIiAmJiAhdC5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikgJiYgIXQuc3RhcnRzV2l0aChcImZpbGU6Ly9cIikpIHtcbiAgICAgICAgICAgIC8vIGFzc3VtZSB4bWwgdGVtcGxhdGVcbiAgICAgICAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodClcbiAgICAgICAgfVxuXG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh7XG4gICAgICAgICAgICBTaWduYWxzOiB7IC4uLmNsc1ttZXRhXT8uU2lnbmFscyB9LFxuICAgICAgICAgICAgUHJvcGVydGllczogeyAuLi5jbHNbbWV0YV0/LlByb3BlcnRpZXMgfSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0sIGNscylcblxuICAgICAgICBkZWxldGUgY2xzW21ldGFdXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHkoZGVjbGFyYXRpb246IFByb3BlcnR5RGVjbGFyYXRpb24gPSBPYmplY3QpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldDogYW55LCBwcm9wOiBhbnksIGRlc2M/OiBQcm9wZXJ0eURlc2NyaXB0b3IpIHtcbiAgICAgICAgdGFyZ2V0LmNvbnN0cnVjdG9yW21ldGFdID8/PSB7fVxuICAgICAgICB0YXJnZXQuY29uc3RydWN0b3JbbWV0YV0uUHJvcGVydGllcyA/Pz0ge31cblxuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkocHJvcClcblxuICAgICAgICBpZiAoIWRlc2MpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3AsIHtcbiAgICAgICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW3ByaXZdPy5bcHJvcF0gPz8gZGVmYXVsdFZhbHVlKGRlY2xhcmF0aW9uKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2V0KHY6IGFueSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodiAhPT0gdGhpc1twcm9wXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1twcml2XSA/Pz0ge31cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcHJpdl1bcHJvcF0gPSB2XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShuYW1lKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGBzZXRfJHtuYW1lLnJlcGxhY2UoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgICAgICAgICAgdmFsdWUodjogYW55KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNbcHJvcF0gPSB2XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGBnZXRfJHtuYW1lLnJlcGxhY2UoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgICAgICAgICAgdmFsdWUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW3Byb3BdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRhcmdldC5jb25zdHJ1Y3RvclttZXRhXS5Qcm9wZXJ0aWVzW2tlYmFiaWZ5KHByb3ApXSA9IHBzcGVjKG5hbWUsIFBhcmFtRmxhZ3MuUkVBRFdSSVRFLCBkZWNsYXJhdGlvbilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBmbGFncyA9IDBcbiAgICAgICAgICAgIGlmIChkZXNjLmdldCkgZmxhZ3MgfD0gUGFyYW1GbGFncy5SRUFEQUJMRVxuICAgICAgICAgICAgaWYgKGRlc2Muc2V0KSBmbGFncyB8PSBQYXJhbUZsYWdzLldSSVRBQkxFXG5cbiAgICAgICAgICAgIHRhcmdldC5jb25zdHJ1Y3RvclttZXRhXS5Qcm9wZXJ0aWVzW2tlYmFiaWZ5KHByb3ApXSA9IHBzcGVjKG5hbWUsIGZsYWdzLCBkZWNsYXJhdGlvbilcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbCguLi5wYXJhbXM6IEFycmF5PHsgJGd0eXBlOiBHT2JqZWN0LkdUeXBlIH0gfCB0eXBlb2YgT2JqZWN0Pik6XG4odGFyZ2V0OiBhbnksIHNpZ25hbDogYW55LCBkZXNjPzogUHJvcGVydHlEZXNjcmlwdG9yKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWwoZGVjbGFyYXRpb24/OiBTaWduYWxEZWNsYXJhdGlvbik6XG4odGFyZ2V0OiBhbnksIHNpZ25hbDogYW55LCBkZXNjPzogUHJvcGVydHlEZXNjcmlwdG9yKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWwoXG4gICAgZGVjbGFyYXRpb24/OiBTaWduYWxEZWNsYXJhdGlvbiB8IHsgJGd0eXBlOiBHT2JqZWN0LkdUeXBlIH0gfCB0eXBlb2YgT2JqZWN0LFxuICAgIC4uLnBhcmFtczogQXJyYXk8eyAkZ3R5cGU6IEdPYmplY3QuR1R5cGUgfSB8IHR5cGVvZiBPYmplY3Q+XG4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldDogYW55LCBzaWduYWw6IGFueSwgZGVzYz86IFByb3BlcnR5RGVzY3JpcHRvcikge1xuICAgICAgICB0YXJnZXQuY29uc3RydWN0b3JbbWV0YV0gPz89IHt9XG4gICAgICAgIHRhcmdldC5jb25zdHJ1Y3RvclttZXRhXS5TaWduYWxzID8/PSB7fVxuXG4gICAgICAgIGNvbnN0IG5hbWUgPSBrZWJhYmlmeShzaWduYWwpXG5cbiAgICAgICAgaWYgKGRlY2xhcmF0aW9uIHx8IHBhcmFtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFRPRE86IHR5cGUgYXNzZXJ0XG4gICAgICAgICAgICBjb25zdCBhcnIgPSBbZGVjbGFyYXRpb24sIC4uLnBhcmFtc10ubWFwKHYgPT4gdi4kZ3R5cGUpXG4gICAgICAgICAgICB0YXJnZXQuY29uc3RydWN0b3JbbWV0YV0uU2lnbmFsc1tuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBwYXJhbV90eXBlczogYXJyLFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGFyZ2V0LmNvbnN0cnVjdG9yW21ldGFdLlNpZ25hbHNbbmFtZV0gPSBkZWNsYXJhdGlvbiB8fCB7XG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtdLFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFkZXNjKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBzaWduYWwsIHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdChuYW1lLCAuLi5hcmdzKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3Qgb2c6ICgoLi4uYXJnczogYW55W10pID0+IHZvaWQpID0gZGVzYy52YWx1ZVxuICAgICAgICAgICAgZGVzYy52YWx1ZSA9IGZ1bmN0aW9uICguLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3Igbm90IHR5cGVkXG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KG5hbWUsIC4uLmFyZ3MpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBgb25fJHtuYW1lLnJlcGxhY2UoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uICguLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2cuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcHNwZWMobmFtZTogc3RyaW5nLCBmbGFnczogbnVtYmVyLCBkZWNsYXJhdGlvbjogUHJvcGVydHlEZWNsYXJhdGlvbikge1xuICAgIGlmIChkZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFBhcmFtU3BlYylcbiAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uXG5cbiAgICBzd2l0Y2ggKGRlY2xhcmF0aW9uKSB7XG4gICAgICAgIGNhc2UgU3RyaW5nOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgICAgIGNhc2UgTnVtYmVyOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5kb3VibGUobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIC1OdW1iZXIuTUFYX1ZBTFVFLCBOdW1iZXIuTUFYX1ZBTFVFLCAwKVxuICAgICAgICBjYXNlIEJvb2xlYW46XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmJvb2xlYW4obmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIGZhbHNlKVxuICAgICAgICBjYXNlIE9iamVjdDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3N0eXBlZFxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIGRlY2xhcmF0aW9uLiRndHlwZSlcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRWYWx1ZShkZWNsYXJhdGlvbjogUHJvcGVydHlEZWNsYXJhdGlvbikge1xuICAgIGlmIChkZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFBhcmFtU3BlYylcbiAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uLmdldF9kZWZhdWx0X3ZhbHVlKClcblxuICAgIHN3aXRjaCAoZGVjbGFyYXRpb24pIHtcbiAgICAgICAgY2FzZSBTdHJpbmc6XG4gICAgICAgICAgICByZXR1cm4gXCJcIlxuICAgICAgICBjYXNlIE51bWJlcjpcbiAgICAgICAgICAgIHJldHVybiAwXG4gICAgICAgIGNhc2UgQm9vbGVhbjpcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICBjYXNlIE9iamVjdDpcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgfVxufVxuIiwgImltcG9ydCB7IGV4ZWNBc3luYywgR2lvLCBHTGliLCBtb25pdG9yRmlsZSB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgeyBBcHAgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSBcIi4vR29oYW5cIlxuXG5jbGFzcyBUaGVtZSBpbXBsZW1lbnRzIFNlcnZpY2Uge1xuICAgIHB1YmxpYyBkaXI6IHN0cmluZyA9IGAke0dMaWIuZ2V0X2hvbWVfZGlyKCl9Ly5sb2NhbC9zaGFyZS9nb2hhbi9zdHlsZXNgXG5cbiAgICBwdWJsaWMgY29sb3JzOiBzdHJpbmcgPSBgJHt0aGlzLmRpcn0vY29sb3JzLnNjc3NgXG5cbiAgICBwdWJsaWMgc2Nzczogc3RyaW5nID0gYCR7dGhpcy5kaXJ9L3N0eWxlcy5zY3NzYFxuXG4gICAgcHVibGljIGNzczogc3RyaW5nID0gYCR7dGhpcy5kaXJ9L3N0eWxlcy5jc3NgXG5cbiAgICBwcml2YXRlIGZpbGVNb25pdG9yPzogR2lvLkZpbGVNb25pdG9yXG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuY29tcGlsZVNhc3MoKS5jYXRjaChjb25zb2xlLmVycm9yKVxuXG4gICAgICAgIHRoaXMuYXBwbHlUaGVtZSgpXG5cbiAgICAgICAgdGhpcy5tb25pdG9yQ29sb3JDaGFuZ2VzKClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RvcCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmlsZU1vbml0b3IpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsZU1vbml0b3IuY2FuY2VsKClcbiAgICAgICAgICAgIHRoaXMuZmlsZU1vbml0b3IgPSB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgY29tcGlsZVNhc3MoKSB7XG4gICAgICAgIGNvbnN0IHNjc3MgPSBgJHtHTGliLmdldF9ob21lX2RpcigpfS8ubG9jYWwvc2hhcmUvZ29oYW4vc3R5bGVzL3N0eWxlcy5zY3NzYFxuICAgICAgICBjb25zdCBjc3MgPSBgJHtHTGliLmdldF9ob21lX2RpcigpfS8ubG9jYWwvc2hhcmUvZ29oYW4vc3R5bGVzL3N0eWxlcy5jc3NgXG5cbiAgICAgICAgYXdhaXQgZXhlY0FzeW5jKGBzYXNzICR7c2Nzc30gJHtjc3N9YCkuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgICB9XG5cbiAgICBwcml2YXRlIGFwcGx5VGhlbWUoKSB7XG4gICAgICAgIGNvbnN0IGNzcyA9IGAke0dMaWIuZ2V0X2hvbWVfZGlyKCl9Ly5sb2NhbC9zaGFyZS9nb2hhbi9zdHlsZXMvc3R5bGVzLmNzc2BcblxuICAgICAgICBBcHAuYXBwbHlfY3NzKGNzcywgdHJ1ZSlcbiAgICB9XG5cbiAgICBwcml2YXRlIG1vbml0b3JDb2xvckNoYW5nZXMoKSB7XG4gICAgICAgIHRoaXMuZmlsZU1vbml0b3IgPSBtb25pdG9yRmlsZSh0aGlzLmNvbG9ycywgYXN5bmMgKGZpbGUsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQgPT0gR2lvLkZpbGVNb25pdG9yRXZlbnQuQ0hBTkdFRCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29tcGlsZVNhc3MoKS5jYXRjaChjb25zb2xlLmVycm9yKVxuXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBseVRoZW1lKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRoZW1lXG4iLCAiaW1wb3J0IHsgVmFyaWFibGUgfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IHsgU3Vic2NyaWJhYmxlU2VydmljZSB9IGZyb20gXCIuL0dvaGFuXCJcblxuY2xhc3MgVGltZSBpbXBsZW1lbnRzIFN1YnNjcmliYWJsZVNlcnZpY2U8c3RyaW5nPiB7XG4gICAgcHJpdmF0ZSBkYXRldGltZTogVmFyaWFibGU8c3RyaW5nPlxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGF0ZXRpbWUgPSBWYXJpYWJsZShcIlwiKVxuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5zdG9wKClcblxuICAgICAgICB0aGlzLmRhdGV0aW1lLnBvbGwoMTAwMCwgdGhpcy5jb21tYW5kKCksIChvdXRwdXQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBvdXRwdXQudHJpbSgpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgIHRoaXMuZGF0ZXRpbWUuZHJvcCgpXG4gICAgfVxuXG4gICAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZXRpbWUuc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGV0aW1lLmdldCgpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb21tYW5kKCkge1xuICAgICAgICByZXR1cm4gXCJkYXRlICsnJWIgJWQsICVIOiVNJ1wiXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lXG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgdHlwZSBCaW5kYWJsZUNoaWxkIH0gZnJvbSBcIi4vYXN0YWxpZnkuanNcIlxuaW1wb3J0IHsgbWVyZ2VCaW5kaW5ncywganN4IGFzIF9qc3ggfSBmcm9tIFwiLi4vX2FzdGFsLmpzXCJcbmltcG9ydCAqIGFzIFdpZGdldCBmcm9tIFwiLi93aWRnZXQuanNcIlxuXG5leHBvcnQgZnVuY3Rpb24gRnJhZ21lbnQoeyBjaGlsZHJlbiA9IFtdLCBjaGlsZCB9OiB7XG4gICAgY2hpbGQ/OiBCaW5kYWJsZUNoaWxkXG4gICAgY2hpbGRyZW4/OiBBcnJheTxCaW5kYWJsZUNoaWxkPlxufSkge1xuICAgIGlmIChjaGlsZCkgY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICByZXR1cm4gbWVyZ2VCaW5kaW5ncyhjaGlsZHJlbilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeChcbiAgICBjdG9yOiBrZXlvZiB0eXBlb2YgY3RvcnMgfCB0eXBlb2YgR3RrLldpZGdldCxcbiAgICBwcm9wczogYW55LFxuKSB7XG4gICAgcmV0dXJuIF9qc3goY3RvcnMsIGN0b3IgYXMgYW55LCBwcm9wcylcbn1cblxuY29uc3QgY3RvcnMgPSB7XG4gICAgYm94OiBXaWRnZXQuQm94LFxuICAgIGJ1dHRvbjogV2lkZ2V0LkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IFdpZGdldC5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogV2lkZ2V0LkNpcmN1bGFyUHJvZ3Jlc3MsXG4gICAgLy8gZHJhd2luZ2FyZWE6IFdpZGdldC5EcmF3aW5nQXJlYSxcbiAgICBlbnRyeTogV2lkZ2V0LkVudHJ5LFxuICAgIGltYWdlOiBXaWRnZXQuSW1hZ2UsXG4gICAgbGFiZWw6IFdpZGdldC5MYWJlbCxcbiAgICBsZXZlbGJhcjogV2lkZ2V0LkxldmVsQmFyLFxuICAgIG92ZXJsYXk6IFdpZGdldC5PdmVybGF5LFxuICAgIHJldmVhbGVyOiBXaWRnZXQuUmV2ZWFsZXIsXG4gICAgc2xpZGVyOiBXaWRnZXQuU2xpZGVyLFxuICAgIHN0YWNrOiBXaWRnZXQuU3RhY2ssXG4gICAgc3dpdGNoOiBXaWRnZXQuU3dpdGNoLFxuICAgIHdpbmRvdzogV2lkZ2V0LldpbmRvdyxcbiAgICBtZW51YnV0dG9uOiBXaWRnZXQuTWVudUJ1dHRvbixcbiAgICBwb3BvdmVyOiBXaWRnZXQuUG9wb3Zlcixcbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEd0ay5XaWRnZXRcbiAgICAgICAgdHlwZSBFbGVtZW50Q2xhc3MgPSBHdGsuV2lkZ2V0XG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICBib3g6IFdpZGdldC5Cb3hQcm9wc1xuICAgICAgICAgICAgYnV0dG9uOiBXaWRnZXQuQnV0dG9uUHJvcHNcbiAgICAgICAgICAgIGNlbnRlcmJveDogV2lkZ2V0LkNlbnRlckJveFByb3BzXG4gICAgICAgICAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBXaWRnZXQuQ2lyY3VsYXJQcm9ncmVzc1Byb3BzXG4gICAgICAgICAgICAvLyBkcmF3aW5nYXJlYTogV2lkZ2V0LkRyYXdpbmdBcmVhUHJvcHNcbiAgICAgICAgICAgIGVudHJ5OiBXaWRnZXQuRW50cnlQcm9wc1xuICAgICAgICAgICAgaW1hZ2U6IFdpZGdldC5JbWFnZVByb3BzXG4gICAgICAgICAgICBsYWJlbDogV2lkZ2V0LkxhYmVsUHJvcHNcbiAgICAgICAgICAgIGxldmVsYmFyOiBXaWRnZXQuTGV2ZWxCYXJQcm9wc1xuICAgICAgICAgICAgb3ZlcmxheTogV2lkZ2V0Lk92ZXJsYXlQcm9wc1xuICAgICAgICAgICAgcmV2ZWFsZXI6IFdpZGdldC5SZXZlYWxlclByb3BzXG4gICAgICAgICAgICBzbGlkZXI6IFdpZGdldC5TbGlkZXJQcm9wc1xuICAgICAgICAgICAgc3RhY2s6IFdpZGdldC5TdGFja1Byb3BzXG4gICAgICAgICAgICBzd2l0Y2g6IFdpZGdldC5Td2l0Y2hQcm9wc1xuICAgICAgICAgICAgd2luZG93OiBXaWRnZXQuV2luZG93UHJvcHNcbiAgICAgICAgICAgIG1lbnVidXR0b246IFdpZGdldC5NZW51QnV0dG9uUHJvcHNcbiAgICAgICAgICAgIHBvcG92ZXI6IFdpZGdldC5Qb3BvdmVyUHJvcHNcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGpzeHMgPSBqc3hcbiIsICJpbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IGdvaGFuIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5cbmNvbnN0IExhdW5jaGVyID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTGF1bmNoZXJcIl19PlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoXG4gICAgICAgICAgICAgICAgICAgICAgICBgcm9maSAtc2hvdyBkcnVuIC1ydW4tY29tbWFuZCBcInV3c20gYXBwIC0tIHtjbWR9XCJgXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtcIkxhdW5jaGVyXCJ9XG4gICAgICAgICAgICAgICAgY3Vyc29yPXtnb2hhbigpLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJpY29uXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17XCJcdURCODJcdURDQzdcIn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTGF1bmNoZXJcbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5cbmludGVyZmFjZSBTZXBhcmF0b3JQcm9wcyBleHRlbmRzIFBhcnRpYWw8R3RrLlNlcGFyYXRvci5Db25zdHJ1Y3RvclByb3BzPiB7XG4gICAgb3JpZW50YXRpb24/OiBHdGsuT3JpZW50YXRpb25cbn1cblxuY29uc3QgU2VwYXJhdG9yID0gKHByb3BzOiBTZXBhcmF0b3JQcm9wcykgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXNzID0gcHJvcHMuY3NzQ2xhc3NlcyB8fCBbXVxuICAgIGNvbnN0IG9yaWVudGF0aW9uID0gcHJvcHMub3JpZW50YXRpb24gPT09IHVuZGVmaW5lZCA/IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCA6IHByb3BzLm9yaWVudGF0aW9uXG5cbiAgICBpZiAob3JpZW50YXRpb24gPT09IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMKSB7XG4gICAgICAgIGNsYXNzZXNzLnB1c2goXCJIb3Jpem9udGFsXCIpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2xhc3Nlc3MucHVzaChcIlZlcnRpY2FsXCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEd0ay5TZXBhcmF0b3JcbiAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e2NsYXNzZXNzfVxuICAgICAgICAgICAgb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxuICAgICAgICAgICAgdmlzaWJsZT17cHJvcHMudmlzaWJsZSB8fCB0cnVlfVxuICAgICAgICAvPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VwYXJhdG9yXG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IGdvaGFuIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5pbXBvcnQgeyBiaW5kfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IHsgV29ya3NwYWNlIH0gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL1dvcmtzcGFjZXNcIlxuXG5jb25zdCBXb3Jrc3BhY2VzID0gKCkgPT4ge1xuICAgIGNvbnN0IHdvcmtzcGFjZXMgPSBiaW5kKGdvaGFuKCkuV29ya3NwYWNlcylcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIldvcmtzcGFjZXNcIl19XG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5CQVNFTElORX1cbiAgICAgICAgICAgIHNwYWNpbmc9ezF9XG4gICAgICAgID5cbiAgICAgICAgICAgIHt3b3Jrc3BhY2VzLmFzKCh3b3Jrc3BhY2VzKSA9PlxuICAgICAgICAgICAgICAgIHdvcmtzcGFjZXMubWFwKCh3b3Jrc3BhY2UpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPFdvcmtzcGFjZUJ1dHRvbiB3b3Jrc3BhY2U9e3dvcmtzcGFjZX0gLz5cbiAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5pbnRlcmZhY2UgV29ya3NwYWNlQnV0dG9uUHJvcHMge1xuICAgIHdvcmtzcGFjZTogV29ya3NwYWNlXG59XG5cbmNvbnN0IFdvcmtzcGFjZUJ1dHRvbiA9ICh7IHdvcmtzcGFjZSB9OiBXb3Jrc3BhY2VCdXR0b25Qcm9wcykgPT4ge1xuICAgIGNvbnN0IGNsYXNzZXMgPSBbXG4gICAgICAgIFwiV29ya3NwYWNlQnV0dG9uXCIsXG4gICAgICAgIHdvcmtzcGFjZS5mb2N1c2VkID8gXCJGb2N1c2VkXCIgOiBcIlwiLFxuICAgICAgICB3b3Jrc3BhY2Uub2NjdXBpZWQgPyBcIk9jY3VwaWVkXCIgOiBcIlwiLFxuICAgIF1cblxuICAgIGNvbnN0IHdvcmtzcGFjZU5hbWUgPSB3b3Jrc3BhY2Uud3MubmFtZSA9PT0gXCIxMFwiID8gXCIwXCIgOiB3b3Jrc3BhY2Uud3MubmFtZVxuICAgIGNvbnN0IHRvb2x0aXBUZXh0ID0gYFN3aXRjaCB0byB3b3Jrc3BhY2UgJHt3b3Jrc3BhY2VOYW1lfWBcbiAgICBjb25zdCBjdXJzb3IgPSB3b3Jrc3BhY2UuZm9jdXNlZFxuICAgICAgICA/IGdvaGFuKCkuQ3Vyc29yLkRFRkFVTFRcbiAgICAgICAgOiBnb2hhbigpLkN1cnNvci5QT0lOVEVSXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtjbGFzc2VzfVxuICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICB3b3Jrc3BhY2Uud3MuaWQgPT09XG4gICAgICAgICAgICAgICAgICAgIGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuZ2V0X2ZvY3VzZWRfd29ya3NwYWNlKCk/LmlkXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHdvcmtzcGFjZS53cy5mb2N1cygpXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdG9vbHRpcFRleHQ9e3Rvb2x0aXBUZXh0fVxuICAgICAgICAgICAgY3Vyc29yPXtjdXJzb3J9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIGxhYmVsPXt3b3Jrc3BhY2VOYW1lfVxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIldvcmtzcGFjZUJ1dHRvbkxhYmVsXCJdfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIHVzZVVuZGVybGluZT17dHJ1ZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgV29ya3NwYWNlc1xuIiwgImltcG9ydCB7IGJpbmQgfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IFBhbmdvIGZyb20gXCJnaTovL1BhbmdvP3ZlcnNpb249MS4wXCJcbmltcG9ydCBnb2hhbiBmcm9tIFwiLi4vLi4vLi4vc2VydmljZXMvR29oYW5cIlxuXG5jb25zdCBGb2N1c2VkQ2xpZW50ID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvY3VzZWRDbGllbnQgPSBiaW5kKGdvaGFuKCkuRm9jdXNlZENsaWVudClcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIG5hbWU9e1wiRm9jdXNlZENsaWVudFwifVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiRm9jdXNlZENsaWVudFwiXX1cbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkJBU0VMSU5FfVxuICAgICAgICA+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBsYWJlbD17YmluZChmb2N1c2VkQ2xpZW50KS5hcygoY2xpZW50KSA9PiBjbGllbnQudGl0bGUpfVxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkZvY3VzZWRDbGllbnRMYWJlbFwiXX1cbiAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXszNn1cbiAgICAgICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuTUlERExFfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb2N1c2VkQ2xpZW50XG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgTGF1bmNoZXIgZnJvbSBcIi4vTW9kdWxlcy9MYXVuY2hlclwiXG5pbXBvcnQgU2VwYXJhdG9yIGZyb20gXCIuLi9jb21tb25zL1NlcGFyYXRvclwiXG5pbXBvcnQgV29ya3NwYWNlcyBmcm9tIFwiLi9Nb2R1bGVzL1dvcmtzcGFjZXNcIlxuaW1wb3J0IEZvY3VzZWRDbGllbnQgZnJvbSBcIi4vTW9kdWxlcy9Gb2N1c2VkQ2xpZW50XCJcblxuaW50ZXJmYWNlIExlZnRQcm9wcyB7XG4gICAgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3Jcbn1cblxuY29uc3QgTGVmdCA9ICh7IGdka21vbml0b3IgfTogTGVmdFByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgbmFtZT17YExlZnRgfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU2VjdGlvblwiLCBcIkxlZnRcIl19XG4gICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPExhdW5jaGVyIC8+XG5cbiAgICAgICAgICAgIDxTZXBhcmF0b3Igb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0gLz5cblxuICAgICAgICAgICAgPFdvcmtzcGFjZXMgLz5cblxuICAgICAgICAgICAgPFNlcGFyYXRvciBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSAvPlxuXG4gICAgICAgICAgICA8Rm9jdXNlZENsaWVudCAvPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IExlZnRcbiIsICJpbXBvcnQgeyBiaW5kIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCBnb2hhbiBmcm9tIFwiLi4vLi4vLi4vc2VydmljZXMvR29oYW5cIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IHsgVHJheUVudHJ5IH0gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL1RyYXlcIlxuXG5jb25zdCBJbWFnZUljb24gPSAoeyBpdGVtIH06IHsgaXRlbTogVHJheUVudHJ5IH0pID0+IHtcbiAgICBpZiAoaXRlbS5jdXN0b21JY29uKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJpY29uXCIsIFwiVHJheUxhYmVsSWNvblwiXX1cbiAgICAgICAgICAgICAgICBsYWJlbD17aXRlbS5jdXN0b21JY29ufVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgZ2ljb249e2l0ZW0uZ2ljb259XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJpY29uXCIsIFwiVHJheUltYWdlSWNvblwiXX1cbiAgICAgICAgICAgIHBpeGVsU2l6ZT17MTZ9IC8vIERvbid0IGZvZ2V0IHRvIGFkanVzdCAuVHJheUxhYmVsSWNvbiBzdHlsZSB0b29cbiAgICAgICAgLz5cbiAgICApXG59XG5cbmNvbnN0IFRyYXkgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiVHJheVwiXX1cbiAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICA+XG4gICAgICAgICAgICB7YmluZChnb2hhbigpLlRyYXkpLmFzKChpdGVtcykgPT5cbiAgICAgICAgICAgICAgICBpdGVtcy5tYXAoKGl0ZW0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgPG1lbnVidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHVwPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaW5zZXJ0X2FjdGlvbl9ncm91cChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkYnVzbWVudVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmFjdGlvbkdyb3VwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcj17Z29oYW4oKS5DdXJzb3IuUE9JTlRFUn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXBNYXJrdXA9e2l0ZW0udG9vbHRpcH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRyYXlNZW51QnV0dG9uXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VJY29uIGl0ZW09e2l0ZW19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7R3RrLlBvcG92ZXJNZW51Lm5ld19mcm9tX21vZGVsKGl0ZW0ubWVudU1vZGVsKX1cbiAgICAgICAgICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICApfVxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyYXlcbiIsICJpbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhc3RhbC9ndGs0XCJcbmltcG9ydCBUcmF5IGZyb20gXCIuL01vZHVsZXMvVHJheVwiXG5cbmludGVyZmFjZSBDZW50ZXJQcm9wcyB7XG4gICAgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3Jcbn1cblxuY29uc3QgQ2VudGVyID0gKHsgZ2RrbW9uaXRvciB9OiBDZW50ZXJQcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIG5hbWU9e2BDZW50ZXJgfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU2VjdGlvblwiLCBcIkNlbnRlclwiXX1cbiAgICAgICAgICAgIGhleHBhbmQ9e3RydWV9XG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPFRyYXkgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDZW50ZXJcbiIsICJpbXBvcnQgeyBiaW5kIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCBnb2hhbiBmcm9tIFwiLi4vLi4vLi4vc2VydmljZXMvR29oYW5cIlxuXG5jb25zdCBUaW1lID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVGltZVwiXX0gaGV4cGFuZD17dHJ1ZX0+XG4gICAgICAgICAgICA8bGFiZWwgbGFiZWw9e2JpbmQoZ29oYW4oKS5UaW1lKX0gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lXG4iLCAiaW1wb3J0IHsgYmluZCB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgZ29oYW4gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL0dvaGFuXCJcbmltcG9ydCB7IEFwcCwgR2RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuXG5pbnRlcmZhY2UgQmF0dGVyeVByb3BzIHtcbiAgICBnZGttb25pdG9yOiBHZGsuTW9uaXRvclxufVxuXG5jb25zdCBCYXR0ZXJ5ID0gKHsgZ2RrbW9uaXRvciB9OiBCYXR0ZXJ5UHJvcHMpID0+IHtcbiAgICBjb25zdCBiYXR0ZXJ5ID0gYmluZChnb2hhbigpLkJhdHRlcnkpXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5XCJdfVxuICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgIGN1cnNvcj17Z29oYW4oKS5DdXJzb3IuUE9JTlRFUn1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQnV0dG9uUHJlc3NlZD17KF9zZWxmLCBldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBbLCB4XSA9IGV2ZW50LmdldF9wb3NpdGlvbigpXG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LmdldF9idXR0b24oKSA9PT0gR2RrLkJVVFRPTl9QUklNQVJZKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVQb3BvdmVyV2lkZ2V0cyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZGttb25pdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQmF0dGVyeU1lbnVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgZ29oYW4oKS5XaWRnZXRzTWFuYWdlci50b2dnbGVXaWRnZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJCYXR0ZXJ5TWVudVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdka21vbml0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeFxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Ym94IHNwYWNpbmc9ezV9PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25OYW1lPXtiaW5kKGJhdHRlcnkpLmFzKChiKSA9PiBiLmJhdHRlcnlJY29uKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImljb25cIiwgXCJJY29uXCJdfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtiaW5kKGJhdHRlcnkpLmFzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChiKSA9PiBgJHsoYi5wZXJjZW50YWdlICogMTAwKS50b0ZpeGVkKDApfSVgXG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiUGVyY2VudGFnZVwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGU9e2JpbmQoYmF0dGVyeSkuYXMoKGIpID0+IGIuaXNCYXR0ZXJ5KX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhdHRlcnlcbiIsICJpbXBvcnQgeyBiaW5kIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCBnb2hhbiBmcm9tIFwiLi4vLi4vLi4vc2VydmljZXMvR29oYW5cIlxuaW1wb3J0IHsgQXBwLCBHZGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5cbmludGVyZmFjZSBWb2x1bWVQcm9wcyB7XG4gICAgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3Jcbn1cblxuY29uc3QgVm9sdW1lID0gKHsgZ2RrbW9uaXRvciB9OiBWb2x1bWVQcm9wcykgPT4ge1xuICAgIGNvbnN0IHZvbHVtZSA9IGJpbmQoZ29oYW4oKS5Wb2x1bWUpXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJWb2x1bWVcIl19XG4gICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgY3Vyc29yPXtnb2hhbigpLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICA+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25CdXR0b25QcmVzc2VkPXsoX3NlbGYsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IFssIHhdID0gZXZlbnQuZ2V0X3Bvc2l0aW9uKClcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZ2V0X2J1dHRvbigpID09PSBHZGsuQlVUVE9OX1BSSU1BUlkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdvaGFuKCkuV2lkZ2V0c01hbmFnZXIuaGlkZVBvcG92ZXJXaWRnZXRzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdka21vbml0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJWb2x1bWVNZW51XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIGdvaGFuKCkuV2lkZ2V0c01hbmFnZXIudG9nZ2xlV2lkZ2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVm9sdW1lTWVudVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdka21vbml0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeFxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Ym94IHNwYWNpbmc9ezV9PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25OYW1lPXtiaW5kKHZvbHVtZSkuYXMoKGIpID0+IGIudm9sdW1lSWNvbil9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJpY29uXCIsIFwiSWNvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17YmluZCh2b2x1bWUpLmFzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChiKSA9PiBgJHsoYi52b2x1bWUgKiAxMDApLnRvRml4ZWQoMCl9JWBcbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJQZXJjZW50YWdlXCJdfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9sdW1lXG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgVGltZSBmcm9tIFwiLi9Nb2R1bGVzL1RpbWVcIlxuaW1wb3J0IEJhdHRlcnkgZnJvbSBcIi4vTW9kdWxlcy9CYXR0ZXJ5XCJcbmltcG9ydCBTZXBhcmF0b3IgZnJvbSBcIi4uL2NvbW1vbnMvU2VwYXJhdG9yXCJcbmltcG9ydCBWb2x1bWUgZnJvbSBcIi4vTW9kdWxlcy9Wb2x1bWVcIlxuXG5pbnRlcmZhY2UgUmlnaHRQcm9wcyB7XG4gICAgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3Jcbn1cblxuY29uc3QgUmlnaHQgPSAoeyBnZGttb25pdG9yIH06IFJpZ2h0UHJvcHMpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94XG4gICAgICAgICAgICBuYW1lPXtgUmlnaHRgfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU2VjdGlvblwiLCBcIlJpZ2h0XCJdfVxuICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Vm9sdW1lIGdka21vbml0b3I9e2dka21vbml0b3J9IC8+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxCYXR0ZXJ5IGdka21vbml0b3I9e2dka21vbml0b3J9IC8+XG5cbiAgICAgICAgICAgIDxUaW1lIC8+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmlnaHRcbiIsICJpbXBvcnQgeyBBcHAgYXMgQXN0YWxBcHAsIEFzdGFsLCBHZGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgTGVmdCBmcm9tIFwiLi9MZWZ0XCJcbmltcG9ydCBDZW50ZXIgZnJvbSBcIi4vQ2VudGVyXCJcbmltcG9ydCBSaWdodCBmcm9tIFwiLi9SaWdodFwiXG5cbmNvbnN0IEJhciA9IChuYW1lOiBzdHJpbmcsIGdka21vbml0b3I6IEdkay5Nb25pdG9yKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJDcmVhdGluZyBCYXIgZm9yIG1vbml0b3JcIiwgZ2RrbW9uaXRvci5jb25uZWN0b3IpXG4gICAgY29uc3QgeyBUT1AsIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJCYXJcIl19XG4gICAgICAgICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgICAgICAgIGFuY2hvcj17VE9QIHwgTEVGVCB8IFJJR0hUfVxuICAgICAgICAgICAgYXBwbGljYXRpb249e0FzdGFsQXBwfVxuICAgICAgICAgICAgdmlzaWJsZT17dHJ1ZX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGNlbnRlcmJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkNvbnRhaW5lclwiLCBcInNoYWRvd1wiLCBcInJvdW5kZWRcIiwgXCJib3JkZXJlZFwiXX1cbiAgICAgICAgICAgICAgICBzdGFydFdpZGdldD17PExlZnQgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn0gLz59XG4gICAgICAgICAgICAgICAgY2VudGVyV2lkZ2V0PXs8Q2VudGVyIGdka21vbml0b3I9e2dka21vbml0b3J9IC8+fVxuICAgICAgICAgICAgICAgIGVuZFdpZGdldD17PFJpZ2h0IGdka21vbml0b3I9e2dka21vbml0b3J9IC8+fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXJcbiIsICJpbXBvcnQgeyBCaW5kaW5nIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCB7IEFwcCwgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IGdvaGFuIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5cbmludGVyZmFjZSBQb3BvdmVyTWVudVByb3BzIHtcbiAgICBnZGttb25pdG9yOiBHZGsuTW9uaXRvclxuICAgIG5hbWU6IHN0cmluZ1xuICAgIGNoaWxkPzogR3RrLldpZGdldFxuICAgIGxlZnQ/OiBudW1iZXIgfCBCaW5kaW5nPG51bWJlcj5cbiAgICB0b3A/OiBudW1iZXIgfCBCaW5kaW5nPG51bWJlcj5cbiAgICByaWdodD86IG51bWJlciB8IEJpbmRpbmc8bnVtYmVyPlxuICAgIGJvdHRvbT86IG51bWJlciB8IEJpbmRpbmc8bnVtYmVyPlxuICAgIHZhbGlnbj86IEd0ay5BbGlnblxuICAgIGhhbGlnbj86IEd0ay5BbGlnblxuICAgIG9uQ2xvc2U/KHNlbGY6IEFzdGFsLldpbmRvdyk6IHZvaWRcbiAgICB2aXNpYmxlPzogYm9vbGVhbiB8IEJpbmRpbmc8Ym9vbGVhbj5cbn1cblxuY29uc3QgUG9wb3Zlck1lbnUgPSAoe1xuICAgIGdka21vbml0b3IsXG4gICAgbmFtZSxcbiAgICBjaGlsZCxcbiAgICBsZWZ0ID0gOTk5OSwgLy8gRGVmYXVsdCB0byBhIGxhcmdlIHZhbHVlIHRvIHB1c2ggdGhlIG1lbnUgb2ZmLXNjcmVlblxuICAgIHRvcCA9IDAsXG4gICAgcmlnaHQgPSAwLFxuICAgIGJvdHRvbSA9IDAsXG4gICAgdmFsaWduID0gR3RrLkFsaWduLlNUQVJULFxuICAgIGhhbGlnbiA9IEd0ay5BbGlnbi5TVEFSVCxcbiAgICBvbkNsb3NlLFxuICAgIHZpc2libGUgPSB0cnVlLFxufTogUG9wb3Zlck1lbnVQcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIG5hbWU9e2Ake25hbWV9XyR7Z2RrbW9uaXRvci5jb25uZWN0b3J9YH1cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlBvcG92ZXJNZW51XCJdfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGtleW1vZGU9e0FzdGFsLktleW1vZGUuT05fREVNQU5EfVxuICAgICAgICAgICAgYW5jaG9yPXtUT1AgfCBMRUZUIHwgUklHSFQgfCBCT1RUT019XG4gICAgICAgICAgICBhcHBsaWNhdGlvbj17QXBwfVxuICAgICAgICAgICAgdmlzaWJsZT17dmlzaWJsZX1cbiAgICAgICAgICAgIG9uS2V5UHJlc3NlZD17KF9ldmVudCwga2V5dmFsKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGtleXZhbCA9PT0gR2RrLktFWV9Fc2NhcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZ29oYW4oKS5XaWRnZXRzTWFuYWdlci5oaWRlV2lkZ2V0KG5hbWUsIGdka21vbml0b3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIG9uQnV0dG9uUHJlc3NlZD17KHNlbGYsIGUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBbLCBfeCwgX3ldID0gZS5nZXRfcG9zaXRpb24oKVxuICAgICAgICAgICAgICAgIGNvbnN0IHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9ID0gc2VsZlxuICAgICAgICAgICAgICAgICAgICAuZ2V0X2NoaWxkKCkhXG4gICAgICAgICAgICAgICAgICAgIC5nZXRfYWxsb2NhdGlvbigpXG5cbiAgICAgICAgICAgICAgICBjb25zdCB4T3V0ID0gX3ggPCB4IHx8IF94ID4geCArIHdpZHRoXG4gICAgICAgICAgICAgICAgY29uc3QgeU91dCA9IF95IDwgeSB8fCBfeSA+IHkgKyBoZWlnaHRcblxuICAgICAgICAgICAgICAgIC8vIGNsaWNrZWQgb3V0c2lkZVxuICAgICAgICAgICAgICAgIGlmICh4T3V0IHx8IHlPdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgZ29oYW4oKS5XaWRnZXRzTWFuYWdlci5oaWRlV2lkZ2V0KG5hbWUsIGdka21vbml0b3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHNldHVwPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgIC8vIFBvcG92ZXJNZW51IHNob3VsZCBub3QgYmUgdmlzaWJsZSBieSBkZWZhdWx0IGJ1dCB0aGlzIHdpbGwgbWFrZSB0aGUgd2luZG93XG4gICAgICAgICAgICAgICAgLy8gbm90IHJlYWxpemVkLiBTbyB3ZSBuZWVkIHRvIHNldCBpdCB2aXNpYmxlIGZpcnN0LCBhbmQgdGhlbiBoaWRlIGl0LlxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcbiAgICAgICAgICAgICAgICB9LCA1MDApXG5cbiAgICAgICAgICAgICAgICAvLyBodHRwczpnaXRodWIuY29tL3dtd3cvZ3RrNC1sYXllci1zaGVsbC9pc3N1ZXMvNjBcbiAgICAgICAgICAgICAgICBzZWxmLnNldF9kZWZhdWx0X3NpemUoMSwgMSlcbiAgICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICBvbkJ1dHRvblByZXNzZWQ9eyhlKSA9PiB0cnVlfVxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkNvbnRhaW5lclwiLCBcInNoYWRvd1wiLCBcInJvdW5kZWRcIiwgXCJib3JkZXJlZFwiXX1cbiAgICAgICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgICAgIHZleHBhbmQ9e3RydWV9XG4gICAgICAgICAgICAgICAgdmFsaWduPXt2YWxpZ259XG4gICAgICAgICAgICAgICAgaGFsaWduPXtoYWxpZ259XG4gICAgICAgICAgICAgICAgbWFyZ2luU3RhcnQ9e2xlZnR9XG4gICAgICAgICAgICAgICAgbWFyZ2luVG9wPXt0b3B9XG4gICAgICAgICAgICAgICAgbWFyZ2luRW5kPXtyaWdodH1cbiAgICAgICAgICAgICAgICBtYXJnaW5Cb3R0b209e2JvdHRvbX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y2hpbGR9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3BvdmVyTWVudVxuIiwgImltcG9ydCB7IEFwcCwgR2RrLCBHdGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgUG9wb3Zlck1lbnUgZnJvbSBcIi4vUG9wb3Zlck1lbnUvUG9wb3Zlck1lbnVcIlxuaW1wb3J0IGdvaGFuIGZyb20gXCIuLi9zZXJ2aWNlcy9Hb2hhblwiXG5pbXBvcnQgeyBiaW5kIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCB7IFBvd2VyUHJvZmlsZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9CYXR0ZXJ5XCJcblxuY29uc3QgQmF0dGVyeU1lbnUgPSAobmFtZTogc3RyaW5nLCBnZGttb25pdG9yOiBHZGsuTW9uaXRvcikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxQb3BvdmVyTWVudSBnZGttb25pdG9yPXtnZGttb25pdG9yfSBuYW1lPXtuYW1lfT5cbiAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5TWVudVwiXX1cbiAgICAgICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgICAgICAgIHZlcnRpY2FsPXt0cnVlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxQcm9maWxlQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGU9XCJwb3dlci1zYXZlclwiXG4gICAgICAgICAgICAgICAgICAgIGFmdGVyPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxQcm9maWxlQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGU9XCJiYWxhbmNlZFwiXG4gICAgICAgICAgICAgICAgICAgIGFmdGVyPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxQcm9maWxlQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGU9XCJwZXJmb3JtYW5jZVwiXG4gICAgICAgICAgICAgICAgICAgIGFmdGVyPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvUG9wb3Zlck1lbnU+XG4gICAgKVxufVxuXG5pbnRlcmZhY2UgUHJvZmlsZUJ1dHRvblByb3BzIHtcbiAgICBwcm9maWxlOiBQb3dlclByb2ZpbGVcbiAgICBhZnRlcj86ICgpID0+IHZvaWRcbn1cblxuY29uc3QgUHJvZmlsZUJ1dHRvbiA9ICh7IHByb2ZpbGUsIGFmdGVyIH06IFByb2ZpbGVCdXR0b25Qcm9wcykgPT4ge1xuICAgIGNvbnN0IGJhdHRlcnkgPSBiaW5kKGdvaGFuKCkuQmF0dGVyeSlcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e2JpbmQoYmF0dGVyeSkuYXMoKGIpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYi5wb3dlclByb2ZpbGUgPT09IHByb2ZpbGVcbiAgICAgICAgICAgICAgICAgICAgPyBbXCJQcm9maWxlQnV0dG9uXCIsIFwiQWN0aXZlXCJdXG4gICAgICAgICAgICAgICAgICAgIDogW1wiUHJvZmlsZUJ1dHRvblwiXVxuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICBjdXJzb3I9e2dvaGFuKCkuQ3Vyc29yLlBPSU5URVJ9XG4gICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHtcbiAgICAgICAgICAgICAgICBnb2hhbigpLkJhdHRlcnkuc2V0UG93ZXJQcm9maWxlKHByb2ZpbGUpXG4gICAgICAgICAgICAgICAgYWZ0ZXI/LigpXG4gICAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3Byb2ZpbGUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBwcm9maWxlLnNsaWNlKDEpfSAvPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhdHRlcnlNZW51XG4iLCAiaW1wb3J0IHsgQXBwLCBHZGssIEd0ayB9IGZyb20gXCJhc3RhbC9ndGs0XCJcbmltcG9ydCBQb3BvdmVyTWVudSBmcm9tIFwiLi9Qb3BvdmVyTWVudS9Qb3BvdmVyTWVudVwiXG5pbXBvcnQgZ29oYW4gZnJvbSBcIi4uL3NlcnZpY2VzL0dvaGFuXCJcbmltcG9ydCB7IGJpbmQgfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IEFzdGFsV3AgZnJvbSBcImdpOi8vQXN0YWxXcD92ZXJzaW9uPTAuMVwiXG5cbmNvbnN0IFZvbHVtZU1lbnUgPSAobmFtZTogc3RyaW5nLCBnZGttb25pdG9yOiBHZGsuTW9uaXRvcikgPT4ge1xuICAgIGNvbnN0IHZvbHVtZSA9IGJpbmQoZ29oYW4oKS5Wb2x1bWUpXG4gICAgY29uc3Qgc3BlYWtlcnMgPSBiaW5kKHZvbHVtZSkuYXMoKHYpID0+IHtcbiAgICAgICAgY29uc3Qgc3BlYWtlcnMgPSBbLi4udi5zcGVha2Vyc11cblxuICAgICAgICBzcGVha2Vycy5zb3J0KChhLCBiKSA9PiBiLmlkIC0gYS5pZClcblxuICAgICAgICByZXR1cm4gc3BlYWtlcnNcbiAgICB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFBvcG92ZXJNZW51IGdka21vbml0b3I9e2dka21vbml0b3J9IG5hbWU9e25hbWV9PlxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlZvbHVtZU1lbnVcIl19XG4gICAgICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbD17dHJ1ZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7YmluZChzcGVha2VycykuYXMoKHNwZWFrZXJzKSA9PlxuICAgICAgICAgICAgICAgICAgICBzcGVha2Vycy5tYXAoKHNwZWFrZXIpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxTcGVha2VyQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BlYWtlcj17c3BlYWtlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZnRlcj17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmhpZGVXaWRnZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2RrbW9uaXRvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3NwZWFrZXIuZGVzY3JpcHRpb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L1NwZWFrZXJCdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L1BvcG92ZXJNZW51PlxuICAgIClcbn1cblxuaW50ZXJmYWNlIFByb2ZpbGVCdXR0b25Qcm9wcyB7XG4gICAgc3BlYWtlcjogQXN0YWxXcC5FbmRwb2ludFxuICAgIGFmdGVyPzogKCkgPT4gdm9pZFxufVxuXG5jb25zdCBTcGVha2VyQnV0dG9uID0gKHsgc3BlYWtlciwgYWZ0ZXIgfTogUHJvZmlsZUJ1dHRvblByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17XG4gICAgICAgICAgICAgICAgc3BlYWtlci5pc0RlZmF1bHRcbiAgICAgICAgICAgICAgICAgICAgPyBbXCJTcGVha2VyQnV0dG9uXCIsIFwiQWN0aXZlXCJdXG4gICAgICAgICAgICAgICAgICAgIDogW1wiU3BlYWtlckJ1dHRvblwiXVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3Vyc29yPXtnb2hhbigpLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3BlYWtlci5zZXRfaXNfZGVmYXVsdCh0cnVlKVxuXG4gICAgICAgICAgICAgICAgYWZ0ZXI/LigpXG4gICAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3NwZWFrZXIuZGVzY3JpcHRpb259IC8+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9sdW1lTWVudVxuIiwgImltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZD92ZXJzaW9uPTAuMVwiXG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL0hlYWRlclwiXG5pbXBvcnQgQm9keSBmcm9tIFwiLi9Cb2R5XCJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vRm9vdGVyXCJcbmltcG9ydCBOb3RpZmljYXRpb25UaW1lciBmcm9tIFwiLi4vLi4vc2VydmljZXMvTm90aWZpY2F0aW9uVGltZXJcIlxuXG5jb25zdCBub3RpZmQgPSBBc3RhbE5vdGlmZC5nZXRfZGVmYXVsdCgpXG5cbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW0gPSAoeyB0aW1lciB9OiB7IHRpbWVyOiBOb3RpZmljYXRpb25UaW1lciB9KSA9PiB7XG4gICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24odGltZXIuaWQpXG5cbiAgICBpZiAoIW5vdGlmaWNhdGlvbikge1xuICAgICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIk5vdGlmaWNhdGlvbkl0ZW1cIiwgXCJzaGFkb3dcIiwgXCJyb3VuZGVkXCIsIFwiYm9yZGVyZWRcIl19XG4gICAgICAgICAgICB2ZXJ0aWNhbD17dHJ1ZX1cbiAgICAgICAgICAgIHNldHVwPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGYuc2V0X2Nzc19jbGFzc2VzKFtcbiAgICAgICAgICAgICAgICAgICAgXCJOb3RpZmljYXRpb25JdGVtXCIsXG4gICAgICAgICAgICAgICAgICAgIFwic2hhZG93XCIsXG4gICAgICAgICAgICAgICAgICAgIFwicm91bmRlZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImJvcmRlcmVkXCIsXG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi51cmdlbmN5ID09PSBBc3RhbE5vdGlmZC5VcmdlbmN5LkNSSVRJQ0FMXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiQ3JpdGljYWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiLFxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Ib3ZlckVudGVyPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGltZXIuc3RvcCgpXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Ib3ZlckxlYXZlPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGltZXIuc3RhcnQoKVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHNwYWNpbmc9ezV9XG4gICAgICAgICAgICB2ZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPEhlYWRlciBub3RpZmljYXRpb249e25vdGlmaWNhdGlvbn0gLz5cblxuICAgICAgICAgICAgPEJvZHkgbm90aWZpY2F0aW9uPXtub3RpZmljYXRpb259IC8+XG5cbiAgICAgICAgICAgIDxGb290ZXIgbm90aWZpY2F0aW9uPXtub3RpZmljYXRpb259IC8+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uSXRlbVxuIiwgImltcG9ydCB7IGJpbmQsIEJpbmRpbmcsIFZhcmlhYmxlIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhc3RhbC9ndGs0XCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZD92ZXJzaW9uPTAuMVwiXG5cbmludGVyZmFjZSBIZWFkZXJQcm9wcyB7XG4gICAgbm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb25cbn1cblxuY29uc3QgSGVhZGVyID0gKHsgbm90aWZpY2F0aW9uIH06IEhlYWRlclByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiSGVhZGVyXCJdfVxuICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlckxlZnRcIl19XG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgc3BhY2luZz17NX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQXBwSWNvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e25vdGlmaWNhdGlvbi5hcHBJY29uIHx8IG5vdGlmaWNhdGlvbi5kZXNrdG9wRW50cnl9XG4gICAgICAgICAgICAgICAgICAgIHBpeGVsU2l6ZT17MTh9XG4gICAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJIZWFkZXJMYWJlbFwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake25vdGlmaWNhdGlvbi5hcHBOYW1lIHx8IFwiVW5rbm93biBBcHBcIn1gfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cblxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlclJpZ2h0XCJdfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgICAgIHNwYWNpbmc9ezV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlclRpbWVcIl19XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXtuZXcgRGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi50aW1lICogMTAwMFxuICAgICAgICAgICAgICAgICAgICApLnRvTG9jYWxlRGF0ZVN0cmluZyhcImVuLVVTXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheTogXCIyLWRpZ2l0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb250aDogXCJzaG9ydFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaG91cjogXCIyLWRpZ2l0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW51dGU6IFwiMi1kaWdpdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBob3VyMTI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQ2xvc2VCdXR0b25cIl19XG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtcIkNsb3NlIE5vdGlmaWNhdGlvblwifVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5kaXNtaXNzKClcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSBsYWJlbD17XCJcdTI3MTVcIn0gLz5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlclxuIiwgImltcG9ydCB7IEJpbmRpbmcsIEdMaWIgfSBmcm9tIFwiYXN0YWxcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkP3ZlcnNpb249MC4xXCJcbmltcG9ydCBQYW5nbyBmcm9tIFwiZ2k6Ly9QYW5nbz92ZXJzaW9uPTEuMFwiXG5cbmNvbnN0IGlzSWNvbiA9IChpY29uOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBpY29uVGhlbWUgPSBuZXcgR3RrLkljb25UaGVtZSgpXG4gICAgcmV0dXJuIGljb25UaGVtZS5oYXNfaWNvbihpY29uKVxufVxuXG5jb25zdCBmaWxlRXhpc3RzID0gKHBhdGg6IHN0cmluZykgPT4gR0xpYi5maWxlX3Rlc3QocGF0aCwgR0xpYi5GaWxlVGVzdC5FWElTVFMpXG5cbmNvbnN0IE1BUktVUF9TQUZFX0FQUFMgPSBbXCJIeXByc2hvdFwiXVxuXG5pbnRlcmZhY2UgQm9keVByb3BzIHtcbiAgICBub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvblxufVxuXG5jb25zdCBCb2R5ID0gKHsgbm90aWZpY2F0aW9uIH06IEJvZHlQcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkJvZHlcIl19XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgICAgIHZleHBhbmRcbiAgICAgICAgPlxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5pbWFnZSAmJiBmaWxlRXhpc3RzKG5vdGlmaWNhdGlvbi5pbWFnZSkgJiYgKFxuICAgICAgICAgICAgICAgIDxib3ggdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfSBjc3NDbGFzc2VzPXtbXCJJbWFnZVwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZT17bm90aWZpY2F0aW9uLmltYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5pbWFnZSAmJiBpc0ljb24obm90aWZpY2F0aW9uLmltYWdlKSAmJiAoXG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25OYW1lPXtub3RpZmljYXRpb24uaW1hZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5hcHBJY29uICYmIGZpbGVFeGlzdHMobm90aWZpY2F0aW9uLmFwcEljb24pICYmIChcbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkljb25cIl19IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZT17bm90aWZpY2F0aW9uLmFwcEljb259XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPGJveCBoZXhwYW5kIHZlcnRpY2FsIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gc3BhY2luZz17NX0+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJTdW1tYXJ5XCJdfVxuICAgICAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17bm90aWZpY2F0aW9uLnN1bW1hcnl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB7bm90aWZpY2F0aW9uLmJvZHkgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkJvZHlcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e25vdGlmaWNhdGlvbi5ib2R5fVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0YWJsZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZU1hcmt1cD17TUFSS1VQX1NBRkVfQVBQUy5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uYXBwTmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgQm9keVxuIiwgImltcG9ydCB7IEJpbmRpbmcsIGV4ZWMsIGV4ZWNBc3luYyB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZD92ZXJzaW9uPTAuMVwiXG5cbmNvbnN0IGh5cHJsYW5kID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpXG5cbmludGVyZmFjZSBDdXN0b21BY3Rpb24ge1xuICAgIGxhYmVsOiBzdHJpbmdcbiAgICBhY3Rpb246IChub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbikgPT4gdm9pZFxufVxuXG5jb25zdCBjdXN0b21BY3Rpb25zOiBSZWNvcmQ8c3RyaW5nLCBDdXN0b21BY3Rpb25bXT4gPSB7XG4gICAgSHlwcnNob3Q6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiT3BlblwiLFxuICAgICAgICAgICAgYWN0aW9uOiAobm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlID0gbm90aWZpY2F0aW9uLmFwcEljb25cbiAgICAgICAgICAgICAgICBjb25zdCBkaXIgPSBmaWxlLnN1YnN0cmluZygwLCBmaWxlLmxhc3RJbmRleE9mKFwiL1wiKSlcblxuICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhgeGRnLW9wZW4gJHtkaXJ9YClcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIlZpZXdcIixcbiAgICAgICAgICAgIGFjdGlvbjogKG5vdGlmaWNhdGlvbjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IG5vdGlmaWNhdGlvbi5hcHBJY29uXG4gICAgICAgICAgICAgICAgZXhlY0FzeW5jKGB4ZGctb3BlbiAke2ZpbGV9YClcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIkVkaXRcIixcbiAgICAgICAgICAgIGFjdGlvbjogKG5vdGlmaWNhdGlvbjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IG5vdGlmaWNhdGlvbi5hcHBJY29uXG4gICAgICAgICAgICAgICAgZXhlY0FzeW5jKGBzd2FwcHkgLWYgJHtmaWxlfWApXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIF0sXG59XG5cbmludGVyZmFjZSBGb290ZXJQcm9wcyB7XG4gICAgbm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb25cbn1cblxuY29uc3QgRm9vdGVyID0gKHsgbm90aWZpY2F0aW9uIH06IEZvb3RlclByb3BzKSA9PiB7XG4gICAgY29uc3QgYWN0aW9ucyA9IG5vdGlmaWNhdGlvbi5nZXRfYWN0aW9ucygpXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkZvb3RlclwiXX0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJBY3Rpb25zXCJdfSBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAge2FjdGlvbnMubWFwKChhY3Rpb24pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5pbnZva2UoYWN0aW9uLmlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uZGlzbWlzcygpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50cyA9IGh5cHJsYW5kLmdldF9jbGllbnRzKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50ID0gY2xpZW50cy5maW5kKChjKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5jbGFzc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluY2x1ZGVzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uYXBwTmFtZS50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsaWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHlwcmxhbmQuZGlzcGF0Y2goXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmb2N1c3dpbmRvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBjbGFzczoke2NsaWVudC5jbGFzc31gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17YWN0aW9uLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuXG4gICAgICAgICAgICAgICAgICAgIHtjdXN0b21BY3Rpb25zW25vdGlmaWNhdGlvbi5hcHBOYW1lXT8ubWFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgKGN1c3RvbUFjdGlvbikgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUFjdGlvbi5hY3Rpb24obm90aWZpY2F0aW9uKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uZGlzbWlzcygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtjdXN0b21BY3Rpb24ubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICB9XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyXG4iLCAiaW1wb3J0IHsgYmluZCB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgeyBBcHAsIEFzdGFsLCBHZGssIEd0ayB9IGZyb20gXCJhc3RhbC9ndGs0XCJcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtIGZyb20gXCIuL05vdGlmaWNhdGlvbkl0ZW1cIlxuaW1wb3J0IGdvaGFuIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5cbmNvbnN0IE5vdGlmaWNhdGlvblBvcHVwID0gKG5hbWU6IHN0cmluZywgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpID0+IHtcbiAgICBjb25zdCB7IFRPUCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvclxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgbmFtZT17bmFtZX1cbiAgICAgICAgICAgIG5hbWVzcGFjZT17XCJOb3RpZmljYXRpb25Qb3B1cFwifVxuICAgICAgICAgICAgYXBwbGljYXRpb249e0FwcH1cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIk5vdGlmaWNhdGlvblBvcHVwXCJdfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGxheWVyPXtBc3RhbC5MYXllci5UT1B9XG4gICAgICAgICAgICBhbmNob3I9e1RPUCB8IFJJR0hUfVxuICAgICAgICAgICAgdmlzaWJsZT17dHJ1ZX1cbiAgICAgICAgICAgIHNldHVwPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGYuc2V0X2RlZmF1bHRfc2l6ZSgxLCAxKVxuXG4gICAgICAgICAgICAgICAgZ29oYW4oKS5Ob3RpZmljYXRpb25NYW5hZ2VyLnN1YnNjcmliZSgoZW50cnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJ5ICYmIGVudHJ5LmFjdGl2ZXMgJiYgZW50cnkuYWN0aXZlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3coKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5oaWRlKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQ29udGFpbmVyXCJdfVxuICAgICAgICAgICAgICAgIHZlcnRpY2FsPXt0cnVlfVxuICAgICAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtiaW5kKGdvaGFuKCkuTm90aWZpY2F0aW9uTWFuYWdlcikuYXMoKGVudHJ5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbLi4uZW50cnkuYWN0aXZlc10ubWFwKCh0aW1lcikgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkl0ZW0gdGltZXI9e3RpbWVyfSAvPlxuICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uUG9wdXBcbiIsICJpbXBvcnQgeyBBc3RhbCwgR2RrIH0gZnJvbSBcImFzdGFsL2d0azRcIlxuaW1wb3J0IEJhciBmcm9tIFwiLi4vd2lkZ2V0cy9CYXIvQmFyXCJcbmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgQmF0dGVyeU1lbnUgZnJvbSBcIi4uL3dpZGdldHMvQmF0dGVyeU1lbnVcIlxuaW1wb3J0IFZvbHVtZU1lbnUgZnJvbSBcIi4uL3dpZGdldHMvVm9sdW1lTWVudVwiXG5pbXBvcnQgTm90aWZpY2F0aW9uUG9wdXAgZnJvbSBcIi4uL3dpZGdldHMvTm90aWZpY2F0aW9uL05vdGlmaWNhdGlvblBvcHVwXCJcblxudHlwZSBXaWRnZXRUeXBlID0gXCJkZWZhdWx0XCIgfCBcInBvcG92ZXJcIlxuXG5pbnRlcmZhY2UgV2lkZ2V0IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBnZGttb25pdG9yOiBHZGsuTW9uaXRvclxuICAgIHdpbmRvdzogQXN0YWwuV2luZG93XG4gICAgdHlwZTogV2lkZ2V0VHlwZVxufVxuXG5jbGFzcyBXaWRnZXRzTWFuYWdlciBpbXBsZW1lbnRzIFNlcnZpY2Uge1xuICAgIHByaXZhdGUgd2lkZ2V0czogV2lkZ2V0W10gPSBbXVxuXG4gICAgcHVibGljIGFzeW5jIHN0YXJ0KCkge31cblxuICAgIHB1YmxpYyBhc3luYyBzdG9wKCkge1xuICAgICAgICAvLyBDbGVhbiB1cCBhbGwgd2lkZ2V0c1xuICAgICAgICBmb3IgKGNvbnN0IHdpZGdldCBvZiB0aGlzLndpZGdldHMpIHtcbiAgICAgICAgICAgIHdpZGdldC53aW5kb3cuZGVzdHJveSgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdFdpZGdldHMoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgZnVuY3Rpb24gaW5pdFdpZGdldChcbiAgICAgICAgICAgIG5hbWU6IHN0cmluZyxcbiAgICAgICAgICAgIGNyZWF0ZUZuOiAobmFtZTogc3RyaW5nLCBnZGttb25pdG9yOiBHZGsuTW9uaXRvcikgPT4gdW5rbm93bixcbiAgICAgICAgICAgIHR5cGU6IFdpZGdldFR5cGUgPSBcImRlZmF1bHRcIlxuICAgICAgICApOiBXaWRnZXQge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIGdka21vbml0b3I6IGdka21vbml0b3IsXG4gICAgICAgICAgICAgICAgd2luZG93OiBjcmVhdGVGbihuYW1lLCBnZGttb25pdG9yKSBhcyBBc3RhbC5XaW5kb3csXG4gICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1dpZGdldHMgPSBbXG4gICAgICAgICAgICBpbml0V2lkZ2V0KGBCYXJgLCBCYXIpLFxuICAgICAgICAgICAgaW5pdFdpZGdldChgTm90aWZpY2F0aW9uUG9wdXBgLCBOb3RpZmljYXRpb25Qb3B1cCksXG4gICAgICAgICAgICBpbml0V2lkZ2V0KFwiVm9sdW1lTWVudVwiLCBWb2x1bWVNZW51LCBcInBvcG92ZXJcIiksXG4gICAgICAgICAgICBpbml0V2lkZ2V0KFwiQmF0dGVyeU1lbnVcIiwgQmF0dGVyeU1lbnUsIFwicG9wb3ZlclwiKSxcbiAgICAgICAgXSBhcyBXaWRnZXRbXVxuXG4gICAgICAgIHRoaXMud2lkZ2V0cy5wdXNoKC4uLm5ld1dpZGdldHMpXG5cbiAgICAgICAgcmV0dXJuIG5ld1dpZGdldHNcbiAgICB9XG5cbiAgICBwdWJsaWMgZGVzdHJveVdpZGdldHMoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgLy8gRmluZCBhbGwgd2lkZ2V0cyBmb3IgdGhlIGdpdmVuIG1vbml0b3JcbiAgICAgICAgY29uc3Qgd2lkZ2V0c1RvUmVtb3ZlID0gdGhpcy53aWRnZXRzLmZpbHRlcihcbiAgICAgICAgICAgICh3aWRnZXQpID0+IHdpZGdldC5nZGttb25pdG9yLmNvbm5lY3RvciA9PT0gZ2RrbW9uaXRvci5jb25uZWN0b3JcbiAgICAgICAgKVxuXG4gICAgICAgIC8vIERlc3Ryb3kgZWFjaCB3aWRnZXQncyB3aW5kb3dcbiAgICAgICAgd2lkZ2V0c1RvUmVtb3ZlLmZvckVhY2goKHdpZGdldCkgPT4gd2lkZ2V0LndpbmRvdy5kZXN0cm95KCkpXG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSB3aWRnZXRzIGZyb20gdGhlIGxpc3RcbiAgICAgICAgdGhpcy53aWRnZXRzID0gdGhpcy53aWRnZXRzLmZpbHRlcihcbiAgICAgICAgICAgICh3aWRnZXQpID0+IHdpZGdldC5nZGttb25pdG9yLmNvbm5lY3RvciAhPT0gZ2RrbW9uaXRvci5jb25uZWN0b3JcbiAgICAgICAgKVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXRXaWRnZXQoXG4gICAgICAgIG5hbWU6IHN0cmluZyxcbiAgICAgICAgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3JcbiAgICApOiBXaWRnZXQgfCB1bmRlZmluZWQge1xuICAgICAgICByZXR1cm4gdGhpcy53aWRnZXRzLmZpbmQoKHdpZGdldCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICB3aWRnZXQubmFtZSA9PT0gbmFtZSAmJlxuICAgICAgICAgICAgICAgIHdpZGdldC5nZGttb25pdG9yLmNvbm5lY3RvciA9PT0gZ2RrbW9uaXRvci5jb25uZWN0b3JcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd1dpZGdldChuYW1lOiBzdHJpbmcsIGdka21vbml0b3I6IEdkay5Nb25pdG9yLCB4ID0gMCwgeSA9IDApIHtcbiAgICAgICAgY29uc3Qgd2lkZ2V0ID0gdGhpcy5nZXRXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcblxuICAgICAgICBjb25zdCBjaGlsZCA9IHdpZGdldD8ud2luZG93Py5nZXRfY2hpbGQoKVxuICAgICAgICBjb25zdCB7IHdpZHRoIH0gPSBjaGlsZCEuZ2V0X2FsbG9jYXRpb24oKVxuXG4gICAgICAgIGNoaWxkPy5zZXRfbWFyZ2luX3N0YXJ0KHggLSB3aWR0aCAvIDIpXG4gICAgICAgIGNoaWxkPy5zZXRfbWFyZ2luX3RvcCh5KVxuXG4gICAgICAgIHdpZGdldD8ud2luZG93Py5zZXRfdmlzaWJsZSh0cnVlKVxuICAgIH1cblxuICAgIHB1YmxpYyBoaWRlV2lkZ2V0KG5hbWU6IHN0cmluZywgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgY29uc3Qgd2lkZ2V0ID0gdGhpcy5nZXRXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcblxuICAgICAgICB3aWRnZXQ/LndpbmRvdy5zZXRfdmlzaWJsZShmYWxzZSlcbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlV2lkZ2V0KG5hbWU6IHN0cmluZywgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IsIHggPSAwLCB5ID0gMCkge1xuICAgICAgICBjb25zdCB3aWRnZXQgPSB0aGlzLmdldFdpZGdldChuYW1lLCBnZGttb25pdG9yKVxuXG4gICAgICAgIGlmICh3aWRnZXQ/LndpbmRvdy5nZXRfdmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGVXaWRnZXQobmFtZSwgZ2RrbW9uaXRvcilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd1dpZGdldChuYW1lLCBnZGttb25pdG9yLCB4LCB5KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGhpZGVQb3BvdmVyV2lkZ2V0cyhnZGttb25pdG9yOiBHZGsuTW9uaXRvciwgZXhjZXB0TmFtZT86IHN0cmluZykge1xuICAgICAgICAvLyBIaWRlIGFsbCBwb3BvdmVyIHdpZGdldHMgZm9yIHRoZSBnaXZlbiBtb25pdG9yXG4gICAgICAgIHRoaXMud2lkZ2V0cy5mb3JFYWNoKCh3aWRnZXQpID0+IHtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICB3aWRnZXQuZ2RrbW9uaXRvci5jb25uZWN0b3IgPT09IGdka21vbml0b3IuY29ubmVjdG9yICYmXG4gICAgICAgICAgICAgICAgd2lkZ2V0LnR5cGUgPT09IFwicG9wb3ZlclwiICYmXG4gICAgICAgICAgICAgICAgd2lkZ2V0Lm5hbWUgIT09IGV4Y2VwdE5hbWVcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHdpZGdldC53aW5kb3cuc2V0X3Zpc2libGUoZmFsc2UpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXaWRnZXRzTWFuYWdlclxuIiwgImltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjFcIlxuaW1wb3J0IGdvaGFuLCB7IFN1YnNjcmliYWJsZVNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgeyBWYXJpYWJsZSB9IGZyb20gXCJhc3RhbFwiXG5cbmNvbnN0IG1heFdvcmtzcGFjZXMgPSA1XG5jb25zdCB3b3Jrc3BhY2VzTnVtID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWF4V29ya3NwYWNlcyAtIDEgfSwgKF8sIGkpID0+IGkpXG5cbmV4cG9ydCBpbnRlcmZhY2UgV29ya3NwYWNlIHtcbiAgICB3czogQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2VcbiAgICBmb2N1c2VkOiBib29sZWFuXG4gICAgb2NjdXBpZWQ6IGJvb2xlYW5cbn1cblxuZnVuY3Rpb24gY3JlYXRlV29ya3NwYWNlcyhmb2N1c2VkSWQ6IG51bWJlcik6IFdvcmtzcGFjZVtdIHtcbiAgICByZXR1cm4gd29ya3NwYWNlc051bS5tYXAoKGkpID0+IHtcbiAgICAgICAgbGV0IHdvcmtzcGFjZSA9IGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuZ2V0X3dvcmtzcGFjZShpICsgMSlcblxuICAgICAgICBpZiAoIXdvcmtzcGFjZSkge1xuICAgICAgICAgICAgd29ya3NwYWNlID0gQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2UuZHVtbXkoaSArIDEsIG51bGwpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd3M6IHdvcmtzcGFjZSxcbiAgICAgICAgICAgIGZvY3VzZWQ6IHdvcmtzcGFjZS5pZCA9PT0gZm9jdXNlZElkLFxuICAgICAgICAgICAgb2NjdXBpZWQ6IHdvcmtzcGFjZS5nZXRfY2xpZW50cygpLmxlbmd0aCA+IDAsXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5jbGFzcyBXb3Jrc3BhY2VzIGltcGxlbWVudHMgU3Vic2NyaWJhYmxlU2VydmljZTxXb3Jrc3BhY2VbXT4ge1xuICAgIHB1YmxpYyB3b3Jrc3BhY2VzOiBWYXJpYWJsZTxXb3Jrc3BhY2VbXT5cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLndvcmtzcGFjZXMgPSBWYXJpYWJsZShbXSlcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIGNvbnN0IGZvY3VzZWQgPSBnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLmdldF9mb2N1c2VkX3dvcmtzcGFjZSgpXG4gICAgICAgIGNvbnN0IHdvcmtzcGFjZXMgPSBjcmVhdGVXb3Jrc3BhY2VzKGZvY3VzZWQuaWQpXG5cbiAgICAgICAgdGhpcy53b3Jrc3BhY2VzLnNldCh3b3Jrc3BhY2VzKVxuXG4gICAgICAgIGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuY29ubmVjdChcbiAgICAgICAgICAgIFwiZXZlbnRcIixcbiAgICAgICAgICAgIHRoaXMub25IeXBybGFuZEV2ZW50LmJpbmQodGhpcylcbiAgICAgICAgKVxuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBzdG9wKCkge1xuICAgICAgICB0aGlzLndvcmtzcGFjZXMuZHJvcCgpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkh5cHJsYW5kRXZlbnQoXG4gICAgICAgIGluc3RhbmNlOiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kLFxuICAgICAgICBldmVudDogc3RyaW5nLFxuICAgICAgICBhcmdzOiBzdHJpbmdcbiAgICApIHtcbiAgICAgICAgY29uc3QgZm9jdXNlZCA9IGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuZ2V0X2ZvY3VzZWRfd29ya3NwYWNlKClcbiAgICAgICAgY29uc3Qgd29ya3NwYWNlcyA9IGNyZWF0ZVdvcmtzcGFjZXMoZm9jdXNlZC5pZClcbiAgICAgICAgY29uc3QgaW5kZXggPSB3b3Jrc3BhY2VzLmZpbmRJbmRleCgod3MpID0+IHdzLndzLmlkID09PSBmb2N1c2VkLmlkKVxuXG4gICAgICAgIC8vIGlmIHRoZSBmb2N1c2VkIHdvcmtzcGFjZSBpcyBub3QgaW4gdGhlIGxpc3QsIHdlIG5lZWQgdG8gYWRkIGl0XG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIC8vIHJlbW92ZSB0aGUgbGF0ZXN0IHdvcmtzcGFjZSBpZiB3ZSBleGNlZWQgdGhlIGxpbWl0XG4gICAgICAgICAgICBpZiAod29ya3NwYWNlcy5sZW5ndGggPj0gbWF4V29ya3NwYWNlcykge1xuICAgICAgICAgICAgICAgIHdvcmtzcGFjZXMucG9wKClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gYWRkIHRoZSBmb2N1c2VkIHdvcmtzcGFjZVxuICAgICAgICAgICAgd29ya3NwYWNlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICB3czogZm9jdXNlZCxcbiAgICAgICAgICAgICAgICBmb2N1c2VkOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9jY3VwaWVkOiBmb2N1c2VkLmdldF9jbGllbnRzKCkubGVuZ3RoID4gMCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgdGhlIGZvY3VzZWQgd29ya3NwYWNlIGlzIGFscmVhZHkgaW4gdGhlIGxpc3QsIHdlIGp1c3QgdXBkYXRlIHRoZSBsYXN0IG9uZVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBsYXN0V29yc3BhY2UgPVxuICAgICAgICAgICAgICAgIGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuZ2V0X3dvcmtzcGFjZShtYXhXb3Jrc3BhY2VzKVxuXG4gICAgICAgICAgICBpZiAoIWxhc3RXb3JzcGFjZSkge1xuICAgICAgICAgICAgICAgIGxhc3RXb3JzcGFjZSA9IEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlLmR1bW15KFxuICAgICAgICAgICAgICAgICAgICBtYXhXb3Jrc3BhY2VzLFxuICAgICAgICAgICAgICAgICAgICBudWxsXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3b3Jrc3BhY2VzLnB1c2goe1xuICAgICAgICAgICAgICAgIHdzOiBsYXN0V29yc3BhY2UsXG4gICAgICAgICAgICAgICAgZm9jdXNlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgb2NjdXBpZWQ6IGxhc3RXb3JzcGFjZS5nZXRfY2xpZW50cygpLmxlbmd0aCA+IDAsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy53b3Jrc3BhY2VzLnNldCh3b3Jrc3BhY2VzKVxuICAgIH1cblxuICAgIHB1YmxpYyBzdWJzY3JpYmUoY2FsbGJhY2s6ICh2YWx1ZTogV29ya3NwYWNlW10pID0+IHZvaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud29ya3NwYWNlcy5zdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgcHVibGljIGdldCgpOiBXb3Jrc3BhY2VbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLndvcmtzcGFjZXMuZ2V0KClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdvcmtzcGFjZXNcbiIsICJpbXBvcnQgeyBleGVjQXN5bmMsIEdPYmplY3QsIFZhcmlhYmxlIH0gZnJvbSBcImFzdGFsXCJcbmltcG9ydCB7IFNlcnZpY2UsIFN1YnNjcmliYWJsZVNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gXCJnaTovL0FzdGFsQmF0dGVyeT92ZXJzaW9uPTAuMVwiXG5cbmludGVyZmFjZSBCYXR0ZXJ5U3RhdGUge1xuICAgIGlzQmF0dGVyeTogYm9vbGVhblxuICAgIGxldmVsOiBBc3RhbEJhdHRlcnkuQmF0dGVyeUxldmVsXG4gICAgcGVyY2VudGFnZTogbnVtYmVyXG4gICAgaWNvbjogc3RyaW5nXG4gICAgYmF0dGVyeUljb246IHN0cmluZ1xuICAgIGlzQ2hhcmdpbmc6IGJvb2xlYW5cbiAgICBwb3dlclByb2ZpbGU6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBQb3dlclByb2ZpbGUgPSBcInBvd2VyLXNhdmVyXCIgfCBcImJhbGFuY2VkXCIgfCBcInBlcmZvcm1hbmNlXCJcblxuY2xhc3MgQmF0dGVyeSBpbXBsZW1lbnRzIFN1YnNjcmliYWJsZVNlcnZpY2U8QmF0dGVyeVN0YXRlPiB7XG4gICAgcHVibGljIGluc3RhbmNlOiBBc3RhbEJhdHRlcnkuRGV2aWNlXG5cbiAgICBwcml2YXRlIGxpc3RlbmVyczogTWFwPHN0cmluZywgbnVtYmVyPiA9IG5ldyBNYXAoKVxuXG4gICAgcHJpdmF0ZSBzdGF0ZSE6IFZhcmlhYmxlPEJhdHRlcnlTdGF0ZT5cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmluc3RhbmNlID0gQXN0YWxCYXR0ZXJ5LmdldF9kZWZhdWx0KClcblxuICAgICAgICB0aGlzLnN0YXRlID0gbmV3IFZhcmlhYmxlPEJhdHRlcnlTdGF0ZT4oe1xuICAgICAgICAgICAgaXNCYXR0ZXJ5OiB0aGlzLmluc3RhbmNlLmdldF9pc19iYXR0ZXJ5KCksXG4gICAgICAgICAgICBsZXZlbDogdGhpcy5pbnN0YW5jZS5nZXRfYmF0dGVyeV9sZXZlbCgpLFxuICAgICAgICAgICAgcGVyY2VudGFnZTogdGhpcy5pbnN0YW5jZS5nZXRfcGVyY2VudGFnZSgpLFxuICAgICAgICAgICAgaWNvbjogdGhpcy5pbnN0YW5jZS5nZXRfaWNvbl9uYW1lKCksXG4gICAgICAgICAgICBiYXR0ZXJ5SWNvbjogdGhpcy5pbnN0YW5jZS5nZXRfYmF0dGVyeV9pY29uX25hbWUoKSxcbiAgICAgICAgICAgIGlzQ2hhcmdpbmc6IHRoaXMuaW5zdGFuY2UuZ2V0X2NoYXJnaW5nKCksXG4gICAgICAgICAgICBwb3dlclByb2ZpbGU6IFwiXCIsXG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICB0aGlzLnVwZGF0ZVN0YXRlKClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnNldChcbiAgICAgICAgICAgIFwibm90aWZ5XCIsXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmNvbm5lY3QoXCJub3RpZnlcIiwgdGhpcy51cGRhdGVTdGF0ZS5iaW5kKHRoaXMpKVxuICAgICAgICApXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGlkLCBldmVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5kaXNjb25uZWN0KGlkKVxuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGV2ZW50KVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuc3RhdGUuZHJvcCgpXG4gICAgfVxuXG4gICAgcHVibGljIHN1YnNjcmliZShjYWxsYmFjazogKHZhbHVlOiBCYXR0ZXJ5U3RhdGUpID0+IHZvaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQoKTogQmF0dGVyeVN0YXRlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0KClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgZ2V0Q3VycmVudFBvd2VyUHJvZmlsZSgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGV4ZWNBc3luYyhcInBvd2VycHJvZmlsZXNjdGwgZ2V0XCIpLnRoZW4oKHJlc3VsdCkgPT5cbiAgICAgICAgICAgIHJlc3VsdC50cmltKClcbiAgICAgICAgKVxuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBzZXRQb3dlclByb2ZpbGUoXG4gICAgICAgIHByb2ZpbGU6IFBvd2VyUHJvZmlsZVxuICAgICkge1xuICAgICAgICBhd2FpdCBleGVjQXN5bmMoYHBvd2VycHJvZmlsZXNjdGwgc2V0ICR7cHJvZmlsZX1gKVxuXG4gICAgICAgIHRoaXMudXBkYXRlU3RhdGUoKVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgdXBkYXRlU3RhdGUoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuc2V0KHtcbiAgICAgICAgICAgIGlzQmF0dGVyeTogdGhpcy5pbnN0YW5jZS5nZXRfaXNfYmF0dGVyeSgpLFxuICAgICAgICAgICAgbGV2ZWw6IHRoaXMuaW5zdGFuY2UuZ2V0X2JhdHRlcnlfbGV2ZWwoKSxcbiAgICAgICAgICAgIHBlcmNlbnRhZ2U6IHRoaXMuaW5zdGFuY2UuZ2V0X3BlcmNlbnRhZ2UoKSxcbiAgICAgICAgICAgIGljb246IHRoaXMuaW5zdGFuY2UuZ2V0X2ljb25fbmFtZSgpLFxuICAgICAgICAgICAgYmF0dGVyeUljb246IHRoaXMuaW5zdGFuY2UuZ2V0X2JhdHRlcnlfaWNvbl9uYW1lKCksXG4gICAgICAgICAgICBpc0NoYXJnaW5nOiB0aGlzLmluc3RhbmNlLmdldF9jaGFyZ2luZygpLFxuICAgICAgICAgICAgcG93ZXJQcm9maWxlOiBhd2FpdCB0aGlzLmdldEN1cnJlbnRQb3dlclByb2ZpbGUoKSxcbiAgICAgICAgfSlcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhdHRlcnlcbiIsICJpbXBvcnQgeyBBcHAgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCJcbmltcG9ydCBnb2hhbiwgeyBTZXJ2aWNlIH0gZnJvbSBcIi4vR29oYW5cIlxuXG5jbGFzcyBNb25pdG9yc01hbmFnZXIgaW1wbGVtZW50cyBTZXJ2aWNlIHtcbiAgICBwcml2YXRlIG1vbml0b3JzOiBNYXA8QXN0YWxIeXBybGFuZC5Nb25pdG9yW1wiaWRcIl0sIEFzdGFsSHlwcmxhbmQuTW9uaXRvcj4gPVxuICAgICAgICBuZXcgTWFwKClcblxuICAgIHByaXZhdGUgbGlzdGVuZXJzOiBNYXA8c3RyaW5nLCBudW1iZXI+ID0gbmV3IE1hcCgpXG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnNldChcbiAgICAgICAgICAgIFwibW9uaXRvci1hZGRlZFwiLFxuICAgICAgICAgICAgZ29oYW4oKS5IeXBybGFuZC5pbnN0YW5jZS5jb25uZWN0KFxuICAgICAgICAgICAgICAgIFwibW9uaXRvci1hZGRlZFwiLFxuICAgICAgICAgICAgICAgIHRoaXMub25Nb25pdG9yQWRkZWQuYmluZCh0aGlzKVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnNldChcbiAgICAgICAgICAgIFwibW9uaXRvci1yZW1vdmVkXCIsXG4gICAgICAgICAgICBnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLmNvbm5lY3QoXG4gICAgICAgICAgICAgICAgXCJtb25pdG9yLXJlbW92ZWRcIixcbiAgICAgICAgICAgICAgICB0aGlzLm9uTW9uaXRvclJlbW92ZWQuYmluZCh0aGlzKVxuICAgICAgICAgICAgKVxuICAgICAgICApXG5cbiAgICAgICAgY29uc3QgbW9uaXRvcnMgPSBnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLmdldF9tb25pdG9ycygpXG5cbiAgICAgICAgbW9uaXRvcnMuZm9yRWFjaCgobW9uaXRvcikgPT4ge1xuICAgICAgICAgICAgdGhpcy5vbk1vbml0b3JBZGRlZChnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLCBtb25pdG9yKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBzdG9wKCkge1xuICAgICAgICAvLyBEaXNjb25uZWN0IGFsbCBsaXN0ZW5lcnNcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoaWQsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUoZXZlbnQpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5tb25pdG9ycy5jbGVhcigpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbk1vbml0b3JBZGRlZChcbiAgICAgICAgX3NvdXJjZTogQXN0YWxIeXBybGFuZC5IeXBybGFuZCxcbiAgICAgICAgbW9uaXRvcjogQXN0YWxIeXBybGFuZC5Nb25pdG9yXG4gICAgKTogdm9pZCB7XG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBtb25pdG9yIGFscmVhZHkgZXhpc3RzXG4gICAgICAgIGlmICh0aGlzLm1vbml0b3JzLmhhcyhtb25pdG9yLmlkKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJNb25pdG9yIGFscmVhZHkgZXhpc3RzLCBza2lwcGluZzpcIiwgbW9uaXRvci5pZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gQWRkIHRoZSBtb25pdG9yIHRvIHRoZSBtYXBcbiAgICAgICAgdGhpcy5tb25pdG9ycy5zZXQobW9uaXRvci5pZCwgbW9uaXRvcilcblxuICAgICAgICAvLyBGaW5kIHRoZSBjb3JyZXNwb25kaW5nIEdkay5Nb25pdG9yXG4gICAgICAgIGNvbnN0IGdka21vbml0b3IgPSBBcHAuZ2V0X21vbml0b3JzKCkuZmluZChcbiAgICAgICAgICAgIChtKSA9PiBtLmNvbm5lY3RvciA9PT0gbW9uaXRvci5uYW1lXG4gICAgICAgIClcblxuICAgICAgICBpZiAoIWdka21vbml0b3IpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSB3aW5kb3dzIGZvciB0aGUgbW9uaXRvciBhbmQgc3RvcmUgdGhlbVxuICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmluaXRXaWRnZXRzKGdka21vbml0b3IpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbk1vbml0b3JSZW1vdmVkKFxuICAgICAgICBfc291cmNlOiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kLFxuICAgICAgICBpZDogQXN0YWxIeXBybGFuZC5Nb25pdG9yW1wiaWRcIl1cbiAgICApOiB2b2lkIHtcbiAgICAgICAgLy8gR2V0IHRoZSBtb25pdG9yIGZyb20gdGhlIG1hcFxuICAgICAgICBjb25zdCBtb25pdG9yID0gdGhpcy5tb25pdG9ycy5nZXQoaWQpXG5cbiAgICAgICAgaWYgKCFtb25pdG9yKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEZpbmQgdGhlIGNvcnJlc3BvbmRpbmcgR2RrLk1vbml0b3JcbiAgICAgICAgY29uc3QgZ2RrbW9uaXRvciA9IEFwcC5nZXRfbW9uaXRvcnMoKS5maW5kKFxuICAgICAgICAgICAgKG0pID0+IG0uY29ubmVjdG9yID09PSBtb25pdG9yLm5hbWVcbiAgICAgICAgKVxuXG4gICAgICAgIGlmICghZ2RrbW9uaXRvcikge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICAvLyBEZXN0cm95IGFsbCB3aWRnZXRzIG9uIHRoaXMgbW9uaXRvclxuICAgICAgICBnb2hhbigpLldpZGdldHNNYW5hZ2VyLmRlc3Ryb3lXaWRnZXRzKGdka21vbml0b3IpXG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBtb25pdG9yIGZyb20gdGhlIG1hcHNcbiAgICAgICAgdGhpcy5tb25pdG9ycy5kZWxldGUoaWQpXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNb25pdG9yc01hbmFnZXJcbiIsICJpbXBvcnQgQXN0YWxXcCBmcm9tIFwiZ2k6Ly9Bc3RhbFdwP3ZlcnNpb249MC4xXCJcbmltcG9ydCB7IFN1YnNjcmliYWJsZVNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgeyBWYXJpYWJsZSB9IGZyb20gXCJhc3RhbFwiXG5cbmludGVyZmFjZSBWb2x1bWVTdGF0ZSB7XG4gICAgdm9sdW1lOiBudW1iZXJcbiAgICB2b2x1bWVJY29uOiBzdHJpbmdcbiAgICBzcGVha2VyczogQXN0YWxXcC5FbmRwb2ludFtdXG4gICAgbWljcm9waG9ub2VzOiBBc3RhbFdwLkVuZHBvaW50W11cbn1cblxuY2xhc3MgVm9sdW1lIGltcGxlbWVudHMgU3Vic2NyaWJhYmxlU2VydmljZTxWb2x1bWVTdGF0ZT4ge1xuICAgIHB1YmxpYyBpbnN0YW5jZTogQXN0YWxXcC5XcFxuXG4gICAgcHJpdmF0ZSBsaXN0ZW5lcnM6IE1hcDxzdHJpbmcsIG51bWJlcj4gPSBuZXcgTWFwKClcblxuICAgIHByaXZhdGUgc3RhdGU6IFZhcmlhYmxlPFZvbHVtZVN0YXRlPlxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBBc3RhbFdwLmdldF9kZWZhdWx0KCkhXG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSB0aGUgc3RhdGUgd2l0aCBkZWZhdWx0IHZhbHVlc1xuICAgICAgICB0aGlzLnN0YXRlID0gVmFyaWFibGUoe1xuICAgICAgICAgICAgdm9sdW1lOiA1MCxcbiAgICAgICAgICAgIHZvbHVtZUljb246IFwiYXVkaW8tdm9sdW1lLW1lZGl1bS1zeW1ib2xpY1wiLFxuICAgICAgICAgICAgc3BlYWtlcnM6IFtdLFxuICAgICAgICAgICAgbWljcm9waG9ub2VzOiBbXSxcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnNldChcbiAgICAgICAgICAgIFwicmVhZHlcIixcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuY29ubmVjdChcInJlYWR5XCIsIChfc291cmNlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5zZXQoe1xuICAgICAgICAgICAgICAgICAgICB2b2x1bWU6IHRoaXMuaW5zdGFuY2UuZGVmYXVsdFNwZWFrZXIudm9sdW1lLFxuICAgICAgICAgICAgICAgICAgICB2b2x1bWVJY29uOiB0aGlzLmluc3RhbmNlLmRlZmF1bHRTcGVha2VyLnZvbHVtZUljb24sXG4gICAgICAgICAgICAgICAgICAgIHNwZWFrZXJzOiB0aGlzLmluc3RhbmNlLmF1ZGlvLmdldF9zcGVha2VycygpIHx8IFtdLFxuICAgICAgICAgICAgICAgICAgICBtaWNyb3Bob25vZXM6IHRoaXMuaW5zdGFuY2UuYXVkaW8uZ2V0X21pY3JvcGhvbmVzKCkgfHwgW10sXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcblxuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXG4gICAgICAgICAgICBcInZvbHVtZS1jaGFuZ2VzXCIsXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmRlZmF1bHRTcGVha2VyLmNvbm5lY3QoXCJub3RpZnlcIiwgKF9zb3VyY2UsIHBzcGVjKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gW1widm9sdW1lXCIsIFwidm9sdW1lSWNvblwiLCBcIm11dGVcIl1cblxuICAgICAgICAgICAgICAgIGlmIChldmVudHMuaW5jbHVkZXMocHNwZWMubmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5zZXQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4udGhpcy5zdGF0ZS5nZXQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZvbHVtZTogdGhpcy5pbnN0YW5jZS5kZWZhdWx0U3BlYWtlci52b2x1bWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB2b2x1bWVJY29uOiB0aGlzLmluc3RhbmNlLmRlZmF1bHRTcGVha2VyLnZvbHVtZUljb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGVha2VyczogdGhpcy5pbnN0YW5jZS5hdWRpby5nZXRfc3BlYWtlcnMoKSB8fCBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pY3JvcGhvbm9lczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLmF1ZGlvLmdldF9taWNyb3Bob25lcygpIHx8IFtdLFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoaWQsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUoZXZlbnQpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5zdGF0ZS5kcm9wKClcbiAgICB9XG5cbiAgICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAodmFsdWU6IFZvbHVtZVN0YXRlKSA9PiB2b2lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnN1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXQoKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9sdW1lXG4iLCAiaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkP3ZlcnNpb249MC4xXCJcbmltcG9ydCB7IFN1YnNjcmliYWJsZVNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgTm90aWZpY2F0aW9uVGltZXIgZnJvbSBcIi4vTm90aWZpY2F0aW9uVGltZXJcIlxuaW1wb3J0IHsgdGltZW91dCwgVmFyaWFibGUgfSBmcm9tIFwiYXN0YWxcIlxuXG5jb25zdCBNQVhfUFJPQ0VTU0lORyA9IDNcblxuaW50ZXJmYWNlIEVudHJ5IHtcbiAgICBsaXN0OiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb25bXVxuICAgIHF1ZXVlOiBudW1iZXJbXVxuICAgIGFjdGl2ZXM6IE5vdGlmaWNhdGlvblRpbWVyW11cbn1cblxuY2xhc3MgTm90aWZpY2F0aW9uTWFuYWdlciBpbXBsZW1lbnRzIFN1YnNjcmliYWJsZVNlcnZpY2U8RW50cnk+IHtcbiAgICBwdWJsaWMgaW5zdGFuY2U6IEFzdGFsTm90aWZkLk5vdGlmZFxuXG4gICAgcHVibGljIGxpc3Q6IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbltdXG5cbiAgICBwcml2YXRlIHF1ZXVlOiBudW1iZXJbXVxuXG4gICAgcHJpdmF0ZSBhY3RpdmVzOiBOb3RpZmljYXRpb25UaW1lcltdID0gW11cblxuICAgIHByaXZhdGUgZW50cnk6IFZhcmlhYmxlPEVudHJ5PlxuXG4gICAgcHJpdmF0ZSBsaXN0ZW5lcnM6IE1hcDxzdHJpbmcsIG51bWJlcj4gPSBuZXcgTWFwKClcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmluc3RhbmNlID0gQXN0YWxOb3RpZmQuZ2V0X2RlZmF1bHQoKVxuICAgICAgICB0aGlzLmluc3RhbmNlLmlnbm9yZVRpbWVvdXQgPSB0cnVlXG5cbiAgICAgICAgdGhpcy5saXN0ID0gdGhpcy5pbnN0YW5jZS5nZXRfbm90aWZpY2F0aW9ucygpLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBiLnRpbWUgLSBhLnRpbWVcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLnF1ZXVlID0gWy4uLnRoaXMubGlzdF0ucmV2ZXJzZSgpLm1hcCgobikgPT4gbi5pZClcblxuICAgICAgICB0aGlzLmVudHJ5ID0gVmFyaWFibGUoe1xuICAgICAgICAgICAgbGlzdDogdGhpcy5saXN0LFxuICAgICAgICAgICAgcXVldWU6IHRoaXMucXVldWUsXG4gICAgICAgICAgICBhY3RpdmVzOiB0aGlzLmFjdGl2ZXMsXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXG4gICAgICAgICAgICBcIm5vdGlmaWVkXCIsXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmNvbm5lY3QoXCJub3RpZmllZFwiLCAoX3NvdXJjZSwgaWQsIHJlcGxhY2VkKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5vbk5vdGlmaWVkKF9zb3VyY2UsIGlkLCByZXBsYWNlZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcblxuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXG4gICAgICAgICAgICBcInJlc29sdmVkXCIsXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmNvbm5lY3QoXCJyZXNvbHZlZFwiLCAoX3NvdXJjZSwgaWQsIHJlYXNvbikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMub25SZXNvbHZlZChfc291cmNlLCBpZCwgcmVhc29uKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuXG4gICAgICAgIHRoaXMucHJvY2Vzc1F1ZXVlKClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoaWQsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUoZXZlbnQpXG4gICAgICAgIH0pXG5cbiAgICAgICAgLy8gZHJvcCB0aGUgZW50cnlcbiAgICAgICAgdGhpcy5lbnRyeS5kcm9wKClcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTm90aWZpZWQoXG4gICAgICAgIF9zb3VyY2U6IEFzdGFsTm90aWZkLk5vdGlmZCxcbiAgICAgICAgaWQ6IG51bWJlcixcbiAgICAgICAgcmVwbGFjZWQ6IGJvb2xlYW5cbiAgICApIHtcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0gdGhpcy5pbnN0YW5jZS5nZXRfbm90aWZpY2F0aW9uKGlkKVxuXG4gICAgICAgIGlmICghbm90aWZpY2F0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNoZWNrIERuRCBhbmQgdXJnZW5jeVxuICAgICAgICBpZiAoXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmRvbnREaXN0dXJiICYmXG4gICAgICAgICAgICBub3RpZmljYXRpb24udXJnZW5jeSAhPT0gQXN0YWxOb3RpZmQuVXJnZW5jeS5DUklUSUNBTFxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcHVzaCB0byBxdWV1ZVxuICAgICAgICB0aGlzLnF1ZXVlLnB1c2goaWQpXG5cbiAgICAgICAgLy8gcHJlcGVuZCB0byBsaXN0IGlmIG5vdCBhbHJlYWR5IHByZXNlbnRcbiAgICAgICAgaWYgKCF0aGlzLmxpc3Quc29tZSgobikgPT4gbi5pZCA9PT0gaWQpKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3QudW5zaGlmdChub3RpZmljYXRpb24pXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm5vdGlmeSgpXG5cbiAgICAgICAgdGhpcy5wcm9jZXNzUXVldWUoKVxuICAgIH1cblxuICAgIHByaXZhdGUgb25SZXNvbHZlZChcbiAgICAgICAgX3NvdXJjZTogQXN0YWxOb3RpZmQuTm90aWZkLFxuICAgICAgICBpZDogbnVtYmVyLFxuICAgICAgICByZWFzb246IEFzdGFsTm90aWZkLkNsb3NlZFJlYXNvblxuICAgICkge1xuICAgICAgICAvLyByZW1vdmUgZnJvbSBxdWV1ZVxuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMucXVldWUuaW5kZXhPZihpZClcblxuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXVlLnNwbGljZShpbmRleCwgMSlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHJlbW92ZSBmcm9tIGFjdGl2ZXNcbiAgICAgICAgY29uc3QgYWN0aXZlSW5kZXggPSB0aGlzLmFjdGl2ZXMuZmluZEluZGV4KChuKSA9PiBuLmlkID09PSBpZClcblxuICAgICAgICBpZiAoYWN0aXZlSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZXMuc3BsaWNlKGFjdGl2ZUluZGV4LCAxKVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVtb3ZlIGZyb20gbGlzdFxuICAgICAgICB0aGlzLmxpc3QgPSB0aGlzLmxpc3QuZmlsdGVyKChuKSA9PiBuLmlkICE9PSBpZClcblxuICAgICAgICB0aGlzLm5vdGlmeSgpXG5cbiAgICAgICAgdGltZW91dCg1MDAsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc1F1ZXVlKClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIHByb2Nlc3NRdWV1ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlcy5sZW5ndGggPj0gTUFYX1BST0NFU1NJTkcpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucXVldWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGdldCB0aGUgbmV4dCBub3RpZmljYXRpb24gZnJvbSB0aGUgcXVldWVcbiAgICAgICAgY29uc3QgaWQgPSB0aGlzLnF1ZXVlLnNoaWZ0KClcblxuICAgICAgICBpZiAoaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICAvLyBhZGQgdG8gYWN0aXZlc1xuICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSB0aGlzLmluc3RhbmNlLmdldF9ub3RpZmljYXRpb24oaWQpXG4gICAgICAgIHRoaXMuYWN0aXZlcy5wdXNoKFxuICAgICAgICAgICAgbmV3IE5vdGlmaWNhdGlvblRpbWVyKFxuICAgICAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi51cmdlbmN5LFxuICAgICAgICAgICAgICAgIHRoaXMuc29mdERpc21pc3MuYmluZCh0aGlzKVxuICAgICAgICAgICAgKVxuICAgICAgICApXG5cbiAgICAgICAgdGhpcy5ub3RpZnkoKVxuICAgICAgICBcbiAgICAgICAgdGltZW91dCg1MDAsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc1F1ZXVlKClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyeS5nZXQoKVxuICAgIH1cblxuICAgIHB1YmxpYyBzdWJzY3JpYmUoY2FsbGJhY2s6ICh2YWx1ZTogRW50cnkpID0+IHZvaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW50cnkuc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHB1YmxpYyBzb2Z0RGlzbWlzcyhpZDogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5hY3RpdmVzLmZpbmRJbmRleCgobikgPT4gbi5pZCA9PT0gaWQpXG5cbiAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVzLnNwbGljZShpbmRleCwgMSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubm90aWZ5KClcblxuICAgICAgICB0aW1lb3V0KDUwMCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzUXVldWUoKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHB1YmxpYyByZXNvbHZlQWxsKCkge1xuICAgICAgICAvLyBDbGVhciB0aGUgcXVldWVcbiAgICAgICAgdGhpcy5xdWV1ZSA9IFtdXG5cbiAgICAgICAgLy8gQ2xlYXIgdGhlIGFjdGl2ZXNcbiAgICAgICAgdGhpcy5hY3RpdmVzLmZvckVhY2goKHRpbWVyKSA9PiB0aW1lci5zdG9wKCkpXG4gICAgICAgIHRoaXMuYWN0aXZlcyA9IFtdXG5cbiAgICAgICAgLy8gQ2xlYXIgdGhlIGxpc3RcbiAgICAgICAgdGhpcy5saXN0ID0gW11cblxuICAgICAgICAvLyBOb3RpZnkgc3Vic2NyaWJlcnNcbiAgICAgICAgdGhpcy5ub3RpZnkoKVxuXG4gICAgICAgIGZvciAoY29uc3Qgbm90aWZpY2F0aW9uIG9mIHRoaXMuaW5zdGFuY2UuZ2V0X25vdGlmaWNhdGlvbnMoKSkge1xuICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRpc21pc3MoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBub3RpZnkoKSB7XG4gICAgICAgIHRoaXMuZW50cnkuc2V0KHtcbiAgICAgICAgICAgIGxpc3Q6IHRoaXMubGlzdCxcbiAgICAgICAgICAgIHF1ZXVlOiB0aGlzLnF1ZXVlLFxuICAgICAgICAgICAgYWN0aXZlczogWy4uLnRoaXMuYWN0aXZlc10ucmV2ZXJzZSgpLFxuICAgICAgICB9KVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uTWFuYWdlclxuIiwgImltcG9ydCB7IEFzdGFsSU8sIGludGVydmFsLCBWYXJpYWJsZSB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmQ/dmVyc2lvbj0wLjFcIlxuXG5jb25zdCBUSUNLID0gMTBcbmNvbnN0IENSSVRJQ0FMX1RJQ0sgPSAzMFxuXG5jbGFzcyBOb3RpZmljYXRpb25UaW1lciB7XG4gICAgLyoqXG4gICAgICogTm90aWZpY2F0aW9uIElEXG4gICAgICovXG4gICAgcHVibGljIGlkOiBudW1iZXJcblxuICAgIHB1YmxpYyB0aWNrOiBWYXJpYWJsZTxudW1iZXI+XG5cbiAgICBwcml2YXRlIGRpc21pc3NlcjogKGlkOiBudW1iZXIpID0+IHZvaWRcblxuICAgIHByaXZhdGUgaW50ZXJ2YWw/OiBBc3RhbElPLlRpbWVcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBpZDogbnVtYmVyLFxuICAgICAgICB1cmdlbmN5OiBBc3RhbE5vdGlmZC5VcmdlbmN5LFxuICAgICAgICBkaXNtaXNzZXI6IChpZDogbnVtYmVyKSA9PiB2b2lkXG4gICAgKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZFxuICAgICAgICB0aGlzLnRpY2sgPSBWYXJpYWJsZShcbiAgICAgICAgICAgIHVyZ2VuY3kgPT09IEFzdGFsTm90aWZkLlVyZ2VuY3kuQ1JJVElDQUwgPyBDUklUSUNBTF9USUNLIDogVElDS1xuICAgICAgICApXG4gICAgICAgIHRoaXMuZGlzbWlzc2VyID0gZGlzbWlzc2VyXG5cbiAgICAgICAgdGhpcy5zdGFydCgpXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXJ0KCkge1xuICAgICAgICAvLyBDaGVjayBpZiB0aGUgdGltZXIgYWxyZWFkeSBleGlzdHNcbiAgICAgICAgaWYgKHRoaXMuaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gU3RhcnQgdGhlIHRpbWVyXG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBpbnRlcnZhbCgxMDAwLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VGljayA9IHRoaXMudGljay5nZXQoKVxuXG4gICAgICAgICAgICBpZiAoY3VycmVudFRpY2sgPD0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWw/LmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgdGhpcy5pbnRlcnZhbCA9IHVuZGVmaW5lZFxuXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNtaXNzZXIodGhpcy5pZClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy50aWNrLnNldChjdXJyZW50VGljayAtIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIHN0b3AoKSB7XG4gICAgICAgIC8vIFN0b3AgdGhlIHRpbWVyXG4gICAgICAgIHRoaXMuaW50ZXJ2YWw/LmNhbmNlbCgpXG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSB1bmRlZmluZWRcblxuICAgICAgICB0aGlzLnRpY2suc2V0KFRJQ0spIC8vIFJlc2V0IHRoZSB0aWNrXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25UaW1lclxuIiwgImltcG9ydCB7IGludGVydmFsLCBWYXJpYWJsZSB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgeyBTdWJzY3JpYmFibGVTZXJ2aWNlIH0gZnJvbSBcIi4vR29oYW5cIlxuaW1wb3J0IEFzdGFsVHJheSBmcm9tIFwiZ2k6Ly9Bc3RhbFRyYXk/dmVyc2lvbj0wLjFcIlxuXG5jb25zdCBDVVNUT01fSUNPTlM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgZGlzY29yZDogXCJcdUYxRkZcIixcbiAgICBzdGVhbTogXCJcdUYxQjZcIixcbiAgICBzcG90aWZ5OiBcIlx1RjFCQ1wiLFxufVxuXG5jb25zdCBVU0VfQ1VTVE9NX0lDT05TOiBSZWdFeHBbXSA9IFsvc3RlYW0vaSwgL2Rpc2NvcmQvaSwgL3Nwb3RpZnkvaV1cblxuZnVuY3Rpb24gZ2V0U2VhcmNoV2l0aChpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0pIHtcbiAgICBjb25zdCB0aXRsZSA9IGl0ZW0udGl0bGVcbiAgICBjb25zdCB0b29sdGlwTWFya3VwID0gaXRlbS50b29sdGlwTWFya3VwXG4gICAgcmV0dXJuIHRpdGxlICYmIHRpdGxlLmxlbmd0aCA/IHRpdGxlIDogdG9vbHRpcE1hcmt1cFxufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VDdXN0b21JY29uKHNlYXJjaFdpdGg6IHN0cmluZykge1xuICAgIHJldHVybiBVU0VfQ1VTVE9NX0lDT05TLnNvbWUoKHJlZ2V4KSA9PiBzZWFyY2hXaXRoLm1hdGNoKHJlZ2V4KSlcbn1cblxuZnVuY3Rpb24gZ2V0Q3VzdG9tSWNvbihpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0pIHtcbiAgICBjb25zdCBzZWFyY2hXaXRoID0gZ2V0U2VhcmNoV2l0aChpdGVtKVxuICAgIGNvbnN0IHNob3VsZFVzZSA9IHNob3VsZFVzZUN1c3RvbUljb24oc2VhcmNoV2l0aClcblxuICAgIGlmICghc2hvdWxkVXNlKSB7XG4gICAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoQ1VTVE9NX0lDT05TKSkge1xuICAgICAgICBpZiAoc2VhcmNoV2l0aC5tYXRjaChuZXcgUmVnRXhwKGtleSwgXCJpXCIpKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gXCJcdURCODJcdURDMkJcIlxufVxuXG5mdW5jdGlvbiB0b1RpdGxlQ2FzZShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgLnNwbGl0KFwiIFwiKVxuICAgICAgICAubWFwKCh3b3JkKSA9PiB3b3JkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKSlcbiAgICAgICAgLmpvaW4oXCIgXCIpXG59XG5cbmZ1bmN0aW9uIGdldFRvb2x0aXBNYXJrdXAoaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSB7XG4gICAgLy8geWVhaCBjYW4gdXNlIHRoaXMgdG8gZ2V0IHRoZSB0b29sdGlwIG1hcmt1cFxuICAgIHJldHVybiB0b1RpdGxlQ2FzZShnZXRTZWFyY2hXaXRoKGl0ZW0pKVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRyYXlFbnRyeSB7XG4gICAgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtXG4gICAgaXRlbV9pZDogQXN0YWxUcmF5LlRyYXlJdGVtW1wiaXRlbUlkXCJdXG4gICAgdGl0bGU6IEFzdGFsVHJheS5UcmF5SXRlbVtcInRpdGxlXCJdXG4gICAgdG9vbHRpcDogQXN0YWxUcmF5LlRyYXlJdGVtW1widG9vbHRpcE1hcmt1cFwiXVxuICAgIGdpY29uOiBBc3RhbFRyYXkuVHJheUl0ZW1bXCJnaWNvblwiXVxuICAgIGN1c3RvbUljb246IHN0cmluZyB8IG51bGxcbiAgICBtZW51TW9kZWw6IEFzdGFsVHJheS5UcmF5SXRlbVtcIm1lbnVNb2RlbFwiXSB8IG51bGxcbiAgICBhY3Rpb25Hcm91cDogQXN0YWxUcmF5LlRyYXlJdGVtW1wiYWN0aW9uR3JvdXBcIl0gfCBudWxsXG59XG5cbmNsYXNzIFRyYXkgaW1wbGVtZW50cyBTdWJzY3JpYmFibGVTZXJ2aWNlPFRyYXlFbnRyeVtdPiB7XG4gICAgcHVibGljIGluc3RhbmNlOiBBc3RhbFRyYXkuVHJheVxuXG4gICAgcHJpdmF0ZSBlbnRyaWVzOiBWYXJpYWJsZTxUcmF5RW50cnlbXT5cblxuICAgIHByaXZhdGUgbGlzdGVuZXJzOiBNYXA8c3RyaW5nLCBudW1iZXI+ID0gbmV3IE1hcCgpXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5pbnN0YW5jZSA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpXG5cbiAgICAgICAgdGhpcy5lbnRyaWVzID0gVmFyaWFibGU8VHJheUVudHJ5W10+KFxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5nZXRfaXRlbXMoKS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLFxuICAgICAgICAgICAgICAgICAgICBpdGVtX2lkOiBpdGVtLmdldF9pdGVtX2lkKCksXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBpdGVtLmdldF90aXRsZSgpLFxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwOiBnZXRUb29sdGlwTWFya3VwKGl0ZW0pLFxuICAgICAgICAgICAgICAgICAgICBnaWNvbjogaXRlbS5nZXRfZ2ljb24oKSxcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tSWNvbjogZ2V0Q3VzdG9tSWNvbihpdGVtKSxcbiAgICAgICAgICAgICAgICAgICAgbWVudU1vZGVsOiBpdGVtLmdldF9tZW51X21vZGVsKCksXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbkdyb3VwOiBpdGVtLmdldF9hY3Rpb25fZ3JvdXAoKSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXG4gICAgICAgICAgICBcIml0ZW0tYWRkZWRcIixcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuY29ubmVjdChcIml0ZW0tYWRkZWRcIiwgKHNvdXJjZSwgaXRlbV9pZCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmluc3RhbmNlLmdldF9pdGVtKGl0ZW1faWQpXG4gICAgICAgICAgICAgICAgY29uc3QgZW50cnk6IFRyYXlFbnRyeSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgaXRlbV9pZDogaXRlbS5nZXRfaXRlbV9pZCgpLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogaXRlbS5nZXRfdGl0bGUoKSxcbiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcDogZ2V0VG9vbHRpcE1hcmt1cChpdGVtKSxcbiAgICAgICAgICAgICAgICAgICAgZ2ljb246IGl0ZW0uZ2V0X2dpY29uKCksXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbUljb246IGdldEN1c3RvbUljb24oaXRlbSksXG4gICAgICAgICAgICAgICAgICAgIG1lbnVNb2RlbDogaXRlbS5nZXRfbWVudV9tb2RlbCgpLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25Hcm91cDogaXRlbS5nZXRfYWN0aW9uX2dyb3VwKCksXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5lbnRyaWVzLnNldChbLi4udGhpcy5lbnRyaWVzLmdldCgpLCBlbnRyeV0pXG4gICAgICAgICAgICB9KVxuICAgICAgICApXG5cbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuc2V0KFxuICAgICAgICAgICAgXCJpdGVtLXJlbW92ZWRcIixcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuY29ubmVjdChcIml0ZW0tcmVtb3ZlZFwiLCAoc291cmNlLCBpdGVtX2lkKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlZEVudHJpZXMgPSB0aGlzLmVudHJpZXNcbiAgICAgICAgICAgICAgICAgICAgLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoKGVudHJ5KSA9PiBlbnRyeS5pdGVtX2lkICE9PSBpdGVtX2lkKVxuXG4gICAgICAgICAgICAgICAgdGhpcy5lbnRyaWVzLnNldCh1cGRhdGVkRW50cmllcylcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoaWQsIG5hbWUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShuYW1lKVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuZW50cmllcy5kcm9wKClcbiAgICB9XG5cbiAgICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAodmFsdWU6IFRyYXlFbnRyeVtdKSA9PiB2b2lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMuc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMuZ2V0KClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyYXlcbiIsICJpbXBvcnQgeyBWYXJpYWJsZSB9IGZyb20gXCJhc3RhbFwiXG5pbXBvcnQgZ29oYW4sIHsgU3Vic2NyaWJhYmxlU2VydmljZSB9IGZyb20gXCIuL0dvaGFuXCJcblxuaW50ZXJmYWNlIENsaWVudCB7XG4gICAgdGl0bGU6IHN0cmluZ1xufVxuXG5jbGFzcyBGb2N1c2VkQ2xpZW50IGltcGxlbWVudHMgU3Vic2NyaWJhYmxlU2VydmljZTxDbGllbnQ+IHtcbiAgICBwcml2YXRlIGxpc3RlbmVyczogTWFwPHN0cmluZywgbnVtYmVyPiA9IG5ldyBNYXAoKVxuXG4gICAgcHJpdmF0ZSBjbGllbnQ6IFZhcmlhYmxlPENsaWVudD5cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNsaWVudCA9IFZhcmlhYmxlPENsaWVudD4oe1xuICAgICAgICAgICAgdGl0bGU6IFwiXCIsXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5zZXQoXG4gICAgICAgICAgICBcImZvY3VzZWQtY2xpZW50LWNoYW5nZWRcIixcbiAgICAgICAgICAgIGdvaGFuKCkuSHlwcmxhbmQuaW5zdGFuY2UuY29ubmVjdChcbiAgICAgICAgICAgICAgICBcIm5vdGlmeTo6Zm9jdXNlZC1jbGllbnRcIixcbiAgICAgICAgICAgICAgICAoc291cmNlLCBwc3BlYykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsaWVudC5zZXQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ29oYW4oKS5IeXBybGFuZC5pbnN0YW5jZS5nZXRfZm9jdXNlZF9jbGllbnQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/LnRpdGxlIHx8IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGlkKSA9PiB7XG4gICAgICAgICAgICBnb2hhbigpLkh5cHJsYW5kLmluc3RhbmNlLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmNsZWFyKClcbiAgICB9XG5cbiAgICBwdWJsaWMgc3Vic2NyaWJlKGNhbGxiYWNrOiAodmFsdWU6IENsaWVudCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICByZXR1cm4gdGhpcy5jbGllbnQuc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQoKTogQ2xpZW50IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldCgpXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb2N1c2VkQ2xpZW50XG4iLCAiaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcImFzdGFsL2JpbmRpbmdcIlxuaW1wb3J0IEN1cnNvciBmcm9tIFwiLi9DdXJzb3JcIlxuaW1wb3J0IEh5cHJsYW5kIGZyb20gXCIuL0h5cHJsYW5kXCJcbmltcG9ydCBUaGVtZSBmcm9tIFwiLi9UaGVtZVwiXG5pbXBvcnQgVGltZSBmcm9tIFwiLi9UaW1lXCJcbmltcG9ydCBXaWRnZXRzTWFuYWdlciBmcm9tIFwiLi9XaWRnZXRzTWFuYWdlclwiXG5pbXBvcnQgV29ya3NwYWNlcyBmcm9tIFwiLi9Xb3Jrc3BhY2VzXCJcbmltcG9ydCBCYXR0ZXJ5IGZyb20gXCIuL0JhdHRlcnlcIlxuaW1wb3J0IE1vbml0b3JzTWFuYWdlciBmcm9tIFwiLi9Nb25pdG9yc01hbmFnZXJcIlxuaW1wb3J0IFZvbHVtZSBmcm9tIFwiLi9Wb2x1bWVcIlxuaW1wb3J0IE5vdGlmaWNhdGlvbk1hbmFnZXIgZnJvbSBcIi4vTm90aWZpY2F0aW9uTWFuYWdlclwiXG5pbXBvcnQgVHJheSBmcm9tIFwiLi9UcmF5XCJcbmltcG9ydCBGb2N1c2VkQ2xpZW50IGZyb20gXCIuL0ZvY3VzZWRDbGllbnRcIlxuXG5leHBvcnQgY2xhc3MgR29oYW4ge1xuICAgIHB1YmxpYyBUaGVtZTogVGhlbWVcblxuICAgIHB1YmxpYyBIeXBybGFuZDogSHlwcmxhbmRcbiAgICBwdWJsaWMgTW9uaXRvcnNNYW5hZ2VyOiBNb25pdG9yc01hbmFnZXJcbiAgICBwdWJsaWMgV2lkZ2V0c01hbmFnZXI6IFdpZGdldHNNYW5hZ2VyXG4gICAgcHVibGljIE5vdGlmaWNhdGlvbk1hbmFnZXI6IE5vdGlmaWNhdGlvbk1hbmFnZXJcblxuICAgIHB1YmxpYyBUaW1lOiBUaW1lXG4gICAgcHVibGljIFdvcmtzcGFjZXM6IFdvcmtzcGFjZXNcbiAgICBwdWJsaWMgQmF0dGVyeTogQmF0dGVyeVxuICAgIHB1YmxpYyBWb2x1bWU6IFZvbHVtZVxuICAgIHB1YmxpYyBUcmF5OiBUcmF5XG4gICAgcHVibGljIEZvY3VzZWRDbGllbnQ6IEZvY3VzZWRDbGllbnRcblxuICAgIHB1YmxpYyBDdXJzb3I6IEN1cnNvclxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuQ3Vyc29yID0gbmV3IEN1cnNvcigpXG5cbiAgICAgICAgdGhpcy5UaGVtZSA9IG5ldyBUaGVtZSgpXG4gICAgICAgIHRoaXMuSHlwcmxhbmQgPSBuZXcgSHlwcmxhbmQoKVxuICAgICAgICB0aGlzLk1vbml0b3JzTWFuYWdlciA9IG5ldyBNb25pdG9yc01hbmFnZXIoKVxuICAgICAgICB0aGlzLldpZGdldHNNYW5hZ2VyID0gbmV3IFdpZGdldHNNYW5hZ2VyKClcbiAgICAgICAgdGhpcy5Ob3RpZmljYXRpb25NYW5hZ2VyID0gbmV3IE5vdGlmaWNhdGlvbk1hbmFnZXIoKVxuXG4gICAgICAgIHRoaXMuVGltZSA9IG5ldyBUaW1lKClcbiAgICAgICAgdGhpcy5Xb3Jrc3BhY2VzID0gbmV3IFdvcmtzcGFjZXMoKVxuICAgICAgICB0aGlzLkJhdHRlcnkgPSBuZXcgQmF0dGVyeSgpXG4gICAgICAgIHRoaXMuVm9sdW1lID0gbmV3IFZvbHVtZSgpXG4gICAgICAgIHRoaXMuVHJheSA9IG5ldyBUcmF5KClcbiAgICAgICAgdGhpcy5Gb2N1c2VkQ2xpZW50ID0gbmV3IEZvY3VzZWRDbGllbnQoKVxuICAgIH1cblxuICAgIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkdvaGFuIHNlcnZpY2UgaXMgc3RhcnRpbmcuLi5cIilcblxuICAgICAgICAvLyBDb3Jlc1xuICAgICAgICBhd2FpdCB0aGlzLkh5cHJsYW5kLnN0YXJ0KClcbiAgICAgICAgYXdhaXQgdGhpcy5Nb25pdG9yc01hbmFnZXIuc3RhcnQoKVxuICAgICAgICBhd2FpdCB0aGlzLldpZGdldHNNYW5hZ2VyLnN0YXJ0KClcbiAgICAgICAgYXdhaXQgdGhpcy5Ob3RpZmljYXRpb25NYW5hZ2VyLnN0YXJ0KClcblxuICAgICAgICAvLyBNb2R1bGVzXG4gICAgICAgIGF3YWl0IHRoaXMuVGltZS5zdGFydCgpXG4gICAgICAgIGF3YWl0IHRoaXMuV29ya3NwYWNlcy5zdGFydCgpXG4gICAgICAgIGF3YWl0IHRoaXMuQmF0dGVyeS5zdGFydCgpXG4gICAgICAgIGF3YWl0IHRoaXMuVm9sdW1lLnN0YXJ0KClcbiAgICAgICAgYXdhaXQgdGhpcy5UcmF5LnN0YXJ0KClcbiAgICAgICAgYXdhaXQgdGhpcy5Gb2N1c2VkQ2xpZW50LnN0YXJ0KClcblxuICAgICAgICAvLyBUaGVtZVxuICAgICAgICBhd2FpdCB0aGlzLlRoZW1lLnN0YXJ0KClcbiAgICB9XG5cbiAgICBhc3luYyBzdG9wKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkdvaGFuIHNlcnZpY2UgaXMgc3RvcHBpbmcuLi5cIilcblxuICAgICAgICAvLyBUaGVtZVxuICAgICAgICBhd2FpdCB0aGlzLlRoZW1lLnN0b3AoKVxuXG4gICAgICAgIC8vIE1vZHVsZXNcbiAgICAgICAgYXdhaXQgdGhpcy5UaW1lLnN0b3AoKVxuICAgICAgICBhd2FpdCB0aGlzLldvcmtzcGFjZXMuc3RvcCgpXG4gICAgICAgIGF3YWl0IHRoaXMuQmF0dGVyeS5zdG9wKClcbiAgICAgICAgYXdhaXQgdGhpcy5Wb2x1bWUuc3RvcCgpXG4gICAgICAgIGF3YWl0IHRoaXMuVHJheS5zdG9wKClcblxuICAgICAgICAvLyBDb3Jlc1xuICAgICAgICBhd2FpdCB0aGlzLk5vdGlmaWNhdGlvbk1hbmFnZXIuc3RvcCgpXG4gICAgICAgIGF3YWl0IHRoaXMuV2lkZ2V0c01hbmFnZXIuc3RvcCgpXG4gICAgICAgIGF3YWl0IHRoaXMuTW9uaXRvcnNNYW5hZ2VyLnN0b3AoKVxuICAgICAgICBhd2FpdCB0aGlzLkh5cHJsYW5kLnN0b3AoKVxuICAgICAgICBhd2FpdCB0aGlzLkZvY3VzZWRDbGllbnQuc3RvcCgpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZpY2Uge1xuICAgIHN0YXJ0KCk6IFByb21pc2U8dm9pZD5cbiAgICBzdG9wKCk6IFByb21pc2U8dm9pZD5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdWJzY3JpYmFibGVTZXJ2aWNlPFQgZXh0ZW5kcyBhbnk+IGV4dGVuZHMgU3Vic2NyaWJhYmxlPFQ+IHtcbiAgICBzdGFydCgpOiBQcm9taXNlPHZvaWQ+XG4gICAgc3RvcCgpOiBQcm9taXNlPHZvaWQ+XG59XG5cbmxldCBfZ29oYW46IEdvaGFuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdvaGFuKCkge1xuICAgIGlmICghX2dvaGFuKSB7XG4gICAgICAgIF9nb2hhbiA9IG5ldyBHb2hhbigpXG4gICAgfVxuICAgIHJldHVybiBfZ29oYW5cbn1cbiIsICIjIS91c3IvYmluL2dqcyAtbVxuXG5pbXBvcnQgeyBBcHAgYXMgQXN0YWxBcHAgfSBmcm9tIFwiYXN0YWwvZ3RrNFwiXG5pbXBvcnQgZ29oYW4gZnJvbSBcIi4vc2VydmljZXMvR29oYW5cIlxuXG5Bc3RhbEFwcC5zdGFydCh7XG4gICAgaW5zdGFuY2VOYW1lOiAnR29oYW4nLFxuICAgIG1haW4oKSB7XG4gICAgICAgIGdvaGFuKCkuc3RhcnQoKVxuICAgIH0sXG59KVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7O0FBQUEsT0FBT0EsWUFBVztBQUNsQixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLFVBQVM7OztBQ0ZoQixPQUFPQyxZQUFXOzs7QUNBbEIsT0FBTyxhQUFhO0FBRWIsSUFBTSxXQUFXLENBQUMsUUFBZ0IsSUFDcEMsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBRVYsSUFBTSxXQUFXLENBQUMsUUFBZ0IsSUFDcEMsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBNkJWLElBQU0sVUFBTixNQUFNLFNBQThDO0FBQUEsRUF1Qi9DLFlBQVksU0FBNEMsTUFBZTtBQXRCL0UsU0FBUSxjQUFjLENBQUMsTUFBVztBQXVCOUIsU0FBSyxXQUFXO0FBQ2hCLFNBQUssUUFBUSxRQUFRLFNBQVMsSUFBSTtBQUFBLEVBQ3RDO0FBQUEsRUF2QkE7QUFBQSxFQUNBO0FBQUEsRUFlQSxPQUFPLEtBQUssU0FBcUMsTUFBZTtBQUM1RCxXQUFPLElBQUksU0FBUSxTQUFTLElBQUk7QUFBQSxFQUNwQztBQUFBLEVBT0EsQ0FBQyxPQUFPLFdBQVcsSUFBSTtBQUNuQixZQUFRLEtBQUsscUZBQXFGO0FBQ2xHLFdBQU8sS0FBSyxTQUFTO0FBQUEsRUFDekI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPQSxXQUFXO0FBQ1AsV0FBTyxXQUFXLEtBQUssUUFBUSxHQUFHLEtBQUssUUFBUSxNQUFNLEtBQUssS0FBSyxNQUFNLEVBQUU7QUFBQSxFQUMzRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxHQUFNLElBQWlDO0FBQ25DLFVBQU1DLFFBQU8sSUFBSSxTQUFRLEtBQUssVUFBVSxLQUFLLEtBQUs7QUFDbEQsSUFBQUEsTUFBSyxjQUFjLENBQUMsTUFBYSxHQUFHLEtBQUssWUFBWSxDQUFDLENBQUM7QUFDdkQsV0FBT0E7QUFBQSxFQUNYO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQSxNQUFhO0FBQ1QsUUFBSSxPQUFPLEtBQUssU0FBUyxRQUFRO0FBQzdCLGFBQU8sS0FBSyxZQUFZLEtBQUssU0FBUyxJQUFJLENBQUM7QUFFL0MsUUFBSSxPQUFPLEtBQUssVUFBVSxVQUFVO0FBQ2hDLFlBQU0sU0FBUyxPQUFPLFNBQVMsS0FBSyxLQUFLLENBQUM7QUFDMUMsVUFBSSxPQUFPLEtBQUssU0FBUyxNQUFNLE1BQU07QUFDakMsZUFBTyxLQUFLLFlBQVksS0FBSyxTQUFTLE1BQU0sRUFBRSxDQUFDO0FBRW5ELGFBQU8sS0FBSyxZQUFZLEtBQUssU0FBUyxLQUFLLEtBQUssQ0FBQztBQUFBLElBQ3JEO0FBRUEsVUFBTSxNQUFNLDhCQUE4QjtBQUFBLEVBQzlDO0FBQUEsRUFFQSxVQUFVLFVBQThDO0FBQ3BELFFBQUksT0FBTyxLQUFLLFNBQVMsY0FBYyxZQUFZO0FBQy9DLGFBQU8sS0FBSyxTQUFTLFVBQVUsTUFBTTtBQUNqQyxpQkFBUyxLQUFLLElBQUksQ0FBQztBQUFBLE1BQ3ZCLENBQUM7QUFBQSxJQUNMLFdBQVcsT0FBTyxLQUFLLFNBQVMsWUFBWSxZQUFZO0FBQ3BELFlBQU0sU0FBUyxXQUFXLEtBQUssS0FBSztBQUNwQyxZQUFNLEtBQUssS0FBSyxTQUFTLFFBQVEsUUFBUSxNQUFNO0FBQzNDLGlCQUFTLEtBQUssSUFBSSxDQUFDO0FBQUEsTUFDdkIsQ0FBQztBQUNELGFBQU8sTUFBTTtBQUNULFlBQUksUUFBUSw0QkFBNEIsS0FBSyxVQUFVLEVBQUU7QUFDckQsVUFBQyxLQUFLLFNBQVMsV0FBeUMsRUFBRTtBQUFBLE1BQ2xFO0FBQUEsSUFDSjtBQUNBLFVBQU0sTUFBTSxHQUFHLEtBQUssUUFBUSxrQkFBa0I7QUFBQSxFQUNsRDtBQUNKO0FBRU8sSUFBTSxFQUFFLEtBQUssSUFBSTtBQUN4QixJQUFPLGtCQUFROzs7QUNqSWYsT0FBTyxXQUFXO0FBR1gsSUFBTSxPQUFPLE1BQU07QUFFbkIsU0FBUyxTQUFTQyxXQUFrQixVQUF1QjtBQUM5RCxTQUFPLE1BQU0sS0FBSyxTQUFTQSxXQUFVLE1BQU0sS0FBSyxXQUFXLENBQUM7QUFDaEU7QUFFTyxTQUFTLFFBQVFDLFVBQWlCLFVBQXVCO0FBQzVELFNBQU8sTUFBTSxLQUFLLFFBQVFBLFVBQVMsTUFBTSxLQUFLLFdBQVcsQ0FBQztBQUM5RDs7O0FDWEEsT0FBT0MsWUFBVztBQVNYLElBQU0sVUFBVUEsT0FBTTtBQVV0QixTQUFTLFdBQ1osV0FDQSxRQUFrQyxPQUNsQyxRQUFrQyxVQUNwQztBQUNFLFFBQU0sT0FBTyxNQUFNLFFBQVEsU0FBUyxLQUFLLE9BQU8sY0FBYztBQUM5RCxRQUFNLEVBQUUsS0FBSyxLQUFLLElBQUksSUFBSTtBQUFBLElBQ3RCLEtBQUssT0FBTyxZQUFZLFVBQVU7QUFBQSxJQUNsQyxLQUFLLE9BQU8sUUFBUSxVQUFVLE9BQU87QUFBQSxJQUNyQyxLQUFLLE9BQU8sUUFBUSxVQUFVLE9BQU87QUFBQSxFQUN6QztBQUVBLFFBQU0sT0FBTyxNQUFNLFFBQVEsR0FBRyxJQUN4QkEsT0FBTSxRQUFRLFlBQVksR0FBRyxJQUM3QkEsT0FBTSxRQUFRLFdBQVcsR0FBRztBQUVsQyxPQUFLLFFBQVEsVUFBVSxDQUFDLEdBQUcsV0FBbUIsSUFBSSxNQUFNLENBQUM7QUFDekQsT0FBSyxRQUFRLFVBQVUsQ0FBQyxHQUFHLFdBQW1CLElBQUksTUFBTSxDQUFDO0FBQ3pELFNBQU87QUFDWDtBQVNPLFNBQVMsVUFBVSxLQUF5QztBQUMvRCxTQUFPLElBQUksUUFBUSxDQUFDLFNBQVMsV0FBVztBQUNwQyxRQUFJLE1BQU0sUUFBUSxHQUFHLEdBQUc7QUFDcEIsTUFBQUMsT0FBTSxRQUFRLFlBQVksS0FBSyxDQUFDLEdBQUcsUUFBUTtBQUN2QyxZQUFJO0FBQ0Esa0JBQVFBLE9BQU0sUUFBUSxtQkFBbUIsR0FBRyxDQUFDO0FBQUEsUUFDakQsU0FBUyxPQUFPO0FBQ1osaUJBQU8sS0FBSztBQUFBLFFBQ2hCO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTCxPQUFPO0FBQ0gsTUFBQUEsT0FBTSxRQUFRLFdBQVcsS0FBSyxDQUFDLEdBQUcsUUFBUTtBQUN0QyxZQUFJO0FBQ0Esa0JBQVFBLE9BQU0sUUFBUSxZQUFZLEdBQUcsQ0FBQztBQUFBLFFBQzFDLFNBQVMsT0FBTztBQUNaLGlCQUFPLEtBQUs7QUFBQSxRQUNoQjtBQUFBLE1BQ0osQ0FBQztBQUFBLElBQ0w7QUFBQSxFQUNKLENBQUM7QUFDTDs7O0FIOURBLElBQU0sa0JBQU4sY0FBaUMsU0FBUztBQUFBLEVBZ0J0QyxZQUFZLE1BQVM7QUFDakIsVUFBTTtBQWZWLFNBQVEsYUFBYyxRQUFRO0FBTTlCLFNBQVEsZUFBZTtBQVVuQixTQUFLLFNBQVM7QUFDZCxTQUFLLFdBQVcsSUFBSUMsT0FBTSxhQUFhO0FBQ3ZDLFNBQUssU0FBUyxRQUFRLFdBQVcsTUFBTTtBQUNuQyxXQUFLLFVBQVU7QUFDZixXQUFLLFNBQVM7QUFBQSxJQUNsQixDQUFDO0FBQ0QsU0FBSyxTQUFTLFFBQVEsU0FBUyxDQUFDLEdBQUcsUUFBUSxLQUFLLGFBQWEsR0FBRyxDQUFDO0FBQ2pFLFdBQU8sSUFBSSxNQUFNLE1BQU07QUFBQSxNQUNuQixPQUFPLENBQUMsUUFBUSxHQUFHLFNBQVMsT0FBTyxNQUFNLEtBQUssQ0FBQyxDQUFDO0FBQUEsSUFDcEQsQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVRLE1BQWEsV0FBeUM7QUFDMUQsVUFBTSxJQUFJLGdCQUFRLEtBQUssSUFBSTtBQUMzQixXQUFPLFlBQVksRUFBRSxHQUFHLFNBQVMsSUFBSTtBQUFBLEVBQ3pDO0FBQUEsRUFFQSxXQUFXO0FBQ1AsV0FBTyxPQUFPLFlBQVksS0FBSyxJQUFJLENBQUMsR0FBRztBQUFBLEVBQzNDO0FBQUEsRUFFQSxNQUFTO0FBQUUsV0FBTyxLQUFLO0FBQUEsRUFBTztBQUFBLEVBQzlCLElBQUksT0FBVTtBQUNWLFFBQUksVUFBVSxLQUFLLFFBQVE7QUFDdkIsV0FBSyxTQUFTO0FBQ2QsV0FBSyxTQUFTLEtBQUssU0FBUztBQUFBLElBQ2hDO0FBQUEsRUFDSjtBQUFBLEVBRUEsWUFBWTtBQUNSLFFBQUksS0FBSztBQUNMO0FBRUosUUFBSSxLQUFLLFFBQVE7QUFDYixXQUFLLFFBQVEsU0FBUyxLQUFLLGNBQWMsTUFBTTtBQUMzQyxjQUFNLElBQUksS0FBSyxPQUFRLEtBQUssSUFBSSxDQUFDO0FBQ2pDLFlBQUksYUFBYSxTQUFTO0FBQ3RCLFlBQUUsS0FBSyxDQUFBQyxPQUFLLEtBQUssSUFBSUEsRUFBQyxDQUFDLEVBQ2xCLE1BQU0sU0FBTyxLQUFLLFNBQVMsS0FBSyxTQUFTLEdBQUcsQ0FBQztBQUFBLFFBQ3RELE9BQU87QUFDSCxlQUFLLElBQUksQ0FBQztBQUFBLFFBQ2Q7QUFBQSxNQUNKLENBQUM7QUFBQSxJQUNMLFdBQVcsS0FBSyxVQUFVO0FBQ3RCLFdBQUssUUFBUSxTQUFTLEtBQUssY0FBYyxNQUFNO0FBQzNDLGtCQUFVLEtBQUssUUFBUyxFQUNuQixLQUFLLE9BQUssS0FBSyxJQUFJLEtBQUssY0FBZSxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUN0RCxNQUFNLFNBQU8sS0FBSyxTQUFTLEtBQUssU0FBUyxHQUFHLENBQUM7QUFBQSxNQUN0RCxDQUFDO0FBQUEsSUFDTDtBQUFBLEVBQ0o7QUFBQSxFQUVBLGFBQWE7QUFDVCxRQUFJLEtBQUs7QUFDTDtBQUVKLFNBQUssU0FBUyxXQUFXO0FBQUEsTUFDckIsS0FBSyxLQUFLO0FBQUEsTUFDVixLQUFLLFNBQU8sS0FBSyxJQUFJLEtBQUssZUFBZ0IsS0FBSyxLQUFLLElBQUksQ0FBQyxDQUFDO0FBQUEsTUFDMUQsS0FBSyxTQUFPLEtBQUssU0FBUyxLQUFLLFNBQVMsR0FBRztBQUFBLElBQy9DLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFQSxXQUFXO0FBQ1AsU0FBSyxPQUFPLE9BQU87QUFDbkIsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFBQSxFQUVBLFlBQVk7QUFDUixTQUFLLFFBQVEsS0FBSztBQUNsQixXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUFBLEVBRUEsWUFBWTtBQUFFLFdBQU8sQ0FBQyxDQUFDLEtBQUs7QUFBQSxFQUFNO0FBQUEsRUFDbEMsYUFBYTtBQUFFLFdBQU8sQ0FBQyxDQUFDLEtBQUs7QUFBQSxFQUFPO0FBQUEsRUFFcEMsT0FBTztBQUNILFNBQUssU0FBUyxLQUFLLFNBQVM7QUFBQSxFQUNoQztBQUFBLEVBRUEsVUFBVSxVQUFzQjtBQUM1QixTQUFLLFNBQVMsUUFBUSxXQUFXLFFBQVE7QUFDekMsV0FBTztBQUFBLEVBQ1g7QUFBQSxFQUVBLFFBQVEsVUFBaUM7QUFDckMsV0FBTyxLQUFLO0FBQ1osU0FBSyxTQUFTLFFBQVEsU0FBUyxDQUFDLEdBQUcsUUFBUSxTQUFTLEdBQUcsQ0FBQztBQUN4RCxXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsVUFBVSxVQUE4QjtBQUNwQyxVQUFNLEtBQUssS0FBSyxTQUFTLFFBQVEsV0FBVyxNQUFNO0FBQzlDLGVBQVMsS0FBSyxJQUFJLENBQUM7QUFBQSxJQUN2QixDQUFDO0FBQ0QsV0FBTyxNQUFNLEtBQUssU0FBUyxXQUFXLEVBQUU7QUFBQSxFQUM1QztBQUFBLEVBYUEsS0FDSUMsV0FDQUMsT0FDQSxZQUE0QyxTQUFPLEtBQ3JEO0FBQ0UsU0FBSyxTQUFTO0FBQ2QsU0FBSyxlQUFlRDtBQUNwQixTQUFLLGdCQUFnQjtBQUNyQixRQUFJLE9BQU9DLFVBQVMsWUFBWTtBQUM1QixXQUFLLFNBQVNBO0FBQ2QsYUFBTyxLQUFLO0FBQUEsSUFDaEIsT0FBTztBQUNILFdBQUssV0FBV0E7QUFDaEIsYUFBTyxLQUFLO0FBQUEsSUFDaEI7QUFDQSxTQUFLLFVBQVU7QUFDZixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsTUFDSUEsT0FDQSxZQUE0QyxTQUFPLEtBQ3JEO0FBQ0UsU0FBSyxVQUFVO0FBQ2YsU0FBSyxZQUFZQTtBQUNqQixTQUFLLGlCQUFpQjtBQUN0QixTQUFLLFdBQVc7QUFDaEIsV0FBTztBQUFBLEVBQ1g7QUFBQSxFQWFBLFFBQ0ksTUFDQSxTQUNBLFVBQ0Y7QUFDRSxVQUFNLElBQUksT0FBTyxZQUFZLGFBQWEsVUFBVSxhQUFhLE1BQU0sS0FBSyxJQUFJO0FBQ2hGLFVBQU0sTUFBTSxDQUFDLFFBQXFCLFNBQWdCLEtBQUssSUFBSSxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUM7QUFFMUUsUUFBSSxNQUFNLFFBQVEsSUFBSSxHQUFHO0FBQ3JCLGlCQUFXLE9BQU8sTUFBTTtBQUNwQixjQUFNLENBQUMsR0FBRyxDQUFDLElBQUk7QUFDZixjQUFNLEtBQUssRUFBRSxRQUFRLEdBQUcsR0FBRztBQUMzQixhQUFLLFVBQVUsTUFBTSxFQUFFLFdBQVcsRUFBRSxDQUFDO0FBQUEsTUFDekM7QUFBQSxJQUNKLE9BQU87QUFDSCxVQUFJLE9BQU8sWUFBWSxVQUFVO0FBQzdCLGNBQU0sS0FBSyxLQUFLLFFBQVEsU0FBUyxHQUFHO0FBQ3BDLGFBQUssVUFBVSxNQUFNLEtBQUssV0FBVyxFQUFFLENBQUM7QUFBQSxNQUM1QztBQUFBLElBQ0o7QUFFQSxXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsT0FBTyxPQU1MLE1BQVksS0FBMkIsSUFBSSxTQUFTLE1BQXNCO0FBQ3hFLFVBQU0sU0FBUyxNQUFNLEdBQUcsR0FBRyxLQUFLLElBQUksT0FBSyxFQUFFLElBQUksQ0FBQyxDQUFTO0FBQ3pELFVBQU0sVUFBVSxJQUFJLFNBQVMsT0FBTyxDQUFDO0FBQ3JDLFVBQU0sU0FBUyxLQUFLLElBQUksU0FBTyxJQUFJLFVBQVUsTUFBTSxRQUFRLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztBQUN6RSxZQUFRLFVBQVUsTUFBTSxPQUFPLElBQUksV0FBUyxNQUFNLENBQUMsQ0FBQztBQUNwRCxXQUFPO0FBQUEsRUFDWDtBQUNKO0FBT08sSUFBTSxXQUFXLElBQUksTUFBTSxpQkFBd0I7QUFBQSxFQUN0RCxPQUFPLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxnQkFBZ0IsS0FBSyxDQUFDLENBQUM7QUFDeEQsQ0FBQztBQU1NLElBQU0sRUFBRSxPQUFPLElBQUk7QUFDMUIsSUFBTyxtQkFBUTs7O0FJOU5SLElBQU0sb0JBQW9CLE9BQU8sd0JBQXdCO0FBQ3pELElBQU0sY0FBYyxPQUFPLHdCQUF3QjtBQUVuRCxTQUFTLGNBQWMsT0FBYztBQUN4QyxXQUFTLGFBQWEsTUFBYTtBQUMvQixRQUFJLElBQUk7QUFDUixXQUFPLE1BQU07QUFBQSxNQUFJLFdBQVMsaUJBQWlCLGtCQUNyQyxLQUFLLEdBQUcsSUFDUjtBQUFBLElBQ047QUFBQSxFQUNKO0FBRUEsUUFBTSxXQUFXLE1BQU0sT0FBTyxPQUFLLGFBQWEsZUFBTztBQUV2RCxNQUFJLFNBQVMsV0FBVztBQUNwQixXQUFPO0FBRVgsTUFBSSxTQUFTLFdBQVc7QUFDcEIsV0FBTyxTQUFTLENBQUMsRUFBRSxHQUFHLFNBQVM7QUFFbkMsU0FBTyxpQkFBUyxPQUFPLFVBQVUsU0FBUyxFQUFFO0FBQ2hEO0FBRU8sU0FBUyxRQUFRLEtBQVUsTUFBYyxPQUFZO0FBQ3hELE1BQUk7QUFDQSxVQUFNLFNBQVMsT0FBTyxTQUFTLElBQUksQ0FBQztBQUNwQyxRQUFJLE9BQU8sSUFBSSxNQUFNLE1BQU07QUFDdkIsYUFBTyxJQUFJLE1BQU0sRUFBRSxLQUFLO0FBRTVCLFdBQVEsSUFBSSxJQUFJLElBQUk7QUFBQSxFQUN4QixTQUFTLE9BQU87QUFDWixZQUFRLE1BQU0sMkJBQTJCLElBQUksUUFBUSxHQUFHLEtBQUssS0FBSztBQUFBLEVBQ3RFO0FBQ0o7QUEyQk8sU0FBUyxVQUFxRixRQUFnQixRQUFhO0FBRTlILE1BQUksRUFBRSxPQUFPLE9BQU8sV0FBVyxDQUFDLEdBQUcsR0FBRyxNQUFNLElBQUk7QUFFaEQsTUFBSSxvQkFBb0IsaUJBQVM7QUFDN0IsZUFBVyxDQUFDLFFBQVE7QUFBQSxFQUN4QjtBQUVBLE1BQUksT0FBTztBQUNQLGFBQVMsUUFBUSxLQUFLO0FBQUEsRUFDMUI7QUFHQSxhQUFXLENBQUMsS0FBSyxLQUFLLEtBQUssT0FBTyxRQUFRLEtBQUssR0FBRztBQUM5QyxRQUFJLFVBQVUsUUFBVztBQUNyQixhQUFPLE1BQU0sR0FBRztBQUFBLElBQ3BCO0FBQUEsRUFDSjtBQUdBLFFBQU0sV0FBMEMsT0FDM0MsS0FBSyxLQUFLLEVBQ1YsT0FBTyxDQUFDLEtBQVUsU0FBUztBQUN4QixRQUFJLE1BQU0sSUFBSSxhQUFhLGlCQUFTO0FBQ2hDLFlBQU0sVUFBVSxNQUFNLElBQUk7QUFDMUIsYUFBTyxNQUFNLElBQUk7QUFDakIsYUFBTyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sT0FBTyxDQUFDO0FBQUEsSUFDbkM7QUFDQSxXQUFPO0FBQUEsRUFDWCxHQUFHLENBQUMsQ0FBQztBQUdULFFBQU0sYUFBd0QsT0FDekQsS0FBSyxLQUFLLEVBQ1YsT0FBTyxDQUFDLEtBQVUsUUFBUTtBQUN2QixRQUFJLElBQUksV0FBVyxJQUFJLEdBQUc7QUFDdEIsWUFBTSxNQUFNLFNBQVMsR0FBRyxFQUFFLE1BQU0sR0FBRyxFQUFFLE1BQU0sQ0FBQyxFQUFFLEtBQUssR0FBRztBQUN0RCxZQUFNLFVBQVUsTUFBTSxHQUFHO0FBQ3pCLGFBQU8sTUFBTSxHQUFHO0FBQ2hCLGFBQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLE9BQU8sQ0FBQztBQUFBLElBQ2xDO0FBQ0EsV0FBTztBQUFBLEVBQ1gsR0FBRyxDQUFDLENBQUM7QUFHVCxRQUFNLGlCQUFpQixjQUFjLFNBQVMsS0FBSyxRQUFRLENBQUM7QUFDNUQsTUFBSSwwQkFBMEIsaUJBQVM7QUFDbkMsV0FBTyxXQUFXLEVBQUUsZUFBZSxJQUFJLENBQUM7QUFDeEMsV0FBTyxRQUFRLFdBQVcsZUFBZSxVQUFVLENBQUMsTUFBTTtBQUN0RCxhQUFPLFdBQVcsRUFBRSxDQUFDO0FBQUEsSUFDekIsQ0FBQyxDQUFDO0FBQUEsRUFDTixPQUFPO0FBQ0gsUUFBSSxlQUFlLFNBQVMsR0FBRztBQUMzQixhQUFPLFdBQVcsRUFBRSxjQUFjO0FBQUEsSUFDdEM7QUFBQSxFQUNKO0FBR0EsYUFBVyxDQUFDLFFBQVEsUUFBUSxLQUFLLFlBQVk7QUFDekMsVUFBTSxNQUFNLE9BQU8sV0FBVyxRQUFRLElBQ2hDLE9BQU8sUUFBUSxLQUFLLElBQUksSUFDeEI7QUFFTixRQUFJLE9BQU8sYUFBYSxZQUFZO0FBQ2hDLGFBQU8sUUFBUSxLQUFLLFFBQVE7QUFBQSxJQUNoQyxPQUFPO0FBQ0gsYUFBTyxRQUFRLEtBQUssTUFBTSxVQUFVLFFBQVEsRUFDdkMsS0FBSyxLQUFLLEVBQUUsTUFBTSxRQUFRLEtBQUssQ0FBQztBQUFBLElBQ3pDO0FBQUEsRUFDSjtBQUdBLGFBQVcsQ0FBQyxNQUFNLE9BQU8sS0FBSyxVQUFVO0FBQ3BDLFFBQUksU0FBUyxXQUFXLFNBQVMsWUFBWTtBQUN6QyxhQUFPLFFBQVEsV0FBVyxRQUFRLFVBQVUsQ0FBQyxNQUFXO0FBQ3BELGVBQU8sV0FBVyxFQUFFLENBQUM7QUFBQSxNQUN6QixDQUFDLENBQUM7QUFBQSxJQUNOO0FBQ0EsV0FBTyxRQUFRLFdBQVcsUUFBUSxVQUFVLENBQUMsTUFBVztBQUNwRCxjQUFRLFFBQVEsTUFBTSxDQUFDO0FBQUEsSUFDM0IsQ0FBQyxDQUFDO0FBQ0YsWUFBUSxRQUFRLE1BQU0sUUFBUSxJQUFJLENBQUM7QUFBQSxFQUN2QztBQUdBLGFBQVcsQ0FBQyxLQUFLLEtBQUssS0FBSyxPQUFPLFFBQVEsS0FBSyxHQUFHO0FBQzlDLFFBQUksVUFBVSxRQUFXO0FBQ3JCLGFBQU8sTUFBTSxHQUFHO0FBQUEsSUFDcEI7QUFBQSxFQUNKO0FBRUEsU0FBTyxPQUFPLFFBQVEsS0FBSztBQUMzQixVQUFRLE1BQU07QUFDZCxTQUFPO0FBQ1g7QUFFQSxTQUFTLGdCQUFnQixNQUF1QztBQUM1RCxTQUFPLENBQUMsT0FBTyxPQUFPLE1BQU0sV0FBVztBQUMzQztBQUVPLFNBQVMsSUFDWkMsUUFDQSxNQUNBLEVBQUUsVUFBVSxHQUFHLE1BQU0sR0FDdkI7QUFDRSxlQUFhLENBQUM7QUFFZCxNQUFJLENBQUMsTUFBTSxRQUFRLFFBQVE7QUFDdkIsZUFBVyxDQUFDLFFBQVE7QUFFeEIsYUFBVyxTQUFTLE9BQU8sT0FBTztBQUVsQyxNQUFJLFNBQVMsV0FBVztBQUNwQixVQUFNLFFBQVEsU0FBUyxDQUFDO0FBQUEsV0FDbkIsU0FBUyxTQUFTO0FBQ3ZCLFVBQU0sV0FBVztBQUVyQixNQUFJLE9BQU8sU0FBUyxVQUFVO0FBQzFCLFFBQUksZ0JBQWdCQSxPQUFNLElBQUksQ0FBQztBQUMzQixhQUFPQSxPQUFNLElBQUksRUFBRSxLQUFLO0FBRTVCLFdBQU8sSUFBSUEsT0FBTSxJQUFJLEVBQUUsS0FBSztBQUFBLEVBQ2hDO0FBRUEsTUFBSSxnQkFBZ0IsSUFBSTtBQUNwQixXQUFPLEtBQUssS0FBSztBQUVyQixTQUFPLElBQUksS0FBSyxLQUFLO0FBQ3pCOzs7QUMvTEEsT0FBTyxTQUFTO0FBQ2hCLE9BQU8sU0FBUztBQUdULElBQU0sT0FBTyxPQUFPLFlBQVk7QUFDdkMsSUFBTSxjQUFjLElBQUksSUFBSTtBQUU1QixTQUFTLGFBQWEsUUFBdUM7QUFDekQsTUFBSSxlQUFlLFVBQVUsT0FBTyxPQUFPLGFBQWEsWUFBWTtBQUNoRSxXQUFPLE9BQU8sVUFBVSxJQUFJLENBQUMsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDO0FBQUEsRUFDeEQ7QUFFQSxRQUFNLFdBQThCLENBQUM7QUFDckMsTUFBSSxLQUFLLE9BQU8sZ0JBQWdCO0FBQ2hDLFNBQU8sT0FBTyxNQUFNO0FBQ2hCLGFBQVMsS0FBSyxFQUFFO0FBQ2hCLFNBQUssR0FBRyxpQkFBaUI7QUFBQSxFQUM3QjtBQUNBLFNBQU87QUFDWDtBQUVBLFNBQVMsYUFBYSxRQUFvQixVQUFpQjtBQUN2RCxhQUFXLFNBQVMsS0FBSyxRQUFRLEVBQUUsSUFBSSxRQUFNLGNBQWMsSUFBSSxTQUN6RCxLQUNBLElBQUksSUFBSSxNQUFNLEVBQUUsU0FBUyxNQUFNLE9BQU8sT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBR3pELGFBQVcsU0FBUyxVQUFVO0FBQzFCLFdBQU87QUFBQSxNQUNIO0FBQUEsTUFDQTtBQUFBLE1BQ0EsUUFBUSxRQUFRLE1BQU0sSUFBSSxJQUFJO0FBQUEsSUFDbEM7QUFBQSxFQUNKO0FBQ0o7QUFPZSxTQUFSLFNBSUwsS0FBc0MsU0FBa0MsQ0FBQyxHQUFHO0FBQzFFLFNBQU8sT0FBTyxJQUFJLFdBQVc7QUFBQSxJQUN6QixDQUFDLFdBQVcsRUFBRSxVQUFpQjtBQUMzQixZQUFNLElBQUk7QUFDVixpQkFBVyxTQUFVLE9BQU8sY0FBYyxDQUFDLEtBQUssYUFBYSxDQUFDLEdBQUk7QUFDOUQsWUFBSSxpQkFBaUIsSUFBSSxRQUFRO0FBQzdCLGdCQUFNLFNBQVM7QUFDZixjQUFJLENBQUMsU0FBUyxTQUFTLEtBQUssS0FBSyxxQkFBcUI7QUFDbEQsa0JBQU0sWUFBWTtBQUFBLFFBQzFCO0FBQUEsTUFDSjtBQUVBLFVBQUksT0FBTyxhQUFhO0FBQ3BCLGVBQU8sWUFBWSxHQUFHLFFBQVE7QUFBQSxNQUNsQyxPQUFPO0FBQ0gscUJBQWEsR0FBRyxRQUFRO0FBQUEsTUFDNUI7QUFBQSxJQUNKO0FBQUEsRUFDSixDQUFDO0FBRUQsU0FBTztBQUFBLElBQ0gsQ0FBQyxJQUFJLElBQUksR0FBRyxDQUNSLFFBQWdELENBQUMsTUFDOUMsYUFDTTtBQUNULFlBQU0sU0FBUyxJQUFJLElBQUksYUFBYSxRQUFRLEVBQUUsU0FBUyxNQUFNLFFBQVEsSUFBSSxDQUFDLENBQUM7QUFFM0UsVUFBSSxhQUFhLE9BQU87QUFDcEIsZUFBTyxNQUFNO0FBQUEsTUFDakI7QUFFQSxVQUFJLE1BQU0sbUJBQW1CO0FBQ3pCLGVBQU8sT0FBTyxRQUFRLEVBQUUsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDbkQsZUFBTyxNQUFNO0FBQUEsTUFDakI7QUFFQSxVQUFJLE1BQU0sTUFBTTtBQUNaLGVBQU8sT0FBTyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEdBQUcsTUFBTSxLQUFLLENBQUM7QUFDNUMsZUFBTyxNQUFNO0FBQUEsTUFDakI7QUFFQSxVQUFJLFNBQVMsU0FBUyxHQUFHO0FBQ3JCLGVBQU8sT0FBTyxPQUFPLEVBQUUsU0FBUyxDQUFDO0FBQUEsTUFDckM7QUFFQSxhQUFPLFVBQVUsUUFBZSxpQkFBaUIsUUFBUSxLQUFZLENBQUM7QUFBQSxJQUMxRTtBQUFBLEVBQ0osRUFBRSxJQUFJLElBQUk7QUFDZDtBQWdEQSxTQUFTLGlCQUFvQixRQUFvQjtBQUFBLEVBQzdDO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQSxHQUFHO0FBQ1AsR0FBb0M7QUFDaEMsTUFBSSxnQkFBZ0IsY0FBYztBQUM5QixVQUFNLFFBQVEsSUFBSSxJQUFJO0FBQ3RCLFdBQU8sZUFBZSxLQUFLO0FBRTNCLFFBQUk7QUFDQSxZQUFNLFFBQVEsU0FBUyxNQUFNLGFBQWEsTUFBTSxDQUFDO0FBRXJELFFBQUk7QUFDQSxZQUFNLFFBQVEsU0FBUyxNQUFNLGFBQWEsTUFBTSxDQUFDO0FBQUEsRUFDekQ7QUFFQSxNQUFJLGdCQUFnQixpQkFBaUIsZUFBZTtBQUNoRCxVQUFNLE1BQU0sSUFBSSxJQUFJO0FBQ3BCLFdBQU8sZUFBZSxHQUFHO0FBRXpCLFFBQUk7QUFDQSxVQUFJLFFBQVEsZUFBZSxDQUFDLEdBQUcsS0FBSyxNQUFNLFVBQVUsYUFBYSxRQUFRLEtBQUssTUFBTSxLQUFLLENBQUM7QUFFOUYsUUFBSTtBQUNBLFVBQUksUUFBUSxnQkFBZ0IsQ0FBQyxHQUFHLEtBQUssTUFBTSxVQUFVLGNBQWMsUUFBUSxLQUFLLE1BQU0sS0FBSyxDQUFDO0FBRWhHLFFBQUk7QUFDQSxVQUFJLFFBQVEsYUFBYSxDQUFDLEdBQUcsVUFBVSxjQUFjLFFBQVEsS0FBSyxDQUFDO0FBQUEsRUFDM0U7QUFFQSxNQUFJLFlBQVksbUJBQW1CLGtCQUFrQjtBQUNqRCxVQUFNLFNBQVMsSUFBSSxJQUFJO0FBQ3ZCLFdBQU8sZUFBZSxNQUFNO0FBRTVCLFdBQU8sUUFBUSxTQUFTLENBQUMsR0FBRyxVQUFVO0FBQ2xDLFVBQUksTUFBTSxlQUFlLE1BQU0sSUFBSSxVQUFVLGNBQWM7QUFDdkQsMEJBQWtCLFFBQVEsS0FBd0I7QUFBQSxNQUN0RDtBQUVBLFVBQUksTUFBTSxlQUFlLE1BQU0sSUFBSSxVQUFVLGdCQUFnQjtBQUN6RCwyQkFBbUIsUUFBUSxLQUF3QjtBQUFBLE1BQ3ZEO0FBRUEsaUJBQVcsUUFBUSxLQUFLO0FBQUEsSUFDNUIsQ0FBQztBQUFBLEVBQ0w7QUFFQSxNQUFJLFlBQVksZ0JBQWdCLGNBQWM7QUFDMUMsVUFBTSxRQUFRLElBQUksSUFBSTtBQUN0QixXQUFPLGVBQWUsS0FBSztBQUUzQixRQUFJO0FBQ0EsWUFBTSxRQUFRLFNBQVMsQ0FBQyxHQUFHLEdBQUcsTUFBTSxhQUFhLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFFbEUsUUFBSTtBQUNBLFlBQU0sUUFBUSxTQUFTLE1BQU0sYUFBYSxNQUFNLENBQUM7QUFFckQsUUFBSTtBQUNBLFlBQU0sUUFBUSxVQUFVLENBQUMsR0FBRyxHQUFHLE1BQU0sU0FBUyxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBQUEsRUFDbkU7QUFFQSxNQUFJLFlBQVksb0JBQW9CO0FBQ2hDLFVBQU0sU0FBUyxJQUFJLElBQUk7QUFDdkIsV0FBTyxRQUFRLElBQUksMkJBQTJCLFlBQVksSUFBSSwyQkFBMkI7QUFDekYsV0FBTyxlQUFlLE1BQU07QUFFNUIsUUFBSTtBQUNBLGFBQU8sUUFBUSxVQUFVLENBQUMsR0FBRyxHQUFHLE1BQU0sU0FBUyxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBRWhFLFFBQUk7QUFDQSxhQUFPLFFBQVEsY0FBYyxDQUFDLEdBQUcsR0FBRyxNQUFNLG1CQUFtQixRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBQUEsRUFDbEY7QUFFQSxTQUFPO0FBQ1g7OztBQ25PQSxPQUFPLFVBQVU7QUFDakIsT0FBT0MsVUFBUztBQUNoQixPQUFPQyxZQUFXOzs7QUNJbEIsSUFBTUMsWUFBVyxDQUFDLFFBQWdCLElBQzdCLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUVqQixlQUFlLFNBQVksS0FBOEJDLFFBQXVCO0FBQzVFLFNBQU8sSUFBSSxLQUFLLE9BQUtBLE9BQU0sRUFBRSxPQUFPLENBQUMsRUFBRSxNQUFNLE1BQU0sTUFBTTtBQUM3RDtBQUVBLFNBQVMsTUFBd0IsT0FBVSxNQUFnQztBQUN2RSxTQUFPLGVBQWUsT0FBTyxNQUFNO0FBQUEsSUFDL0IsTUFBTTtBQUFFLGFBQU8sS0FBSyxPQUFPRCxVQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUFFO0FBQUEsRUFDbkQsQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sWUFBWSxNQUFNO0FBQ2hFLFFBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsUUFBTSxZQUFZLFdBQVcsVUFBVTtBQUN2QyxRQUFNLFlBQVksV0FBVyxZQUFZO0FBQzdDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsT0FBTyxNQUFNO0FBQ3hELFFBQU0sT0FBTyxXQUFXLFNBQVM7QUFDckMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLHFCQUFxQixHQUFHLENBQUMsRUFBRSxTQUFTLFdBQVcsT0FBTyxNQUFNO0FBQzlFLFFBQU0sUUFBUSxXQUFXLE9BQU87QUFDaEMsUUFBTSxVQUFVLFdBQVcsVUFBVTtBQUNyQyxRQUFNLFVBQVUsV0FBVyxTQUFTO0FBQ3BDLFFBQU0sT0FBTyxXQUFXLE9BQU87QUFDbkMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG9CQUFvQixHQUFHLENBQUMsRUFBRSxVQUFBRSxXQUFVLFNBQVMsVUFBVSxNQUFNO0FBQy9FLFFBQU1BLFVBQVMsV0FBVyxPQUFPO0FBQ2pDLFFBQU1BLFVBQVMsV0FBVyxVQUFVO0FBQ3BDLFFBQU1BLFVBQVMsV0FBVyxZQUFZO0FBQ3RDLFFBQU1BLFVBQVMsV0FBVyxTQUFTO0FBQ25DLFFBQU0sUUFBUSxXQUFXLGdCQUFnQjtBQUN6QyxRQUFNLFFBQVEsV0FBVyxpQkFBaUI7QUFDMUMsUUFBTSxVQUFVLFdBQVcsU0FBUztBQUN4QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLE9BQU8sT0FBTyxNQUFNO0FBQzdELFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxPQUFPLFdBQVcsdUJBQXVCO0FBQy9DLFFBQU0sT0FBTyxXQUFXLHFCQUFxQjtBQUM3QyxRQUFNLE9BQU8sV0FBVyxzQkFBc0I7QUFDOUMsUUFBTSxPQUFPLFdBQVcsb0JBQW9CO0FBQzVDLFFBQU0sT0FBTyxXQUFXLFVBQVU7QUFDdEMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG1CQUFtQixHQUFHLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDdEQsUUFBTSxLQUFLLFdBQVcsZUFBZTtBQUNyQyxRQUFNLEtBQUssV0FBVyxjQUFjO0FBQ3hDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxrQkFBa0IsR0FBRyxDQUFDLEVBQUUsUUFBUSxhQUFhLE1BQU07QUFDckUsUUFBTSxPQUFPLFdBQVcsZUFBZTtBQUN2QyxRQUFNLGFBQWEsV0FBVyxTQUFTO0FBQzNDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyx5QkFBeUIsR0FBRyxDQUFDLEVBQUUsY0FBYyxNQUFNO0FBQ3JFLFFBQU0sY0FBYyxXQUFXLFNBQVM7QUFDNUMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGNBQWMsR0FBRyxDQUFDLEVBQUUsSUFBSSxPQUFPLE9BQU8sTUFBTSxVQUFVLE9BQU8sTUFBTTtBQUNyRixRQUFNLEdBQUcsV0FBVyxPQUFPO0FBQzNCLFFBQU0sR0FBRyxXQUFXLFNBQVM7QUFDN0IsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE1BQU0sV0FBVyxXQUFXO0FBQ2xDLFFBQU0sTUFBTSxXQUFXLGFBQWE7QUFDcEMsUUFBTSxNQUFNLFdBQVcsVUFBVTtBQUNqQyxRQUFNLE1BQU0sV0FBVyxTQUFTO0FBQ2hDLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsV0FBVztBQUNsQyxRQUFNLE1BQU0sV0FBVyxPQUFPO0FBQzlCLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLFNBQVMsV0FBVyxRQUFRO0FBQ2xDLFFBQU0sS0FBSyxXQUFXLFVBQVU7QUFDaEMsUUFBTSxPQUFPLFdBQVcsVUFBVTtBQUNsQyxRQUFNLE9BQU8sV0FBVyxRQUFRO0FBQ3BDLENBQUM7OztBQ3ZGRCxTQUFTLDJCQUEyQjtBQUNwQyxTQUFTLE1BQU0sbUJBQW1CO0FBQ2xDLE9BQU8sUUFBUTtBQUNmLE9BQU9DLGNBQWE7QUF3Q2IsU0FBUyxNQUFNQyxNQUFrQjtBQUNwQyxTQUFPLElBQUssTUFBTSxnQkFBZ0JBLEtBQUk7QUFBQSxJQUNsQyxPQUFPO0FBQUUsTUFBQUQsU0FBUSxjQUFjLEVBQUUsV0FBVyxVQUFVLEdBQUcsSUFBVztBQUFBLElBQUU7QUFBQSxJQUV0RSxLQUFLLE1BQTRCO0FBQzdCLGFBQU8sSUFBSSxRQUFRLENBQUMsS0FBSyxRQUFRO0FBQzdCLFlBQUk7QUFDQSxnQkFBTSxLQUFLLFNBQVM7QUFBQSwwQkFDZCxLQUFLLFNBQVMsR0FBRyxJQUFJLE9BQU8sVUFBVSxJQUFJLEdBQUc7QUFBQSx1QkFDaEQ7QUFDSCxhQUFHLEVBQUUsRUFBRSxLQUFLLEdBQUcsRUFBRSxNQUFNLEdBQUc7QUFBQSxRQUM5QixTQUFTLE9BQU87QUFDWixjQUFJLEtBQUs7QUFBQSxRQUNiO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUFBLElBSUEsY0FBYyxLQUFhLE1BQWtDO0FBQ3pELFVBQUksT0FBTyxLQUFLLG1CQUFtQixZQUFZO0FBQzNDLGFBQUssZUFBZSxLQUFLLENBQUMsYUFBYTtBQUNuQyxhQUFHO0FBQUEsWUFBVztBQUFBLFlBQU0sT0FBTyxRQUFRO0FBQUEsWUFBRyxDQUFDLEdBQUcsUUFDdEMsR0FBRyxrQkFBa0IsR0FBRztBQUFBLFVBQzVCO0FBQUEsUUFDSixDQUFDO0FBQUEsTUFDTCxPQUFPO0FBQ0gsY0FBTSxjQUFjLEtBQUssSUFBSTtBQUFBLE1BQ2pDO0FBQUEsSUFDSjtBQUFBLElBRUEsVUFBVSxPQUFlLFFBQVEsT0FBTztBQUNwQyxZQUFNLFVBQVUsT0FBTyxLQUFLO0FBQUEsSUFDaEM7QUFBQSxJQUVBLEtBQUssTUFBcUI7QUFDdEIsWUFBTSxLQUFLO0FBQ1gsV0FBSyxRQUFRLENBQUM7QUFBQSxJQUNsQjtBQUFBLElBRUEsTUFBTSxFQUFFLGdCQUFnQixLQUFLLE1BQU0sTUFBTSxRQUFRLE9BQU8sR0FBRyxJQUFJLElBQVksQ0FBQyxHQUFHO0FBQzNFLFlBQU0sTUFBTTtBQUVaLGlCQUFXLE1BQU07QUFDYixjQUFNLG1CQUFtQixJQUFJLFlBQVksbUJBQW1CO0FBQzVELGFBQUssQ0FBQztBQUFBLE1BQ1Y7QUFFQSxhQUFPLE9BQU8sTUFBTSxHQUFHO0FBQ3ZCLDBCQUFvQixJQUFJLFlBQVk7QUFFcEMsV0FBSyxpQkFBaUI7QUFDdEIsVUFBSSxRQUFRLFlBQVksTUFBTTtBQUMxQixlQUFPLEdBQUcsV0FBVztBQUFBLE1BQ3pCLENBQUM7QUFFRCxVQUFJO0FBQ0EsWUFBSSxlQUFlO0FBQUEsTUFDdkIsU0FBUyxPQUFPO0FBQ1osZUFBTyxPQUFPLFNBQU8sR0FBRyxhQUFhLElBQUksY0FBYyxHQUFHLEdBQUksR0FBRyxXQUFXO0FBQUEsTUFDaEY7QUFFQSxVQUFJO0FBQ0EsYUFBSyxVQUFVLEtBQUssS0FBSztBQUU3QixVQUFJO0FBQ0EsWUFBSSxVQUFVLEtBQUs7QUFFdkIsZUFBUztBQUNULFVBQUk7QUFDQSxZQUFJLEtBQUs7QUFFYixVQUFJLFNBQVMsQ0FBQyxDQUFDO0FBQUEsSUFDbkI7QUFBQSxFQUNKO0FBQ0o7OztBRmxIQUUsS0FBSSxLQUFLO0FBSVQsS0FBSyxTQUFTLFlBQVk7QUFJMUIsTUFBTSxPQUFPLG9CQUFvQixFQUM1QixLQUFLLENBQUMsRUFBRSxTQUFTLElBQUksTUFBTSxJQUFJLEtBQUssQ0FBQyxFQUNyQyxNQUFNLE1BQU0sTUFBTTtBQUV2QixJQUFPLGNBQVEsTUFBTUMsT0FBTSxXQUFXOzs7QUdqQnRDLE9BQU9DLFlBQVc7QUFDbEIsT0FBT0MsVUFBUztBQUdoQixTQUFTLE9BQU8sVUFBaUI7QUFDN0IsU0FBTyxTQUFTLEtBQUssUUFBUSxFQUFFLElBQUksUUFBTSxjQUFjQyxLQUFJLFNBQ3JELEtBQ0EsSUFBSUEsS0FBSSxNQUFNLEVBQUUsU0FBUyxNQUFNLE9BQU8sT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzdEO0FBR0EsT0FBTyxlQUFlQyxPQUFNLElBQUksV0FBVyxZQUFZO0FBQUEsRUFDbkQsTUFBTTtBQUFFLFdBQU8sS0FBSyxhQUFhO0FBQUEsRUFBRTtBQUFBLEVBQ25DLElBQUksR0FBRztBQUFFLFNBQUssYUFBYSxDQUFDO0FBQUEsRUFBRTtBQUNsQyxDQUFDO0FBR00sSUFBTSxNQUFNLFNBQWdEQSxPQUFNLEtBQUs7QUFBQSxFQUMxRSxZQUFZLE1BQU07QUFBRSxXQUFPLEtBQUssYUFBYTtBQUFBLEVBQUU7QUFBQSxFQUMvQyxZQUFZLE1BQU0sVUFBVTtBQUFFLFdBQU8sS0FBSyxhQUFhLE9BQU8sUUFBUSxDQUFDO0FBQUEsRUFBRTtBQUM3RSxDQUFDO0FBUU0sSUFBTSxTQUFTLFNBQWlFRCxLQUFJLE1BQU07QUFJMUYsSUFBTSxZQUFZLFNBQXdEQSxLQUFJLFdBQVc7QUFBQSxFQUM1RixZQUFZLEtBQUs7QUFDYixXQUFPLENBQUMsSUFBSSxhQUFhLElBQUksY0FBYyxJQUFJLFNBQVM7QUFBQSxFQUM1RDtBQUFBLEVBQ0EsWUFBWSxLQUFLLFVBQVU7QUFDdkIsVUFBTSxLQUFLLE9BQU8sUUFBUTtBQUMxQixRQUFJLGNBQWMsR0FBRyxDQUFDLEtBQUssSUFBSUEsS0FBSTtBQUNuQyxRQUFJLGVBQWUsR0FBRyxDQUFDLEtBQUssSUFBSUEsS0FBSTtBQUNwQyxRQUFJLFlBQVksR0FBRyxDQUFDLEtBQUssSUFBSUEsS0FBSTtBQUFBLEVBQ3JDO0FBQ0osQ0FBQztBQVlNLElBQU0sUUFBUSxTQUE4REEsS0FBSSxPQUFPO0FBQUEsRUFDMUYsY0FBYztBQUFFLFdBQU8sQ0FBQztBQUFBLEVBQUU7QUFDOUIsQ0FBQztBQUlNLElBQU0sUUFBUSxTQUFnREEsS0FBSSxPQUFPO0FBQUEsRUFDNUUsY0FBYztBQUFFLFdBQU8sQ0FBQztBQUFBLEVBQUU7QUFDOUIsQ0FBQztBQUlNLElBQU0sUUFBUSxTQUFnREEsS0FBSSxPQUFPO0FBQUEsRUFDNUUsY0FBYztBQUFFLFdBQU8sQ0FBQztBQUFBLEVBQUU7QUFBQSxFQUMxQixZQUFZLE1BQU0sVUFBVTtBQUFFLFNBQUssUUFBUSxPQUFPLFFBQVE7QUFBQSxFQUFFO0FBQ2hFLENBQUM7QUFJTSxJQUFNLFdBQVcsU0FBc0RBLEtBQUksVUFBVTtBQUFBLEVBQ3hGLGNBQWM7QUFBRSxXQUFPLENBQUM7QUFBQSxFQUFFO0FBQzlCLENBQUM7QUFNTSxJQUFNLFVBQVUsU0FBb0RBLEtBQUksU0FBUztBQUFBLEVBQ3BGLFlBQVksTUFBTTtBQUNkLFVBQU0sV0FBOEIsQ0FBQztBQUNyQyxRQUFJLEtBQUssS0FBSyxnQkFBZ0I7QUFDOUIsV0FBTyxPQUFPLE1BQU07QUFDaEIsZUFBUyxLQUFLLEVBQUU7QUFDaEIsV0FBSyxHQUFHLGlCQUFpQjtBQUFBLElBQzdCO0FBRUEsV0FBTyxTQUFTLE9BQU8sQ0FBQUUsUUFBTUEsUUFBTyxLQUFLLEtBQUs7QUFBQSxFQUNsRDtBQUFBLEVBQ0EsWUFBWSxNQUFNLFVBQVU7QUFDeEIsZUFBVyxTQUFTLE9BQU8sUUFBUSxHQUFHO0FBQ2xDLFlBQU0sUUFBUSxRQUFRLFFBQ2YsTUFBTSxJQUFJLEVBQWEsTUFBTSxLQUFLLElBQ25DLENBQUM7QUFFUCxVQUFJLE1BQU0sU0FBUyxTQUFTLEdBQUc7QUFDM0IsYUFBSyxZQUFZLEtBQUs7QUFBQSxNQUMxQixPQUFPO0FBQ0gsYUFBSyxVQUFVLEtBQUs7QUFBQSxNQUN4QjtBQUVBLFdBQUssb0JBQW9CLE9BQU8sTUFBTSxTQUFTLFNBQVMsQ0FBQztBQUN6RCxXQUFLLGlCQUFpQixPQUFPLE1BQU0sU0FBUyxNQUFNLENBQUM7QUFBQSxJQUN2RDtBQUFBLEVBQ0o7QUFDSixDQUFDO0FBSU0sSUFBTSxXQUFXLFNBQXNERixLQUFJLFFBQVE7QUFRbkYsSUFBTSxTQUFTLFNBQXFFQyxPQUFNLFFBQVE7QUFBQSxFQUNyRyxjQUFjO0FBQUUsV0FBTyxDQUFDO0FBQUEsRUFBRTtBQUM5QixDQUFDO0FBSU0sSUFBTSxRQUFRLFNBQWdERCxLQUFJLE9BQU87QUFBQSxFQUM1RSxZQUFZLE1BQU0sVUFBVTtBQUN4QixlQUFXLFNBQVMsT0FBTyxRQUFRLEdBQUc7QUFDbEMsVUFBSSxNQUFNLFFBQVEsTUFBTSxNQUFNLFFBQVEsTUFBTTtBQUN4QyxhQUFLLFVBQVUsT0FBTyxNQUFNLElBQUk7QUFBQSxNQUNwQyxPQUFPO0FBQ0gsYUFBSyxVQUFVLEtBQUs7QUFBQSxNQUN4QjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQ0osQ0FBQztBQUlNLElBQU0sU0FBUyxTQUFrREEsS0FBSSxRQUFRO0FBQUEsRUFDaEYsY0FBYztBQUFFLFdBQU8sQ0FBQztBQUFBLEVBQUU7QUFDOUIsQ0FBQztBQUlNLElBQU0sU0FBUyxTQUFzREMsT0FBTSxNQUFNO0FBSWpGLElBQU0sYUFBYSxTQUEwREQsS0FBSSxZQUFZO0FBQUEsRUFDaEcsWUFBWSxNQUFNO0FBQUUsV0FBTyxDQUFDLEtBQUssU0FBUyxLQUFLLEtBQUs7QUFBQSxFQUFFO0FBQUEsRUFDdEQsWUFBWSxNQUFNLFVBQVU7QUFDeEIsZUFBVyxTQUFTLE9BQU8sUUFBUSxHQUFHO0FBQ2xDLFVBQUksaUJBQWlCQSxLQUFJLFNBQVM7QUFDOUIsYUFBSyxZQUFZLEtBQUs7QUFBQSxNQUMxQixPQUFPO0FBQ0gsYUFBSyxVQUFVLEtBQUs7QUFBQSxNQUN4QjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQ0osQ0FBQztBQUlNLElBQU0sVUFBVSxTQUFvREEsS0FBSSxPQUFPOzs7QUNuS3RGLElBQU0sU0FBTixNQUFhO0FBQUEsRUFBYjtBQUNJLFNBQU8sVUFBVUcsS0FBSSxPQUFPLGNBQWMsV0FBVyxJQUFJO0FBRXpELFNBQU8sVUFBVUEsS0FBSSxPQUFPLGNBQWMsV0FBVyxJQUFJO0FBRXpELFNBQU8sY0FBY0EsS0FBSSxPQUFPLGNBQWMsZUFBZSxJQUFJO0FBQUE7QUFDckU7QUFFQSxJQUFPLGlCQUFROzs7QUNWZixPQUFPLG1CQUFtQjs7O0FDQzFCLFNBQW9CLFdBQVhDLGdCQUEwQjs7O0FDRG5DLE9BQU9DLFlBQVc7QUFDbEIsT0FBTyxTQUFTO0FBb0NULFNBQVMsWUFDWixNQUNBLFVBQ2U7QUFDZixTQUFPQyxPQUFNLGFBQWEsTUFBTSxDQUFDLE1BQWMsVUFBZ0M7QUFDM0UsYUFBUyxNQUFNLEtBQUs7QUFBQSxFQUN4QixDQUFDO0FBQ0w7OztBQzVDQSxPQUFPQyxjQUFhO0FBRXBCLFNBQW9CLFdBQVhDLGdCQUF1QjtBQUdoQyxJQUFNLE9BQU8sT0FBTyxNQUFNO0FBQzFCLElBQU0sT0FBTyxPQUFPLE1BQU07QUFFMUIsSUFBTSxFQUFFLFdBQVcsV0FBVyxJQUFJQzs7O0FISmxDLElBQU0sV0FBTixNQUFrQztBQUFBLEVBSzlCLGNBQWM7QUFGZCxTQUFRLFlBQWlDLG9CQUFJLElBQUk7QUFHN0MsU0FBSyxXQUFXLGNBQWMsWUFBWTtBQUFBLEVBQzlDO0FBQUEsRUFFQSxNQUFhLFFBQVE7QUFDakIsU0FBSyxVQUFVLElBQUksVUFBVSxLQUFLLFNBQVMsUUFBUSxVQUFVLEtBQUssU0FBUyxLQUFLLElBQUksQ0FBQyxDQUFDO0FBQUEsRUFDMUY7QUFBQSxFQUVBLE1BQWEsT0FBTztBQUNoQixTQUFLLFVBQVUsUUFBUSxDQUFDLElBQUksVUFBVTtBQUNsQyxXQUFLLFNBQVMsV0FBVyxFQUFFO0FBQzNCLFdBQUssVUFBVSxPQUFPLEtBQUs7QUFBQSxJQUMvQixDQUFDO0FBQUEsRUFDTDtBQUFBLEVBRVEsU0FBUyxTQUFpQyxNQUFjO0FBQzVELFlBQVEsSUFBSSxpQkFBaUIsSUFBSTtBQUVqQyxRQUFJLFNBQVMsVUFBVTtBQUNuQixnQkFBVSx5REFBeUQ7QUFDbkU7QUFBQSxJQUNKO0FBRUEsY0FBVSx1REFBdUQ7QUFBQSxFQUNyRTtBQUNKO0FBRUEsSUFBTyxtQkFBUTs7O0FJaENmLElBQU0sUUFBTixNQUErQjtBQUFBLEVBQS9CO0FBQ0ksU0FBTyxNQUFjLEdBQUdDLFNBQUssYUFBYSxDQUFDO0FBRTNDLFNBQU8sU0FBaUIsR0FBRyxLQUFLLEdBQUc7QUFFbkMsU0FBTyxPQUFlLEdBQUcsS0FBSyxHQUFHO0FBRWpDLFNBQU8sTUFBYyxHQUFHLEtBQUssR0FBRztBQUFBO0FBQUEsRUFJaEMsTUFBYSxRQUFRO0FBQ2pCLFVBQU0sS0FBSyxZQUFZLEVBQUUsTUFBTSxRQUFRLEtBQUs7QUFFNUMsU0FBSyxXQUFXO0FBRWhCLFNBQUssb0JBQW9CO0FBQUEsRUFDN0I7QUFBQSxFQUVBLE1BQWEsT0FBTztBQUNoQixRQUFJLEtBQUssYUFBYTtBQUNsQixXQUFLLFlBQVksT0FBTztBQUN4QixXQUFLLGNBQWM7QUFBQSxJQUN2QjtBQUFBLEVBQ0o7QUFBQSxFQUVBLE1BQWMsY0FBYztBQUN4QixVQUFNLE9BQU8sR0FBR0EsU0FBSyxhQUFhLENBQUM7QUFDbkMsVUFBTSxNQUFNLEdBQUdBLFNBQUssYUFBYSxDQUFDO0FBRWxDLFVBQU0sVUFBVSxRQUFRLElBQUksSUFBSSxHQUFHLEVBQUUsRUFBRSxNQUFNLFFBQVEsS0FBSztBQUFBLEVBQzlEO0FBQUEsRUFFUSxhQUFhO0FBQ2pCLFVBQU0sTUFBTSxHQUFHQSxTQUFLLGFBQWEsQ0FBQztBQUVsQyxnQkFBSSxVQUFVLEtBQUssSUFBSTtBQUFBLEVBQzNCO0FBQUEsRUFFUSxzQkFBc0I7QUFDMUIsU0FBSyxjQUFjLFlBQVksS0FBSyxRQUFRLE9BQU8sTUFBTSxVQUFVO0FBQy9ELFVBQUksU0FBUyxJQUFJLGlCQUFpQixTQUFTO0FBQ3ZDLGNBQU0sS0FBSyxZQUFZLEVBQUUsTUFBTSxRQUFRLEtBQUs7QUFFNUMsYUFBSyxXQUFXO0FBQUEsTUFDcEI7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBQ0o7QUFFQSxJQUFPLGdCQUFROzs7QUNuRGYsSUFBTUMsUUFBTixNQUFrRDtBQUFBLEVBRzlDLGNBQWM7QUFDVixTQUFLLFdBQVcsU0FBUyxFQUFFO0FBQUEsRUFDL0I7QUFBQSxFQUVBLE1BQWEsUUFBUTtBQUNqQixTQUFLLEtBQUs7QUFFVixTQUFLLFNBQVMsS0FBSyxLQUFNLEtBQUssUUFBUSxHQUFHLENBQUMsV0FBVztBQUNqRCxhQUFPLE9BQU8sS0FBSztBQUFBLElBQ3ZCLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFQSxNQUFhLE9BQU87QUFDaEIsU0FBSyxTQUFTLEtBQUs7QUFBQSxFQUN2QjtBQUFBLEVBRU8sVUFBVSxVQUFtQztBQUNoRCxXQUFPLEtBQUssU0FBUyxVQUFVLFFBQVE7QUFBQSxFQUMzQztBQUFBLEVBRU8sTUFBTTtBQUNULFdBQU8sS0FBSyxTQUFTLElBQUk7QUFBQSxFQUM3QjtBQUFBLEVBRVEsVUFBVTtBQUNkLFdBQU87QUFBQSxFQUNYO0FBQ0o7QUFFQSxJQUFPLGVBQVFBOzs7QUN0QlIsU0FBU0MsS0FDWixNQUNBLE9BQ0Y7QUFDRSxTQUFPLElBQUssT0FBTyxNQUFhLEtBQUs7QUFDekM7QUFFQSxJQUFNLFFBQVE7QUFBQSxFQUNWLEtBQVk7QUFBQSxFQUNaLFFBQWU7QUFBQSxFQUNmLFdBQWtCO0FBQUE7QUFBQTtBQUFBLEVBR2xCLE9BQWM7QUFBQSxFQUNkLE9BQWM7QUFBQSxFQUNkLE9BQWM7QUFBQSxFQUNkLFVBQWlCO0FBQUEsRUFDakIsU0FBZ0I7QUFBQSxFQUNoQixVQUFpQjtBQUFBLEVBQ2pCLFFBQWU7QUFBQSxFQUNmLE9BQWM7QUFBQSxFQUNkLFFBQWU7QUFBQSxFQUNmLFFBQWU7QUFBQSxFQUNmLFlBQW1CO0FBQUEsRUFDbkIsU0FBZ0I7QUFDcEI7QUE2Qk8sSUFBTSxPQUFPQTs7O0FDaEVwQixJQUFNLFdBQVcsTUFBTTtBQUNuQixTQUNJLGdCQUFBQyxLQUFDLFNBQUksWUFBWSxDQUFDLFVBQVUsR0FDeEIsMEJBQUFBO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxXQUFXLE1BQU07QUFDYjtBQUFBLFVBQ0k7QUFBQSxRQUNKO0FBQUEsTUFDSjtBQUFBLE1BQ0EsYUFBYTtBQUFBLE1BQ2IsUUFBUSxNQUFNLEVBQUUsT0FBTztBQUFBLE1BRXZCLDBCQUFBQTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csWUFBWSxDQUFDLE1BQU07QUFBQSxVQUNuQixPQUFPO0FBQUE7QUFBQSxNQUNYO0FBQUE7QUFBQSxFQUNKLEdBQ0o7QUFFUjtBQUVBLElBQU8sbUJBQVE7OztBQ2xCZixJQUFNLFlBQVksQ0FBQyxVQUEwQjtBQUN6QyxRQUFNLFdBQVcsTUFBTSxjQUFjLENBQUM7QUFDdEMsUUFBTSxjQUFjLE1BQU0sZ0JBQWdCLFNBQVlDLEtBQUksWUFBWSxXQUFXLE1BQU07QUFFdkYsTUFBSSxnQkFBZ0JBLEtBQUksWUFBWSxZQUFZO0FBQzVDLGFBQVMsS0FBSyxZQUFZO0FBQUEsRUFDOUIsT0FBTztBQUNILGFBQVMsS0FBSyxVQUFVO0FBQUEsRUFDNUI7QUFFQSxTQUNJLGdCQUFBQztBQUFBLElBQUNELEtBQUk7QUFBQSxJQUFKO0FBQUEsTUFDSSxHQUFHO0FBQUEsTUFDSixZQUFZO0FBQUEsTUFDWjtBQUFBLE1BQ0EsU0FBUyxNQUFNLFdBQVc7QUFBQTtBQUFBLEVBQzlCO0FBRVI7QUFFQSxJQUFPLG9CQUFROzs7QUNyQmYsSUFBTSxhQUFhLE1BQU07QUFDckIsUUFBTSxhQUFhLEtBQUssTUFBTSxFQUFFLFVBQVU7QUFFMUMsU0FDSSxnQkFBQUU7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLFlBQVksQ0FBQyxZQUFZO0FBQUEsTUFDekIsUUFBUUMsS0FBSSxNQUFNO0FBQUEsTUFDbEIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsTUFDbEIsU0FBUztBQUFBLE1BRVIscUJBQVc7QUFBQSxRQUFHLENBQUNDLGdCQUNaQSxZQUFXLElBQUksQ0FBQyxjQUNaLGdCQUFBRixLQUFDLG1CQUFnQixXQUFzQixDQUMxQztBQUFBLE1BQ0w7QUFBQTtBQUFBLEVBQ0o7QUFFUjtBQU1BLElBQU0sa0JBQWtCLENBQUMsRUFBRSxVQUFVLE1BQTRCO0FBQzdELFFBQU0sVUFBVTtBQUFBLElBQ1o7QUFBQSxJQUNBLFVBQVUsVUFBVSxZQUFZO0FBQUEsSUFDaEMsVUFBVSxXQUFXLGFBQWE7QUFBQSxFQUN0QztBQUVBLFFBQU0sZ0JBQWdCLFVBQVUsR0FBRyxTQUFTLE9BQU8sTUFBTSxVQUFVLEdBQUc7QUFDdEUsUUFBTSxjQUFjLHVCQUF1QixhQUFhO0FBQ3hELFFBQU0sU0FBUyxVQUFVLFVBQ25CLE1BQU0sRUFBRSxPQUFPLFVBQ2YsTUFBTSxFQUFFLE9BQU87QUFFckIsU0FDSSxnQkFBQUE7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLFlBQVk7QUFBQSxNQUNaLFdBQVcsTUFBTTtBQUNiLFlBQ0ksVUFBVSxHQUFHLE9BQ2IsTUFBTSxFQUFFLFNBQVMsU0FBUyxzQkFBc0IsR0FBRyxJQUNyRDtBQUNFO0FBQUEsUUFDSjtBQUVBLGtCQUFVLEdBQUcsTUFBTTtBQUFBLE1BQ3ZCO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUVBLDBCQUFBQTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csT0FBTztBQUFBLFVBQ1AsWUFBWSxDQUFDLHNCQUFzQjtBQUFBLFVBQ25DLFFBQVFDLEtBQUksTUFBTTtBQUFBLFVBQ2xCLGNBQWM7QUFBQTtBQUFBLE1BQ2xCO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLHFCQUFROzs7QUNqRWYsT0FBTyxXQUFXO0FBR2xCLElBQU0sZ0JBQWdCLE1BQU07QUFDeEIsUUFBTSxnQkFBZ0IsS0FBSyxNQUFNLEVBQUUsYUFBYTtBQUVoRCxTQUNJLGdCQUFBRTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csTUFBTTtBQUFBLE1BQ04sWUFBWSxDQUFDLGVBQWU7QUFBQSxNQUM1QixRQUFRQyxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUVsQiwwQkFBQUQ7QUFBQSxRQUFDO0FBQUE7QUFBQSxVQUNHLE9BQU8sS0FBSyxhQUFhLEVBQUUsR0FBRyxDQUFDLFdBQVcsT0FBTyxLQUFLO0FBQUEsVUFDdEQsWUFBWSxDQUFDLG9CQUFvQjtBQUFBLFVBQ2pDLGVBQWU7QUFBQSxVQUNmLFdBQVcsTUFBTSxjQUFjO0FBQUE7QUFBQSxNQUNuQztBQUFBO0FBQUEsRUFDSjtBQUVSO0FBRUEsSUFBTyx3QkFBUTs7O0FDZmYsSUFBTSxPQUFPLENBQUMsRUFBRSxXQUFXLE1BQWlCO0FBQ3hDLFNBQ0k7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLE1BQU07QUFBQSxNQUNOLFlBQVksQ0FBQyxXQUFXLE1BQU07QUFBQSxNQUM5QixTQUFTO0FBQUEsTUFDVCxRQUFRRSxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUNsQixTQUFTO0FBQUEsTUFFVDtBQUFBLHdCQUFBQyxLQUFDLG9CQUFTO0FBQUEsUUFFVixnQkFBQUEsS0FBQyxxQkFBVSxhQUFhRCxLQUFJLFlBQVksVUFBVTtBQUFBLFFBRWxELGdCQUFBQyxLQUFDLHNCQUFXO0FBQUEsUUFFWixnQkFBQUEsS0FBQyxxQkFBVSxhQUFhRCxLQUFJLFlBQVksVUFBVTtBQUFBLFFBRWxELGdCQUFBQyxLQUFDLHlCQUFjO0FBQUE7QUFBQTtBQUFBLEVBQ25CO0FBRVI7QUFFQSxJQUFPLGVBQVE7OztBQzVCZixJQUFNLFlBQVksQ0FBQyxFQUFFLEtBQUssTUFBMkI7QUFDakQsTUFBSSxLQUFLLFlBQVk7QUFDakIsV0FDSSxnQkFBQUM7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNHLFlBQVksQ0FBQyxRQUFRLGVBQWU7QUFBQSxRQUNwQyxPQUFPLEtBQUs7QUFBQTtBQUFBLElBQ2hCO0FBQUEsRUFFUjtBQUVBLFNBQ0ksZ0JBQUFBO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxPQUFPLEtBQUs7QUFBQSxNQUNaLFlBQVksQ0FBQyxRQUFRLGVBQWU7QUFBQSxNQUNwQyxXQUFXO0FBQUE7QUFBQSxFQUNmO0FBRVI7QUFFQSxJQUFNLE9BQU8sTUFBTTtBQUNmLFNBQ0ksZ0JBQUFBO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxZQUFZLENBQUMsTUFBTTtBQUFBLE1BQ25CLFNBQVM7QUFBQSxNQUNULFFBQVFDLEtBQUksTUFBTTtBQUFBLE1BQ2xCLFFBQVFBLEtBQUksTUFBTTtBQUFBLE1BRWpCLGVBQUssTUFBTSxFQUFFLElBQUksRUFBRTtBQUFBLFFBQUcsQ0FBQyxVQUNwQixNQUFNLElBQUksQ0FBQyxTQUNQO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDRyxPQUFPLENBQUMsU0FBUztBQUNiLG1CQUFLO0FBQUEsZ0JBQ0Q7QUFBQSxnQkFDQSxLQUFLO0FBQUEsY0FDVDtBQUFBLFlBQ0o7QUFBQSxZQUNBLFFBQVEsTUFBTSxFQUFFLE9BQU87QUFBQSxZQUN2QixlQUFlLEtBQUs7QUFBQSxZQUNwQixZQUFZLENBQUMsZ0JBQWdCO0FBQUEsWUFDN0IsUUFBUUEsS0FBSSxNQUFNO0FBQUEsWUFDbEIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsWUFFbEI7QUFBQSw4QkFBQUQsS0FBQyxhQUFVLE1BQVk7QUFBQSxjQUN0QkMsS0FBSSxZQUFZLGVBQWUsS0FBSyxTQUFTO0FBQUE7QUFBQTtBQUFBLFFBQ2xELENBQ0g7QUFBQSxNQUNMO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLGVBQVE7OztBQ2pEZixJQUFNLFNBQVMsQ0FBQyxFQUFFLFdBQVcsTUFBbUI7QUFDNUMsU0FDSSxnQkFBQUM7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLE1BQU07QUFBQSxNQUNOLFlBQVksQ0FBQyxXQUFXLFFBQVE7QUFBQSxNQUNoQyxTQUFTO0FBQUEsTUFDVCxRQUFRQyxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUNsQixTQUFTO0FBQUEsTUFFVCwwQkFBQUQsS0FBQyxnQkFBSztBQUFBO0FBQUEsRUFDVjtBQUVSO0FBRUEsSUFBTyxpQkFBUTs7O0FDbkJmLElBQU1FLFFBQU8sTUFBTTtBQUNmLFNBQ0ksZ0JBQUFDLEtBQUMsU0FBSSxZQUFZLENBQUMsTUFBTSxHQUFHLFNBQVMsTUFDaEMsMEJBQUFBLEtBQUMsV0FBTSxPQUFPLEtBQUssTUFBTSxFQUFFLElBQUksR0FBRyxHQUN0QztBQUVSO0FBRUEsSUFBT0MsZ0JBQVFGOzs7QUNIZixJQUFNLFVBQVUsQ0FBQyxFQUFFLFdBQVcsTUFBb0I7QUFDOUMsUUFBTSxVQUFVLEtBQUssTUFBTSxFQUFFLE9BQU87QUFFcEMsU0FDSSxnQkFBQUc7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLFlBQVksQ0FBQyxTQUFTO0FBQUEsTUFDdEIsU0FBUztBQUFBLE1BQ1QsUUFBUSxNQUFNLEVBQUUsT0FBTztBQUFBLE1BRXZCLDBCQUFBQTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csaUJBQWlCLENBQUMsT0FBTyxVQUFVO0FBQy9CLGtCQUFNLENBQUMsRUFBRSxDQUFDLElBQUksTUFBTSxhQUFhO0FBRWpDLGdCQUFJLE1BQU0sV0FBVyxNQUFNQyxLQUFJLGdCQUFnQjtBQUMzQyxvQkFBTSxFQUFFLGVBQWU7QUFBQSxnQkFDbkI7QUFBQSxnQkFDQTtBQUFBLGNBQ0o7QUFDQSxvQkFBTSxFQUFFLGVBQWU7QUFBQSxnQkFDbkI7QUFBQSxnQkFDQTtBQUFBLGdCQUNBO0FBQUEsY0FDSjtBQUFBLFlBQ0o7QUFBQSxVQUNKO0FBQUEsVUFFQSwrQkFBQyxTQUFJLFNBQVMsR0FDVjtBQUFBLDRCQUFBRDtBQUFBLGNBQUM7QUFBQTtBQUFBLGdCQUNHLFVBQVUsS0FBSyxPQUFPLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFXO0FBQUEsZ0JBQy9DLFlBQVksQ0FBQyxRQUFRLE1BQU07QUFBQTtBQUFBLFlBQy9CO0FBQUEsWUFDQSxnQkFBQUE7QUFBQSxjQUFDO0FBQUE7QUFBQSxnQkFDRyxPQUFPLEtBQUssT0FBTyxFQUFFO0FBQUEsa0JBQ2pCLENBQUMsTUFBTSxJQUFJLEVBQUUsYUFBYSxLQUFLLFFBQVEsQ0FBQyxDQUFDO0FBQUEsZ0JBQzdDO0FBQUEsZ0JBQ0EsWUFBWSxDQUFDLFlBQVk7QUFBQSxnQkFDekIsU0FBUyxLQUFLLE9BQU8sRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFNBQVM7QUFBQTtBQUFBLFlBQ2hEO0FBQUEsYUFDSjtBQUFBO0FBQUEsTUFDSjtBQUFBO0FBQUEsRUFDSjtBQUVSO0FBRUEsSUFBTyxrQkFBUTs7O0FDNUNmLElBQU0sU0FBUyxDQUFDLEVBQUUsV0FBVyxNQUFtQjtBQUM1QyxRQUFNLFNBQVMsS0FBSyxNQUFNLEVBQUUsTUFBTTtBQUVsQyxTQUNJLGdCQUFBRTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csWUFBWSxDQUFDLFFBQVE7QUFBQSxNQUNyQixTQUFTO0FBQUEsTUFDVCxRQUFRLE1BQU0sRUFBRSxPQUFPO0FBQUEsTUFFdkIsMEJBQUFBO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDRyxpQkFBaUIsQ0FBQyxPQUFPLFVBQVU7QUFDL0Isa0JBQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxNQUFNLGFBQWE7QUFFakMsZ0JBQUksTUFBTSxXQUFXLE1BQU1DLEtBQUksZ0JBQWdCO0FBQzNDLG9CQUFNLEVBQUUsZUFBZTtBQUFBLGdCQUNuQjtBQUFBLGdCQUNBO0FBQUEsY0FDSjtBQUNBLG9CQUFNLEVBQUUsZUFBZTtBQUFBLGdCQUNuQjtBQUFBLGdCQUNBO0FBQUEsZ0JBQ0E7QUFBQSxjQUNKO0FBQUEsWUFDSjtBQUFBLFVBQ0o7QUFBQSxVQUVBLCtCQUFDLFNBQUksU0FBUyxHQUNWO0FBQUEsNEJBQUFEO0FBQUEsY0FBQztBQUFBO0FBQUEsZ0JBQ0csVUFBVSxLQUFLLE1BQU0sRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVU7QUFBQSxnQkFDN0MsWUFBWSxDQUFDLFFBQVEsTUFBTTtBQUFBO0FBQUEsWUFDL0I7QUFBQSxZQUNBLGdCQUFBQTtBQUFBLGNBQUM7QUFBQTtBQUFBLGdCQUNHLE9BQU8sS0FBSyxNQUFNLEVBQUU7QUFBQSxrQkFDaEIsQ0FBQyxNQUFNLElBQUksRUFBRSxTQUFTLEtBQUssUUFBUSxDQUFDLENBQUM7QUFBQSxnQkFDekM7QUFBQSxnQkFDQSxZQUFZLENBQUMsWUFBWTtBQUFBO0FBQUEsWUFDN0I7QUFBQSxhQUNKO0FBQUE7QUFBQSxNQUNKO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLGlCQUFROzs7QUN6Q2YsSUFBTSxRQUFRLENBQUMsRUFBRSxXQUFXLE1BQWtCO0FBQzFDLFNBQ0k7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNHLE1BQU07QUFBQSxNQUNOLFlBQVksQ0FBQyxXQUFXLE9BQU87QUFBQSxNQUMvQixTQUFTO0FBQUEsTUFDVCxRQUFRRSxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUNsQixTQUFTO0FBQUEsTUFFVDtBQUFBLHdCQUFBQyxLQUFDLGtCQUFPLFlBQXdCO0FBQUEsUUFFaEMsZ0JBQUFBLEtBQUMsbUJBQVEsWUFBd0I7QUFBQSxRQUVqQyxnQkFBQUEsS0FBQ0MsZUFBQSxFQUFLO0FBQUE7QUFBQTtBQUFBLEVBQ1Y7QUFFUjtBQUVBLElBQU8sZ0JBQVE7OztBQ3hCZixJQUFNLE1BQU0sQ0FBQyxNQUFjLGVBQTRCO0FBQ25ELFVBQVEsSUFBSSw0QkFBNEIsV0FBVyxTQUFTO0FBQzVELFFBQU0sRUFBRSxLQUFLLE1BQU0sTUFBTSxJQUFJQyxPQUFNO0FBRW5DLFNBQ0ksZ0JBQUFDO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRztBQUFBLE1BQ0EsWUFBWSxDQUFDLEtBQUs7QUFBQSxNQUNsQjtBQUFBLE1BQ0EsYUFBYUQsT0FBTSxZQUFZO0FBQUEsTUFDL0IsUUFBUSxNQUFNLE9BQU87QUFBQSxNQUNyQixhQUFhO0FBQUEsTUFDYixTQUFTO0FBQUEsTUFFVCwwQkFBQUM7QUFBQSxRQUFDO0FBQUE7QUFBQSxVQUNHLFlBQVksQ0FBQyxhQUFhLFVBQVUsV0FBVyxVQUFVO0FBQUEsVUFDekQsYUFBYSxnQkFBQUEsS0FBQyxnQkFBSyxZQUF3QjtBQUFBLFVBQzNDLGNBQWMsZ0JBQUFBLEtBQUMsa0JBQU8sWUFBd0I7QUFBQSxVQUM5QyxXQUFXLGdCQUFBQSxLQUFDLGlCQUFNLFlBQXdCO0FBQUE7QUFBQSxNQUM5QztBQUFBO0FBQUEsRUFDSjtBQUVSO0FBRUEsSUFBTyxjQUFROzs7QUNYZixJQUFNLGNBQWMsQ0FBQztBQUFBLEVBQ2pCO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBLE9BQU87QUFBQTtBQUFBLEVBQ1AsTUFBTTtBQUFBLEVBQ04sUUFBUTtBQUFBLEVBQ1IsU0FBUztBQUFBLEVBQ1QsU0FBU0MsS0FBSSxNQUFNO0FBQUEsRUFDbkIsU0FBU0EsS0FBSSxNQUFNO0FBQUEsRUFDbkI7QUFBQSxFQUNBLFVBQVU7QUFDZCxNQUF3QjtBQUNwQixRQUFNLEVBQUUsS0FBSyxNQUFNLE9BQU8sT0FBTyxJQUFJQyxPQUFNO0FBRTNDLFNBQ0ksZ0JBQUFDO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxNQUFNLEdBQUcsSUFBSSxJQUFJLFdBQVcsU0FBUztBQUFBLE1BQ3JDLFlBQVksQ0FBQyxhQUFhO0FBQUEsTUFDMUI7QUFBQSxNQUNBLFNBQVNELE9BQU0sUUFBUTtBQUFBLE1BQ3ZCLFFBQVEsTUFBTSxPQUFPLFFBQVE7QUFBQSxNQUM3QixhQUFhO0FBQUEsTUFDYjtBQUFBLE1BQ0EsY0FBYyxDQUFDLFFBQVEsV0FBVztBQUM5QixZQUFJLFdBQVdFLEtBQUksWUFBWTtBQUMzQixnQkFBTSxFQUFFLGVBQWUsV0FBVyxNQUFNLFVBQVU7QUFBQSxRQUN0RDtBQUFBLE1BQ0o7QUFBQSxNQUNBLGlCQUFpQixDQUFDLE1BQU0sTUFBTTtBQUMxQixjQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGFBQWE7QUFDbEMsY0FBTSxFQUFFLEdBQUcsR0FBRyxPQUFPLE9BQU8sSUFBSSxLQUMzQixVQUFVLEVBQ1YsZUFBZTtBQUVwQixjQUFNLE9BQU8sS0FBSyxLQUFLLEtBQUssSUFBSTtBQUNoQyxjQUFNLE9BQU8sS0FBSyxLQUFLLEtBQUssSUFBSTtBQUdoQyxZQUFJLFFBQVEsTUFBTTtBQUNkLGdCQUFNLEVBQUUsZUFBZSxXQUFXLE1BQU0sVUFBVTtBQUFBLFFBQ3REO0FBQUEsTUFDSjtBQUFBLE1BQ0EsT0FBTyxDQUFDLFNBQVM7QUFHYixtQkFBVyxNQUFNO0FBQ2IsZ0JBQU0sRUFBRSxlQUFlLFdBQVcsTUFBTSxVQUFVO0FBQUEsUUFDdEQsR0FBRyxHQUFHO0FBR04sYUFBSyxpQkFBaUIsR0FBRyxDQUFDO0FBQUEsTUFDOUI7QUFBQSxNQUVBLDBCQUFBRDtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csaUJBQWlCLENBQUMsTUFBTTtBQUFBLFVBQ3hCLFlBQVksQ0FBQyxhQUFhLFVBQVUsV0FBVyxVQUFVO0FBQUEsVUFDekQsU0FBUztBQUFBLFVBQ1QsU0FBUztBQUFBLFVBQ1Q7QUFBQSxVQUNBO0FBQUEsVUFDQSxhQUFhO0FBQUEsVUFDYixXQUFXO0FBQUEsVUFDWCxXQUFXO0FBQUEsVUFDWCxjQUFjO0FBQUEsVUFFYjtBQUFBO0FBQUEsTUFDTDtBQUFBO0FBQUEsRUFDSjtBQUVSO0FBRUEsSUFBTyxzQkFBUTs7O0FDcEZmLElBQU0sY0FBYyxDQUFDLE1BQWMsZUFBNEI7QUFDM0QsU0FDSSxnQkFBQUUsS0FBQyx1QkFBWSxZQUF3QixNQUNqQztBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csWUFBWSxDQUFDLGFBQWE7QUFBQSxNQUMxQixTQUFTO0FBQUEsTUFDVCxRQUFRQyxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUNsQixTQUFTO0FBQUEsTUFDVCxVQUFVO0FBQUEsTUFFVjtBQUFBLHdCQUFBRDtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csU0FBUTtBQUFBLFlBQ1IsT0FBTyxNQUFNO0FBQ1Qsb0JBQU0sRUFBRSxlQUFlLFdBQVcsTUFBTSxVQUFVO0FBQUEsWUFDdEQ7QUFBQTtBQUFBLFFBQ0o7QUFBQSxRQUNBLGdCQUFBQTtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csU0FBUTtBQUFBLFlBQ1IsT0FBTyxNQUFNO0FBQ1Qsb0JBQU0sRUFBRSxlQUFlLFdBQVcsTUFBTSxVQUFVO0FBQUEsWUFDdEQ7QUFBQTtBQUFBLFFBQ0o7QUFBQSxRQUNBLGdCQUFBQTtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csU0FBUTtBQUFBLFlBQ1IsT0FBTyxNQUFNO0FBQ1Qsb0JBQU0sRUFBRSxlQUFlLFdBQVcsTUFBTSxVQUFVO0FBQUEsWUFDdEQ7QUFBQTtBQUFBLFFBQ0o7QUFBQTtBQUFBO0FBQUEsRUFDSixHQUNKO0FBRVI7QUFPQSxJQUFNLGdCQUFnQixDQUFDLEVBQUUsU0FBUyxNQUFNLE1BQTBCO0FBQzlELFFBQU0sVUFBVSxLQUFLLE1BQU0sRUFBRSxPQUFPO0FBRXBDLFNBQ0ksZ0JBQUFBO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxZQUFZLEtBQUssT0FBTyxFQUFFLEdBQUcsQ0FBQyxNQUFNO0FBQ2hDLGVBQU8sRUFBRSxpQkFBaUIsVUFDcEIsQ0FBQyxpQkFBaUIsUUFBUSxJQUMxQixDQUFDLGVBQWU7QUFBQSxNQUMxQixDQUFDO0FBQUEsTUFDRCxRQUFRLE1BQU0sRUFBRSxPQUFPO0FBQUEsTUFDdkIsV0FBVyxNQUFNO0FBQ2IsY0FBTSxFQUFFLFFBQVEsZ0JBQWdCLE9BQU87QUFDdkMsZ0JBQVE7QUFBQSxNQUNaO0FBQUEsTUFFQSwwQkFBQUEsS0FBQyxXQUFNLE9BQU8sUUFBUSxPQUFPLENBQUMsRUFBRSxZQUFZLElBQUksUUFBUSxNQUFNLENBQUMsR0FBRztBQUFBO0FBQUEsRUFDdEU7QUFFUjtBQUVBLElBQU8sc0JBQVE7OztBQzVEZixJQUFNLGFBQWEsQ0FBQyxNQUFjLGVBQTRCO0FBQzFELFFBQU0sU0FBUyxLQUFLLE1BQU0sRUFBRSxNQUFNO0FBQ2xDLFFBQU0sV0FBVyxLQUFLLE1BQU0sRUFBRSxHQUFHLENBQUMsTUFBTTtBQUNwQyxVQUFNRSxZQUFXLENBQUMsR0FBRyxFQUFFLFFBQVE7QUFFL0IsSUFBQUEsVUFBUyxLQUFLLENBQUMsR0FBRyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7QUFFbkMsV0FBT0E7QUFBQSxFQUNYLENBQUM7QUFFRCxTQUNJLGdCQUFBQyxLQUFDLHVCQUFZLFlBQXdCLE1BQ2pDLDBCQUFBQTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csWUFBWSxDQUFDLFlBQVk7QUFBQSxNQUN6QixTQUFTO0FBQUEsTUFDVCxRQUFRQyxLQUFJLE1BQU07QUFBQSxNQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQSxNQUNsQixTQUFTO0FBQUEsTUFDVCxVQUFVO0FBQUEsTUFFVCxlQUFLLFFBQVEsRUFBRTtBQUFBLFFBQUcsQ0FBQ0YsY0FDaEJBLFVBQVMsSUFBSSxDQUFDLFlBQ1YsZ0JBQUFDO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDRztBQUFBLFlBQ0EsT0FBTyxNQUFNO0FBQ1Qsb0JBQU0sRUFBRSxlQUFlO0FBQUEsZ0JBQ25CO0FBQUEsZ0JBQ0E7QUFBQSxjQUNKO0FBQUEsWUFDSjtBQUFBLFlBRUEsMEJBQUFBLEtBQUMsV0FBTSxPQUFPLFFBQVEsYUFBYTtBQUFBO0FBQUEsUUFDdkMsQ0FDSDtBQUFBLE1BQ0w7QUFBQTtBQUFBLEVBQ0osR0FDSjtBQUVSO0FBT0EsSUFBTSxnQkFBZ0IsQ0FBQyxFQUFFLFNBQVMsTUFBTSxNQUEwQjtBQUM5RCxTQUNJLGdCQUFBQTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csWUFDSSxRQUFRLFlBQ0YsQ0FBQyxpQkFBaUIsUUFBUSxJQUMxQixDQUFDLGVBQWU7QUFBQSxNQUUxQixRQUFRLE1BQU0sRUFBRSxPQUFPO0FBQUEsTUFDdkIsV0FBVyxNQUFNO0FBQ2IsZ0JBQVEsZUFBZSxJQUFJO0FBRTNCLGdCQUFRO0FBQUEsTUFDWjtBQUFBLE1BRUEsMEJBQUFBLEtBQUMsV0FBTSxPQUFPLFFBQVEsYUFBYTtBQUFBO0FBQUEsRUFDdkM7QUFFUjtBQUVBLElBQU8scUJBQVE7OztBQ3ZFZixPQUFPLGlCQUFpQjs7O0FDUXhCLElBQU0sU0FBUyxDQUFDLEVBQUUsYUFBYSxNQUFtQjtBQUM5QyxTQUNJO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxZQUFZLENBQUMsUUFBUTtBQUFBLE1BQ3JCLFFBQVFFLEtBQUksTUFBTTtBQUFBLE1BQ2xCLFNBQVM7QUFBQSxNQUNULFNBQVM7QUFBQSxNQUVUO0FBQUE7QUFBQSxVQUFDO0FBQUE7QUFBQSxZQUNHLFlBQVksQ0FBQyxZQUFZO0FBQUEsWUFDekIsUUFBUUEsS0FBSSxNQUFNO0FBQUEsWUFDbEIsU0FBUztBQUFBLFlBQ1QsU0FBUztBQUFBLFlBRVQ7QUFBQSw4QkFBQUM7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQ0csWUFBWSxDQUFDLFNBQVM7QUFBQSxrQkFDdEIsVUFBVSxhQUFhLFdBQVcsYUFBYTtBQUFBLGtCQUMvQyxXQUFXO0FBQUE7QUFBQSxjQUNmO0FBQUEsY0FFQSxnQkFBQUE7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQ0csWUFBWSxDQUFDLGFBQWE7QUFBQSxrQkFDMUIsT0FBTyxHQUFHLGFBQWEsV0FBVyxhQUFhO0FBQUE7QUFBQSxjQUNuRDtBQUFBO0FBQUE7QUFBQSxRQUNKO0FBQUEsUUFFQTtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csWUFBWSxDQUFDLGFBQWE7QUFBQSxZQUMxQixRQUFRRCxLQUFJLE1BQU07QUFBQSxZQUNsQixTQUFTO0FBQUEsWUFDVCxTQUFTO0FBQUEsWUFFVDtBQUFBLDhCQUFBQztBQUFBLGdCQUFDO0FBQUE7QUFBQSxrQkFDRyxZQUFZLENBQUMsWUFBWTtBQUFBLGtCQUN6QixPQUFPLElBQUk7QUFBQSxvQkFDUCxhQUFhLE9BQU87QUFBQSxrQkFDeEIsRUFBRSxtQkFBbUIsU0FBUztBQUFBLG9CQUMxQixLQUFLO0FBQUEsb0JBQ0wsT0FBTztBQUFBLG9CQUNQLE1BQU07QUFBQSxvQkFDTixRQUFRO0FBQUEsb0JBQ1IsUUFBUTtBQUFBLG9CQUNSLFFBQVE7QUFBQSxrQkFDWixDQUFDO0FBQUE7QUFBQSxjQUNMO0FBQUEsY0FDQSxnQkFBQUE7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQ0csWUFBWSxDQUFDLGFBQWE7QUFBQSxrQkFDMUIsYUFBYTtBQUFBLGtCQUNiLFdBQVcsTUFBTTtBQUNiLGlDQUFhLFFBQVE7QUFBQSxrQkFDekI7QUFBQSxrQkFFQSwwQkFBQUEsS0FBQyxXQUFNLFlBQVksQ0FBQyxNQUFNLEdBQUcsT0FBTyxVQUFLO0FBQUE7QUFBQSxjQUM3QztBQUFBO0FBQUE7QUFBQSxRQUNKO0FBQUE7QUFBQTtBQUFBLEVBQ0o7QUFFUjtBQUVBLElBQU8saUJBQVE7OztBQ2hFZixPQUFPQyxZQUFXO0FBRWxCLElBQU0sU0FBUyxDQUFDLFNBQWlCO0FBQzdCLFFBQU0sWUFBWSxJQUFJQyxLQUFJLFVBQVU7QUFDcEMsU0FBTyxVQUFVLFNBQVMsSUFBSTtBQUNsQztBQUVBLElBQU0sYUFBYSxDQUFDLFNBQWlCQyxTQUFLLFVBQVUsTUFBTUEsU0FBSyxTQUFTLE1BQU07QUFFOUUsSUFBTSxtQkFBbUIsQ0FBQyxVQUFVO0FBTXBDLElBQU0sT0FBTyxDQUFDLEVBQUUsYUFBYSxNQUFpQjtBQUMxQyxTQUNJO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxZQUFZLENBQUMsTUFBTTtBQUFBLE1BQ25CLFFBQVFELEtBQUksTUFBTTtBQUFBLE1BQ2xCLFNBQVM7QUFBQSxNQUNULFNBQU87QUFBQSxNQUVOO0FBQUEscUJBQWEsU0FBUyxXQUFXLGFBQWEsS0FBSyxLQUNoRCxnQkFBQUUsS0FBQyxTQUFJLFFBQVFGLEtBQUksTUFBTSxRQUFRLFlBQVksQ0FBQyxPQUFPLEdBQy9DLDBCQUFBRTtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csTUFBTSxhQUFhO0FBQUEsWUFDbkIsVUFBVUYsS0FBSSxTQUFTO0FBQUEsWUFDdkIsV0FBVztBQUFBO0FBQUEsUUFDZixHQUNKO0FBQUEsUUFHSCxhQUFhLFNBQVMsT0FBTyxhQUFhLEtBQUssS0FDNUMsZ0JBQUFFLEtBQUMsU0FBSSxZQUFZLENBQUMsTUFBTSxHQUFHLFFBQVFGLEtBQUksTUFBTSxRQUN6QywwQkFBQUU7QUFBQSxVQUFDO0FBQUE7QUFBQSxZQUNHLFVBQVUsYUFBYTtBQUFBLFlBQ3ZCLFdBQVc7QUFBQSxZQUNYLFFBQVFGLEtBQUksTUFBTTtBQUFBLFlBQ2xCLFFBQVFBLEtBQUksTUFBTTtBQUFBO0FBQUEsUUFDdEIsR0FDSjtBQUFBLFFBR0gsYUFBYSxXQUFXLFdBQVcsYUFBYSxPQUFPLEtBQ3BELGdCQUFBRSxLQUFDLFNBQUksWUFBWSxDQUFDLE1BQU0sR0FBRyxRQUFRRixLQUFJLE1BQU0sUUFDekMsMEJBQUFFO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDRyxNQUFNLGFBQWE7QUFBQSxZQUNuQixXQUFXO0FBQUEsWUFDWCxRQUFRRixLQUFJLE1BQU07QUFBQSxZQUNsQixRQUFRQSxLQUFJLE1BQU07QUFBQTtBQUFBLFFBQ3RCLEdBQ0o7QUFBQSxRQUdKLHFCQUFDLFNBQUksU0FBTyxNQUFDLFVBQVEsTUFBQyxRQUFRQSxLQUFJLE1BQU0sUUFBUSxTQUFTLEdBQ3JEO0FBQUEsMEJBQUFFO0FBQUEsWUFBQztBQUFBO0FBQUEsY0FDRyxXQUFXQyxPQUFNLGNBQWM7QUFBQSxjQUMvQixlQUFlO0FBQUEsY0FDZixZQUFZLENBQUMsU0FBUztBQUFBLGNBQ3RCLFFBQVFILEtBQUksTUFBTTtBQUFBLGNBQ2xCLFFBQVE7QUFBQSxjQUNSLE9BQU8sYUFBYTtBQUFBO0FBQUEsVUFDeEI7QUFBQSxVQUNDLGFBQWEsUUFDVixnQkFBQUU7QUFBQSxZQUFDO0FBQUE7QUFBQSxjQUNHLFlBQVksQ0FBQyxNQUFNO0FBQUEsY0FDbkIsZUFBZTtBQUFBLGNBQ2YsTUFBSTtBQUFBLGNBQ0osUUFBUUYsS0FBSSxNQUFNO0FBQUEsY0FDbEIsUUFBUTtBQUFBLGNBQ1IsT0FBTyxhQUFhO0FBQUEsY0FDcEIsWUFBWTtBQUFBLGNBQ1osV0FBVyxpQkFBaUI7QUFBQSxnQkFDeEIsYUFBYTtBQUFBLGNBQ2pCO0FBQUE7QUFBQSxVQUNKO0FBQUEsV0FFUjtBQUFBO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLGVBQVE7OztBQ3BGZixPQUFPSSxvQkFBbUI7QUFHMUIsSUFBTSxXQUFXQyxlQUFjLFlBQVk7QUFPM0MsSUFBTSxnQkFBZ0Q7QUFBQSxFQUNsRCxVQUFVO0FBQUEsSUFDTjtBQUFBLE1BQ0ksT0FBTztBQUFBLE1BQ1AsUUFBUSxDQUFDLGlCQUEyQztBQUNoRCxjQUFNLE9BQU8sYUFBYTtBQUMxQixjQUFNLE1BQU0sS0FBSyxVQUFVLEdBQUcsS0FBSyxZQUFZLEdBQUcsQ0FBQztBQUVuRCxrQkFBVSxZQUFZLEdBQUcsRUFBRTtBQUFBLE1BQy9CO0FBQUEsSUFDSjtBQUFBLElBQ0E7QUFBQSxNQUNJLE9BQU87QUFBQSxNQUNQLFFBQVEsQ0FBQyxpQkFBMkM7QUFDaEQsY0FBTSxPQUFPLGFBQWE7QUFDMUIsa0JBQVUsWUFBWSxJQUFJLEVBQUU7QUFBQSxNQUNoQztBQUFBLElBQ0o7QUFBQSxJQUNBO0FBQUEsTUFDSSxPQUFPO0FBQUEsTUFDUCxRQUFRLENBQUMsaUJBQTJDO0FBQ2hELGNBQU0sT0FBTyxhQUFhO0FBQzFCLGtCQUFVLGFBQWEsSUFBSSxFQUFFO0FBQUEsTUFDakM7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUNKO0FBTUEsSUFBTSxTQUFTLENBQUMsRUFBRSxhQUFhLE1BQW1CO0FBQzlDLFFBQU0sVUFBVSxhQUFhLFlBQVk7QUFFekMsU0FDSSxnQkFBQUMsS0FBQyxTQUFJLFlBQVksQ0FBQyxRQUFRLEdBRWxCLCtCQUFDLFNBQUksWUFBWSxDQUFDLFNBQVMsR0FBRyxTQUFTLEdBQ2xDO0FBQUEsWUFBUSxJQUFJLENBQUMsV0FDVixnQkFBQUE7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNHLFNBQU87QUFBQSxRQUNQLFdBQVcsTUFBTTtBQUNiLHVCQUFhLE9BQU8sT0FBTyxFQUFFO0FBQzdCLHVCQUFhLFFBQVE7QUFFckIsZ0JBQU0sVUFBVSxTQUFTLFlBQVk7QUFDckMsZ0JBQU0sU0FBUyxRQUFRO0FBQUEsWUFBSyxDQUFDLE1BQ3pCLEVBQUUsTUFDRyxZQUFZLEVBQ1o7QUFBQSxjQUNHLGFBQWEsUUFBUSxZQUFZO0FBQUEsWUFDckM7QUFBQSxVQUNSO0FBRUEsY0FBSSxRQUFRO0FBQ1IscUJBQVM7QUFBQSxjQUNMO0FBQUEsY0FDQSxTQUFTLE9BQU8sS0FBSztBQUFBLFlBQ3pCO0FBQUEsVUFDSjtBQUFBLFFBQ0o7QUFBQSxRQUVBLDBCQUFBQTtBQUFBLFVBQUM7QUFBQTtBQUFBLFlBQ0csT0FBTyxPQUFPO0FBQUEsWUFDZCxRQUFRQyxLQUFJLE1BQU07QUFBQSxZQUNsQixTQUFPO0FBQUE7QUFBQSxRQUNYO0FBQUE7QUFBQSxJQUNKLENBQ0g7QUFBQSxJQUVBLGNBQWMsYUFBYSxPQUFPLEdBQUc7QUFBQSxNQUNsQyxDQUFDLGlCQUNHLGdCQUFBRDtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csU0FBTztBQUFBLFVBQ1AsV0FBVyxNQUFNO0FBQ2IseUJBQWEsT0FBTyxZQUFZO0FBRWhDLHlCQUFhLFFBQVE7QUFBQSxVQUN6QjtBQUFBLFVBRUEsMEJBQUFBO0FBQUEsWUFBQztBQUFBO0FBQUEsY0FDRyxPQUFPLGFBQWE7QUFBQSxjQUNwQixRQUFRQyxLQUFJLE1BQU07QUFBQSxjQUNsQixTQUFPO0FBQUE7QUFBQSxVQUNYO0FBQUE7QUFBQSxNQUNKO0FBQUEsSUFFUjtBQUFBLEtBQ0osR0FFUjtBQUVSO0FBRUEsSUFBTyxpQkFBUTs7O0FIckdmLElBQU0sU0FBUyxZQUFZLFlBQVk7QUFFdkMsSUFBTSxtQkFBbUIsQ0FBQyxFQUFFLE1BQU0sTUFBb0M7QUFDbEUsUUFBTSxlQUFlLE9BQU8saUJBQWlCLE1BQU0sRUFBRTtBQUVyRCxNQUFJLENBQUMsY0FBYztBQUNmLFdBQU87QUFBQSxFQUNYO0FBRUEsU0FDSTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csWUFBWSxDQUFDLG9CQUFvQixVQUFVLFdBQVcsVUFBVTtBQUFBLE1BQ2hFLFVBQVU7QUFBQSxNQUNWLE9BQU8sQ0FBQyxTQUFTO0FBQ2IsYUFBSyxnQkFBZ0I7QUFBQSxVQUNqQjtBQUFBLFVBQ0E7QUFBQSxVQUNBO0FBQUEsVUFDQTtBQUFBLFVBQ0EsYUFBYSxZQUFZLFlBQVksUUFBUSxXQUN2QyxhQUNBO0FBQUEsUUFDVixDQUFDO0FBQUEsTUFDTDtBQUFBLE1BQ0EsY0FBYyxNQUFNO0FBQ2hCLGNBQU0sS0FBSztBQUFBLE1BQ2Y7QUFBQSxNQUNBLGNBQWMsTUFBTTtBQUNoQixjQUFNLE1BQU07QUFBQSxNQUNoQjtBQUFBLE1BQ0EsU0FBUztBQUFBLE1BQ1QsU0FBUztBQUFBLE1BRVQ7QUFBQSx3QkFBQUMsS0FBQyxrQkFBTyxjQUE0QjtBQUFBLFFBRXBDLGdCQUFBQSxLQUFDLGdCQUFLLGNBQTRCO0FBQUEsUUFFbEMsZ0JBQUFBLEtBQUMsa0JBQU8sY0FBNEI7QUFBQTtBQUFBO0FBQUEsRUFDeEM7QUFFUjtBQUVBLElBQU8sMkJBQVE7OztBSTNDZixJQUFNLG9CQUFvQixDQUFDLE1BQWMsZUFBNEI7QUFDakUsUUFBTSxFQUFFLEtBQUssTUFBTSxJQUFJQyxPQUFNO0FBRTdCLFNBQ0ksZ0JBQUFDO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRztBQUFBLE1BQ0EsV0FBVztBQUFBLE1BQ1gsYUFBYTtBQUFBLE1BQ2IsWUFBWSxDQUFDLG1CQUFtQjtBQUFBLE1BQ2hDO0FBQUEsTUFDQSxPQUFPRCxPQUFNLE1BQU07QUFBQSxNQUNuQixRQUFRLE1BQU07QUFBQSxNQUNkLFNBQVM7QUFBQSxNQUNULE9BQU8sQ0FBQyxTQUFTO0FBQ2IsYUFBSyxpQkFBaUIsR0FBRyxDQUFDO0FBRTFCLGNBQU0sRUFBRSxvQkFBb0IsVUFBVSxDQUFDLFVBQVU7QUFDN0MsY0FBSSxTQUFTLE1BQU0sV0FBVyxNQUFNLFFBQVEsU0FBUyxHQUFHO0FBQ3BELGlCQUFLLEtBQUs7QUFBQSxVQUNkLE9BQU87QUFDSCxpQkFBSyxLQUFLO0FBQUEsVUFDZDtBQUFBLFFBQ0osQ0FBQztBQUFBLE1BQ0w7QUFBQSxNQUVBLDBCQUFBQztBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csWUFBWSxDQUFDLFdBQVc7QUFBQSxVQUN4QixVQUFVO0FBQUEsVUFDVixTQUFTO0FBQUEsVUFDVCxRQUFRQyxLQUFJLE1BQU07QUFBQSxVQUVqQixlQUFLLE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxHQUFHLENBQUMsVUFBVTtBQUM3QyxtQkFBTyxDQUFDLEdBQUcsTUFBTSxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQzNCLGdCQUFBRCxLQUFDLDRCQUFpQixPQUFjLENBQ25DO0FBQUEsVUFDTCxDQUFDO0FBQUE7QUFBQSxNQUNMO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLDRCQUFROzs7QUM5QmYsSUFBTSxpQkFBTixNQUF3QztBQUFBLEVBQXhDO0FBQ0ksU0FBUSxVQUFvQixDQUFDO0FBQUE7QUFBQSxFQUU3QixNQUFhLFFBQVE7QUFBQSxFQUFDO0FBQUEsRUFFdEIsTUFBYSxPQUFPO0FBRWhCLGVBQVcsVUFBVSxLQUFLLFNBQVM7QUFDL0IsYUFBTyxPQUFPLFFBQVE7QUFBQSxJQUMxQjtBQUFBLEVBQ0o7QUFBQSxFQUVPLFlBQVksWUFBeUI7QUFDeEMsYUFBUyxXQUNMLE1BQ0EsVUFDQUUsUUFBbUIsV0FDYjtBQUNOLGFBQU87QUFBQSxRQUNIO0FBQUEsUUFDQTtBQUFBLFFBQ0EsUUFBUSxTQUFTLE1BQU0sVUFBVTtBQUFBLFFBQ2pDLE1BQU1BO0FBQUEsTUFDVjtBQUFBLElBQ0o7QUFFQSxVQUFNLGFBQWE7QUFBQSxNQUNmLFdBQVcsT0FBTyxXQUFHO0FBQUEsTUFDckIsV0FBVyxxQkFBcUIseUJBQWlCO0FBQUEsTUFDakQsV0FBVyxjQUFjLG9CQUFZLFNBQVM7QUFBQSxNQUM5QyxXQUFXLGVBQWUscUJBQWEsU0FBUztBQUFBLElBQ3BEO0FBRUEsU0FBSyxRQUFRLEtBQUssR0FBRyxVQUFVO0FBRS9CLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFTyxlQUFlLFlBQXlCO0FBRTNDLFVBQU0sa0JBQWtCLEtBQUssUUFBUTtBQUFBLE1BQ2pDLENBQUMsV0FBVyxPQUFPLFdBQVcsY0FBYyxXQUFXO0FBQUEsSUFDM0Q7QUFHQSxvQkFBZ0IsUUFBUSxDQUFDLFdBQVcsT0FBTyxPQUFPLFFBQVEsQ0FBQztBQUczRCxTQUFLLFVBQVUsS0FBSyxRQUFRO0FBQUEsTUFDeEIsQ0FBQyxXQUFXLE9BQU8sV0FBVyxjQUFjLFdBQVc7QUFBQSxJQUMzRDtBQUFBLEVBQ0o7QUFBQSxFQUVPLFVBQ0gsTUFDQSxZQUNrQjtBQUNsQixXQUFPLEtBQUssUUFBUSxLQUFLLENBQUMsV0FBVztBQUNqQyxhQUNJLE9BQU8sU0FBUyxRQUNoQixPQUFPLFdBQVcsY0FBYyxXQUFXO0FBQUEsSUFFbkQsQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVPLFdBQVcsTUFBYyxZQUF5QixJQUFJLEdBQUcsSUFBSSxHQUFHO0FBQ25FLFVBQU0sU0FBUyxLQUFLLFVBQVUsTUFBTSxVQUFVO0FBRTlDLFVBQU0sUUFBUSxRQUFRLFFBQVEsVUFBVTtBQUN4QyxVQUFNLEVBQUUsTUFBTSxJQUFJLE1BQU8sZUFBZTtBQUV4QyxXQUFPLGlCQUFpQixJQUFJLFFBQVEsQ0FBQztBQUNyQyxXQUFPLGVBQWUsQ0FBQztBQUV2QixZQUFRLFFBQVEsWUFBWSxJQUFJO0FBQUEsRUFDcEM7QUFBQSxFQUVPLFdBQVcsTUFBYyxZQUF5QjtBQUNyRCxVQUFNLFNBQVMsS0FBSyxVQUFVLE1BQU0sVUFBVTtBQUU5QyxZQUFRLE9BQU8sWUFBWSxLQUFLO0FBQUEsRUFDcEM7QUFBQSxFQUVPLGFBQWEsTUFBYyxZQUF5QixJQUFJLEdBQUcsSUFBSSxHQUFHO0FBQ3JFLFVBQU0sU0FBUyxLQUFLLFVBQVUsTUFBTSxVQUFVO0FBRTlDLFFBQUksUUFBUSxPQUFPLFlBQVksR0FBRztBQUM5QixXQUFLLFdBQVcsTUFBTSxVQUFVO0FBQUEsSUFDcEMsT0FBTztBQUNILFdBQUssV0FBVyxNQUFNLFlBQVksR0FBRyxDQUFDO0FBQUEsSUFDMUM7QUFBQSxFQUNKO0FBQUEsRUFFTyxtQkFBbUIsWUFBeUIsWUFBcUI7QUFFcEUsU0FBSyxRQUFRLFFBQVEsQ0FBQyxXQUFXO0FBQzdCLFVBQ0ksT0FBTyxXQUFXLGNBQWMsV0FBVyxhQUMzQyxPQUFPLFNBQVMsYUFDaEIsT0FBTyxTQUFTLFlBQ2xCO0FBQ0UsZUFBTyxPQUFPLFlBQVksS0FBSztBQUFBLE1BQ25DO0FBQUEsSUFDSixDQUFDO0FBQUEsRUFDTDtBQUNKO0FBRUEsSUFBTyx5QkFBUTs7O0FDM0hmLE9BQU9DLG9CQUFtQjtBQUkxQixJQUFNLGdCQUFnQjtBQUN0QixJQUFNLGdCQUFnQixNQUFNLEtBQUssRUFBRSxRQUFRLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQztBQVEzRSxTQUFTLGlCQUFpQixXQUFnQztBQUN0RCxTQUFPLGNBQWMsSUFBSSxDQUFDLE1BQU07QUFDNUIsUUFBSSxZQUFZLE1BQU0sRUFBRSxTQUFTLFNBQVMsY0FBYyxJQUFJLENBQUM7QUFFN0QsUUFBSSxDQUFDLFdBQVc7QUFDWixrQkFBWUMsZUFBYyxVQUFVLE1BQU0sSUFBSSxHQUFHLElBQUk7QUFBQSxJQUN6RDtBQUVBLFdBQU87QUFBQSxNQUNILElBQUk7QUFBQSxNQUNKLFNBQVMsVUFBVSxPQUFPO0FBQUEsTUFDMUIsVUFBVSxVQUFVLFlBQVksRUFBRSxTQUFTO0FBQUEsSUFDL0M7QUFBQSxFQUNKLENBQUM7QUFDTDtBQUVBLElBQU1DLGNBQU4sTUFBNkQ7QUFBQSxFQUd6RCxjQUFjO0FBQ1YsU0FBSyxhQUFhLFNBQVMsQ0FBQyxDQUFDO0FBQUEsRUFDakM7QUFBQSxFQUVBLE1BQWEsUUFBUTtBQUNqQixVQUFNLFVBQVUsTUFBTSxFQUFFLFNBQVMsU0FBUyxzQkFBc0I7QUFDaEUsVUFBTSxhQUFhLGlCQUFpQixRQUFRLEVBQUU7QUFFOUMsU0FBSyxXQUFXLElBQUksVUFBVTtBQUU5QixVQUFNLEVBQUUsU0FBUyxTQUFTO0FBQUEsTUFDdEI7QUFBQSxNQUNBLEtBQUssZ0JBQWdCLEtBQUssSUFBSTtBQUFBLElBQ2xDO0FBQUEsRUFDSjtBQUFBLEVBRUEsTUFBYSxPQUFPO0FBQ2hCLFNBQUssV0FBVyxLQUFLO0FBQUEsRUFDekI7QUFBQSxFQUVRLGdCQUNKLFVBQ0EsT0FDQSxNQUNGO0FBQ0UsVUFBTSxVQUFVLE1BQU0sRUFBRSxTQUFTLFNBQVMsc0JBQXNCO0FBQ2hFLFVBQU0sYUFBYSxpQkFBaUIsUUFBUSxFQUFFO0FBQzlDLFVBQU0sUUFBUSxXQUFXLFVBQVUsQ0FBQyxPQUFPLEdBQUcsR0FBRyxPQUFPLFFBQVEsRUFBRTtBQUdsRSxRQUFJLFVBQVUsSUFBSTtBQUVkLFVBQUksV0FBVyxVQUFVLGVBQWU7QUFDcEMsbUJBQVcsSUFBSTtBQUFBLE1BQ25CO0FBR0EsaUJBQVcsS0FBSztBQUFBLFFBQ1osSUFBSTtBQUFBLFFBQ0osU0FBUztBQUFBLFFBQ1QsVUFBVSxRQUFRLFlBQVksRUFBRSxTQUFTO0FBQUEsTUFDN0MsQ0FBQztBQUFBLElBQ0wsT0FFSztBQUNELFVBQUksZUFDQSxNQUFNLEVBQUUsU0FBUyxTQUFTLGNBQWMsYUFBYTtBQUV6RCxVQUFJLENBQUMsY0FBYztBQUNmLHVCQUFlRCxlQUFjLFVBQVU7QUFBQSxVQUNuQztBQUFBLFVBQ0E7QUFBQSxRQUNKO0FBQUEsTUFDSjtBQUVBLGlCQUFXLEtBQUs7QUFBQSxRQUNaLElBQUk7QUFBQSxRQUNKLFNBQVM7QUFBQSxRQUNULFVBQVUsYUFBYSxZQUFZLEVBQUUsU0FBUztBQUFBLE1BQ2xELENBQUM7QUFBQSxJQUNMO0FBRUEsU0FBSyxXQUFXLElBQUksVUFBVTtBQUFBLEVBQ2xDO0FBQUEsRUFFTyxVQUFVLFVBQXdDO0FBQ3JELFdBQU8sS0FBSyxXQUFXLFVBQVUsUUFBUTtBQUFBLEVBQzdDO0FBQUEsRUFFTyxNQUFtQjtBQUN0QixXQUFPLEtBQUssV0FBVyxJQUFJO0FBQUEsRUFDL0I7QUFDSjtBQUVBLElBQU9FLHNCQUFRRDs7O0FDeEdmLE9BQU8sa0JBQWtCO0FBY3pCLElBQU1FLFdBQU4sTUFBMkQ7QUFBQSxFQU92RCxjQUFjO0FBSmQsU0FBUSxZQUFpQyxvQkFBSSxJQUFJO0FBSzdDLFNBQUssV0FBVyxhQUFhLFlBQVk7QUFFekMsU0FBSyxRQUFRLElBQUksU0FBdUI7QUFBQSxNQUNwQyxXQUFXLEtBQUssU0FBUyxlQUFlO0FBQUEsTUFDeEMsT0FBTyxLQUFLLFNBQVMsa0JBQWtCO0FBQUEsTUFDdkMsWUFBWSxLQUFLLFNBQVMsZUFBZTtBQUFBLE1BQ3pDLE1BQU0sS0FBSyxTQUFTLGNBQWM7QUFBQSxNQUNsQyxhQUFhLEtBQUssU0FBUyxzQkFBc0I7QUFBQSxNQUNqRCxZQUFZLEtBQUssU0FBUyxhQUFhO0FBQUEsTUFDdkMsY0FBYztBQUFBLElBQ2xCLENBQUM7QUFFRCxTQUFLLFlBQVk7QUFBQSxFQUNyQjtBQUFBLEVBRUEsTUFBYSxRQUFRO0FBQ2pCLFNBQUssVUFBVTtBQUFBLE1BQ1g7QUFBQSxNQUNBLEtBQUssU0FBUyxRQUFRLFVBQVUsS0FBSyxZQUFZLEtBQUssSUFBSSxDQUFDO0FBQUEsSUFDL0Q7QUFBQSxFQUNKO0FBQUEsRUFFQSxNQUFhLE9BQU87QUFDaEIsU0FBSyxVQUFVLFFBQVEsQ0FBQyxJQUFJLFVBQVU7QUFDbEMsV0FBSyxTQUFTLFdBQVcsRUFBRTtBQUMzQixXQUFLLFVBQVUsT0FBTyxLQUFLO0FBQUEsSUFDL0IsQ0FBQztBQUVELFNBQUssTUFBTSxLQUFLO0FBQUEsRUFDcEI7QUFBQSxFQUVPLFVBQVUsVUFBeUM7QUFDdEQsV0FBTyxLQUFLLE1BQU0sVUFBVSxRQUFRO0FBQUEsRUFDeEM7QUFBQSxFQUVPLE1BQW9CO0FBQ3ZCLFdBQU8sS0FBSyxNQUFNLElBQUk7QUFBQSxFQUMxQjtBQUFBLEVBRUEsTUFBYSx5QkFBeUI7QUFDbEMsV0FBTyxNQUFNLFVBQVUsc0JBQXNCLEVBQUU7QUFBQSxNQUFLLENBQUMsV0FDakQsT0FBTyxLQUFLO0FBQUEsSUFDaEI7QUFBQSxFQUNKO0FBQUEsRUFFQSxNQUFhLGdCQUNULFNBQ0Y7QUFDRSxVQUFNLFVBQVUsd0JBQXdCLE9BQU8sRUFBRTtBQUVqRCxTQUFLLFlBQVk7QUFBQSxFQUNyQjtBQUFBLEVBRUEsTUFBYyxjQUFjO0FBQ3hCLFNBQUssTUFBTSxJQUFJO0FBQUEsTUFDWCxXQUFXLEtBQUssU0FBUyxlQUFlO0FBQUEsTUFDeEMsT0FBTyxLQUFLLFNBQVMsa0JBQWtCO0FBQUEsTUFDdkMsWUFBWSxLQUFLLFNBQVMsZUFBZTtBQUFBLE1BQ3pDLE1BQU0sS0FBSyxTQUFTLGNBQWM7QUFBQSxNQUNsQyxhQUFhLEtBQUssU0FBUyxzQkFBc0I7QUFBQSxNQUNqRCxZQUFZLEtBQUssU0FBUyxhQUFhO0FBQUEsTUFDdkMsY0FBYyxNQUFNLEtBQUssdUJBQXVCO0FBQUEsSUFDcEQsQ0FBQztBQUFBLEVBQ0w7QUFDSjtBQUVBLElBQU9DLG1CQUFRRDs7O0FDdEZmLElBQU0sa0JBQU4sTUFBeUM7QUFBQSxFQUF6QztBQUNJLFNBQVEsV0FDSixvQkFBSSxJQUFJO0FBRVosU0FBUSxZQUFpQyxvQkFBSSxJQUFJO0FBQUE7QUFBQSxFQUVqRCxNQUFhLFFBQVE7QUFDakIsU0FBSyxVQUFVO0FBQUEsTUFDWDtBQUFBLE1BQ0EsTUFBTSxFQUFFLFNBQVMsU0FBUztBQUFBLFFBQ3RCO0FBQUEsUUFDQSxLQUFLLGVBQWUsS0FBSyxJQUFJO0FBQUEsTUFDakM7QUFBQSxJQUNKO0FBQ0EsU0FBSyxVQUFVO0FBQUEsTUFDWDtBQUFBLE1BQ0EsTUFBTSxFQUFFLFNBQVMsU0FBUztBQUFBLFFBQ3RCO0FBQUEsUUFDQSxLQUFLLGlCQUFpQixLQUFLLElBQUk7QUFBQSxNQUNuQztBQUFBLElBQ0o7QUFFQSxVQUFNLFdBQVcsTUFBTSxFQUFFLFNBQVMsU0FBUyxhQUFhO0FBRXhELGFBQVMsUUFBUSxDQUFDLFlBQVk7QUFDMUIsV0FBSyxlQUFlLE1BQU0sRUFBRSxTQUFTLFVBQVUsT0FBTztBQUFBLElBQzFELENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFQSxNQUFhLE9BQU87QUFFaEIsU0FBSyxVQUFVLFFBQVEsQ0FBQyxJQUFJLFVBQVU7QUFDbEMsWUFBTSxFQUFFLFNBQVMsU0FBUyxXQUFXLEVBQUU7QUFDdkMsV0FBSyxVQUFVLE9BQU8sS0FBSztBQUFBLElBQy9CLENBQUM7QUFFRCxTQUFLLFNBQVMsTUFBTTtBQUFBLEVBQ3hCO0FBQUEsRUFFUSxlQUNKLFNBQ0EsU0FDSTtBQUVKLFFBQUksS0FBSyxTQUFTLElBQUksUUFBUSxFQUFFLEdBQUc7QUFDL0IsY0FBUSxJQUFJLHFDQUFxQyxRQUFRLEVBQUU7QUFDM0Q7QUFBQSxJQUNKO0FBR0EsU0FBSyxTQUFTLElBQUksUUFBUSxJQUFJLE9BQU87QUFHckMsVUFBTSxhQUFhLFlBQUksYUFBYSxFQUFFO0FBQUEsTUFDbEMsQ0FBQyxNQUFNLEVBQUUsY0FBYyxRQUFRO0FBQUEsSUFDbkM7QUFFQSxRQUFJLENBQUMsWUFBWTtBQUNiO0FBQUEsSUFDSjtBQUdBLFVBQU0sRUFBRSxlQUFlLFlBQVksVUFBVTtBQUFBLEVBQ2pEO0FBQUEsRUFFUSxpQkFDSixTQUNBLElBQ0k7QUFFSixVQUFNLFVBQVUsS0FBSyxTQUFTLElBQUksRUFBRTtBQUVwQyxRQUFJLENBQUMsU0FBUztBQUNWO0FBQUEsSUFDSjtBQUdBLFVBQU0sYUFBYSxZQUFJLGFBQWEsRUFBRTtBQUFBLE1BQ2xDLENBQUMsTUFBTSxFQUFFLGNBQWMsUUFBUTtBQUFBLElBQ25DO0FBRUEsUUFBSSxDQUFDLFlBQVk7QUFDYjtBQUFBLElBQ0o7QUFHQSxVQUFNLEVBQUUsZUFBZSxlQUFlLFVBQVU7QUFHaEQsU0FBSyxTQUFTLE9BQU8sRUFBRTtBQUFBLEVBQzNCO0FBQ0o7QUFFQSxJQUFPLDBCQUFROzs7QUNqR2YsT0FBTyxhQUFhO0FBV3BCLElBQU1FLFVBQU4sTUFBeUQ7QUFBQSxFQU9yRCxjQUFjO0FBSmQsU0FBUSxZQUFpQyxvQkFBSSxJQUFJO0FBSzdDLFNBQUssV0FBVyxRQUFRLFlBQVk7QUFHcEMsU0FBSyxRQUFRLFNBQVM7QUFBQSxNQUNsQixRQUFRO0FBQUEsTUFDUixZQUFZO0FBQUEsTUFDWixVQUFVLENBQUM7QUFBQSxNQUNYLGNBQWMsQ0FBQztBQUFBLElBQ25CLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFQSxNQUFhLFFBQVE7QUFDakIsU0FBSyxVQUFVO0FBQUEsTUFDWDtBQUFBLE1BQ0EsS0FBSyxTQUFTLFFBQVEsU0FBUyxDQUFDLFlBQVk7QUFDeEMsYUFBSyxNQUFNLElBQUk7QUFBQSxVQUNYLFFBQVEsS0FBSyxTQUFTLGVBQWU7QUFBQSxVQUNyQyxZQUFZLEtBQUssU0FBUyxlQUFlO0FBQUEsVUFDekMsVUFBVSxLQUFLLFNBQVMsTUFBTSxhQUFhLEtBQUssQ0FBQztBQUFBLFVBQ2pELGNBQWMsS0FBSyxTQUFTLE1BQU0sZ0JBQWdCLEtBQUssQ0FBQztBQUFBLFFBQzVELENBQUM7QUFBQSxNQUNMLENBQUM7QUFBQSxJQUNMO0FBRUEsU0FBSyxVQUFVO0FBQUEsTUFDWDtBQUFBLE1BQ0EsS0FBSyxTQUFTLGVBQWUsUUFBUSxVQUFVLENBQUMsU0FBUyxVQUFVO0FBQy9ELGNBQU0sU0FBUyxDQUFDLFVBQVUsY0FBYyxNQUFNO0FBRTlDLFlBQUksT0FBTyxTQUFTLE1BQU0sSUFBSSxHQUFHO0FBQzdCLGVBQUssTUFBTSxJQUFJO0FBQUEsWUFDWCxHQUFHLEtBQUssTUFBTSxJQUFJO0FBQUEsWUFDbEIsUUFBUSxLQUFLLFNBQVMsZUFBZTtBQUFBLFlBQ3JDLFlBQVksS0FBSyxTQUFTLGVBQWU7QUFBQSxZQUN6QyxVQUFVLEtBQUssU0FBUyxNQUFNLGFBQWEsS0FBSyxDQUFDO0FBQUEsWUFDakQsY0FDSSxLQUFLLFNBQVMsTUFBTSxnQkFBZ0IsS0FBSyxDQUFDO0FBQUEsVUFDbEQsQ0FBQztBQUFBLFFBQ0w7QUFBQSxNQUNKLENBQUM7QUFBQSxJQUNMO0FBQUEsRUFDSjtBQUFBLEVBRUEsTUFBYSxPQUFPO0FBQ2hCLFNBQUssVUFBVSxRQUFRLENBQUMsSUFBSSxVQUFVO0FBQ2xDLFdBQUssU0FBUyxXQUFXLEVBQUU7QUFDM0IsV0FBSyxVQUFVLE9BQU8sS0FBSztBQUFBLElBQy9CLENBQUM7QUFFRCxTQUFLLE1BQU0sS0FBSztBQUFBLEVBQ3BCO0FBQUEsRUFFTyxVQUFVLFVBQXdDO0FBQ3JELFdBQU8sS0FBSyxNQUFNLFVBQVUsUUFBUTtBQUFBLEVBQ3hDO0FBQUEsRUFFTyxNQUFNO0FBQ1QsV0FBTyxLQUFLLE1BQU0sSUFBSTtBQUFBLEVBQzFCO0FBQ0o7QUFFQSxJQUFPQyxrQkFBUUQ7OztBQ2hGZixPQUFPRSxrQkFBaUI7OztBQ0N4QixPQUFPQyxrQkFBaUI7QUFFeEIsSUFBTSxPQUFPO0FBQ2IsSUFBTSxnQkFBZ0I7QUFFdEIsSUFBTSxvQkFBTixNQUF3QjtBQUFBLEVBWXBCLFlBQ0ksSUFDQSxTQUNBLFdBQ0Y7QUFDRSxTQUFLLEtBQUs7QUFDVixTQUFLLE9BQU87QUFBQSxNQUNSLFlBQVlBLGFBQVksUUFBUSxXQUFXLGdCQUFnQjtBQUFBLElBQy9EO0FBQ0EsU0FBSyxZQUFZO0FBRWpCLFNBQUssTUFBTTtBQUFBLEVBQ2Y7QUFBQSxFQUVPLFFBQVE7QUFFWCxRQUFJLEtBQUssVUFBVTtBQUNmO0FBQUEsSUFDSjtBQUdBLFNBQUssV0FBVyxTQUFTLEtBQU0sTUFBTTtBQUNqQyxZQUFNLGNBQWMsS0FBSyxLQUFLLElBQUk7QUFFbEMsVUFBSSxlQUFlLEdBQUc7QUFDbEIsYUFBSyxVQUFVLE9BQU87QUFDdEIsYUFBSyxXQUFXO0FBRWhCLGFBQUssVUFBVSxLQUFLLEVBQUU7QUFBQSxNQUMxQixPQUFPO0FBQ0gsYUFBSyxLQUFLLElBQUksY0FBYyxDQUFDO0FBQUEsTUFDakM7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFTyxPQUFPO0FBRVYsU0FBSyxVQUFVLE9BQU87QUFDdEIsU0FBSyxXQUFXO0FBRWhCLFNBQUssS0FBSyxJQUFJLElBQUk7QUFBQSxFQUN0QjtBQUNKO0FBRUEsSUFBTyw0QkFBUTs7O0FEekRmLElBQU0saUJBQWlCO0FBUXZCLElBQU0sc0JBQU4sTUFBZ0U7QUFBQSxFQWE1RCxjQUFjO0FBTmQsU0FBUSxVQUErQixDQUFDO0FBSXhDLFNBQVEsWUFBaUMsb0JBQUksSUFBSTtBQUc3QyxTQUFLLFdBQVdDLGFBQVksWUFBWTtBQUN4QyxTQUFLLFNBQVMsZ0JBQWdCO0FBRTlCLFNBQUssT0FBTyxLQUFLLFNBQVMsa0JBQWtCLEVBQUUsS0FBSyxDQUFDLEdBQUcsTUFBTTtBQUN6RCxhQUFPLEVBQUUsT0FBTyxFQUFFO0FBQUEsSUFDdEIsQ0FBQztBQUVELFNBQUssUUFBUSxDQUFDLEdBQUcsS0FBSyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtBQUVyRCxTQUFLLFFBQVEsU0FBUztBQUFBLE1BQ2xCLE1BQU0sS0FBSztBQUFBLE1BQ1gsT0FBTyxLQUFLO0FBQUEsTUFDWixTQUFTLEtBQUs7QUFBQSxJQUNsQixDQUFDO0FBQUEsRUFDTDtBQUFBLEVBRUEsTUFBYSxRQUFRO0FBQ2pCLFNBQUssVUFBVTtBQUFBLE1BQ1g7QUFBQSxNQUNBLEtBQUssU0FBUyxRQUFRLFlBQVksQ0FBQyxTQUFTLElBQUksYUFBYTtBQUN6RCxhQUFLLFdBQVcsU0FBUyxJQUFJLFFBQVE7QUFBQSxNQUN6QyxDQUFDO0FBQUEsSUFDTDtBQUVBLFNBQUssVUFBVTtBQUFBLE1BQ1g7QUFBQSxNQUNBLEtBQUssU0FBUyxRQUFRLFlBQVksQ0FBQyxTQUFTLElBQUksV0FBVztBQUN2RCxhQUFLLFdBQVcsU0FBUyxJQUFJLE1BQU07QUFBQSxNQUN2QyxDQUFDO0FBQUEsSUFDTDtBQUVBLFNBQUssYUFBYTtBQUFBLEVBQ3RCO0FBQUEsRUFFQSxNQUFhLE9BQU87QUFDaEIsU0FBSyxVQUFVLFFBQVEsQ0FBQyxJQUFJLFVBQVU7QUFDbEMsV0FBSyxTQUFTLFdBQVcsRUFBRTtBQUMzQixXQUFLLFVBQVUsT0FBTyxLQUFLO0FBQUEsSUFDL0IsQ0FBQztBQUdELFNBQUssTUFBTSxLQUFLO0FBQUEsRUFDcEI7QUFBQSxFQUVRLFdBQ0osU0FDQSxJQUNBLFVBQ0Y7QUFDRSxVQUFNLGVBQWUsS0FBSyxTQUFTLGlCQUFpQixFQUFFO0FBRXRELFFBQUksQ0FBQyxjQUFjO0FBQ2Y7QUFBQSxJQUNKO0FBR0EsUUFDSSxLQUFLLFNBQVMsZUFDZCxhQUFhLFlBQVlBLGFBQVksUUFBUSxVQUMvQztBQUNFO0FBQUEsSUFDSjtBQUdBLFNBQUssTUFBTSxLQUFLLEVBQUU7QUFHbEIsUUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHO0FBQ3JDLFdBQUssS0FBSyxRQUFRLFlBQVk7QUFBQSxJQUNsQztBQUVBLFNBQUssT0FBTztBQUVaLFNBQUssYUFBYTtBQUFBLEVBQ3RCO0FBQUEsRUFFUSxXQUNKLFNBQ0EsSUFDQSxRQUNGO0FBRUUsVUFBTSxRQUFRLEtBQUssTUFBTSxRQUFRLEVBQUU7QUFFbkMsUUFBSSxVQUFVLElBQUk7QUFDZCxXQUFLLE1BQU0sT0FBTyxPQUFPLENBQUM7QUFBQSxJQUM5QjtBQUdBLFVBQU0sY0FBYyxLQUFLLFFBQVEsVUFBVSxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUU7QUFFN0QsUUFBSSxnQkFBZ0IsSUFBSTtBQUNwQixXQUFLLFFBQVEsT0FBTyxhQUFhLENBQUM7QUFBQSxJQUN0QztBQUdBLFNBQUssT0FBTyxLQUFLLEtBQUssT0FBTyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUU7QUFFL0MsU0FBSyxPQUFPO0FBRVosWUFBUSxLQUFLLE1BQU07QUFDZixXQUFLLGFBQWE7QUFBQSxJQUN0QixDQUFDO0FBQUEsRUFDTDtBQUFBLEVBRVEsZUFBZTtBQUNuQixRQUFJLEtBQUssUUFBUSxVQUFVLGdCQUFnQjtBQUN2QztBQUFBLElBQ0o7QUFFQSxRQUFJLEtBQUssTUFBTSxXQUFXLEdBQUc7QUFDekI7QUFBQSxJQUNKO0FBR0EsVUFBTSxLQUFLLEtBQUssTUFBTSxNQUFNO0FBRTVCLFFBQUksT0FBTyxRQUFXO0FBQ2xCO0FBQUEsSUFDSjtBQUdBLFVBQU0sZUFBZSxLQUFLLFNBQVMsaUJBQWlCLEVBQUU7QUFDdEQsU0FBSyxRQUFRO0FBQUEsTUFDVCxJQUFJO0FBQUEsUUFDQTtBQUFBLFFBQ0EsYUFBYTtBQUFBLFFBQ2IsS0FBSyxZQUFZLEtBQUssSUFBSTtBQUFBLE1BQzlCO0FBQUEsSUFDSjtBQUVBLFNBQUssT0FBTztBQUVaLFlBQVEsS0FBSyxNQUFNO0FBQ2YsV0FBSyxhQUFhO0FBQUEsSUFDdEIsQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVPLE1BQU07QUFDVCxXQUFPLEtBQUssTUFBTSxJQUFJO0FBQUEsRUFDMUI7QUFBQSxFQUVPLFVBQVUsVUFBa0M7QUFDL0MsV0FBTyxLQUFLLE1BQU0sVUFBVSxRQUFRO0FBQUEsRUFDeEM7QUFBQSxFQUVPLFlBQVksSUFBWTtBQUMzQixVQUFNLFFBQVEsS0FBSyxRQUFRLFVBQVUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBRXZELFFBQUksVUFBVSxJQUFJO0FBQ2QsV0FBSyxRQUFRLE9BQU8sT0FBTyxDQUFDO0FBQUEsSUFDaEM7QUFFQSxTQUFLLE9BQU87QUFFWixZQUFRLEtBQUssTUFBTTtBQUNmLFdBQUssYUFBYTtBQUFBLElBQ3RCLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFTyxhQUFhO0FBRWhCLFNBQUssUUFBUSxDQUFDO0FBR2QsU0FBSyxRQUFRLFFBQVEsQ0FBQyxVQUFVLE1BQU0sS0FBSyxDQUFDO0FBQzVDLFNBQUssVUFBVSxDQUFDO0FBR2hCLFNBQUssT0FBTyxDQUFDO0FBR2IsU0FBSyxPQUFPO0FBRVosZUFBVyxnQkFBZ0IsS0FBSyxTQUFTLGtCQUFrQixHQUFHO0FBQzFELG1CQUFhLFFBQVE7QUFBQSxJQUN6QjtBQUFBLEVBQ0o7QUFBQSxFQUVRLFNBQVM7QUFDYixTQUFLLE1BQU0sSUFBSTtBQUFBLE1BQ1gsTUFBTSxLQUFLO0FBQUEsTUFDWCxPQUFPLEtBQUs7QUFBQSxNQUNaLFNBQVMsQ0FBQyxHQUFHLEtBQUssT0FBTyxFQUFFLFFBQVE7QUFBQSxJQUN2QyxDQUFDO0FBQUEsRUFDTDtBQUNKO0FBRUEsSUFBTyw4QkFBUTs7O0FFck5mLE9BQU8sZUFBZTtBQUV0QixJQUFNLGVBQXVDO0FBQUEsRUFDekMsU0FBUztBQUFBLEVBQ1QsT0FBTztBQUFBLEVBQ1AsU0FBUztBQUNiO0FBRUEsSUFBTSxtQkFBNkIsQ0FBQyxVQUFVLFlBQVksVUFBVTtBQUVwRSxTQUFTLGNBQWMsTUFBMEI7QUFDN0MsUUFBTSxRQUFRLEtBQUs7QUFDbkIsUUFBTSxnQkFBZ0IsS0FBSztBQUMzQixTQUFPLFNBQVMsTUFBTSxTQUFTLFFBQVE7QUFDM0M7QUFFQSxTQUFTLG9CQUFvQixZQUFvQjtBQUM3QyxTQUFPLGlCQUFpQixLQUFLLENBQUMsVUFBVSxXQUFXLE1BQU0sS0FBSyxDQUFDO0FBQ25FO0FBRUEsU0FBUyxjQUFjLE1BQTBCO0FBQzdDLFFBQU0sYUFBYSxjQUFjLElBQUk7QUFDckMsUUFBTSxZQUFZLG9CQUFvQixVQUFVO0FBRWhELE1BQUksQ0FBQyxXQUFXO0FBQ1osV0FBTztBQUFBLEVBQ1g7QUFFQSxhQUFXLENBQUMsS0FBSyxLQUFLLEtBQUssT0FBTyxRQUFRLFlBQVksR0FBRztBQUNyRCxRQUFJLFdBQVcsTUFBTSxJQUFJLE9BQU8sS0FBSyxHQUFHLENBQUMsR0FBRztBQUN4QyxhQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFFQSxTQUFPO0FBQ1g7QUFFQSxTQUFTLFlBQVksS0FBYTtBQUM5QixTQUFPLElBQ0YsWUFBWSxFQUNaLE1BQU0sR0FBRyxFQUNULElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTyxDQUFDLEVBQUUsWUFBWSxJQUFJLEtBQUssTUFBTSxDQUFDLENBQUMsRUFDMUQsS0FBSyxHQUFHO0FBQ2pCO0FBRUEsU0FBUyxpQkFBaUIsTUFBMEI7QUFFaEQsU0FBTyxZQUFZLGNBQWMsSUFBSSxDQUFDO0FBQzFDO0FBYUEsSUFBTUMsUUFBTixNQUF1RDtBQUFBLEVBT25ELGNBQWM7QUFGZCxTQUFRLFlBQWlDLG9CQUFJLElBQUk7QUFHN0MsU0FBSyxXQUFXLFVBQVUsWUFBWTtBQUV0QyxTQUFLLFVBQVU7QUFBQSxNQUNYLEtBQUssU0FBUyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVM7QUFDcEMsZUFBTztBQUFBLFVBQ0g7QUFBQSxVQUNBLFNBQVMsS0FBSyxZQUFZO0FBQUEsVUFDMUIsT0FBTyxLQUFLLFVBQVU7QUFBQSxVQUN0QixTQUFTLGlCQUFpQixJQUFJO0FBQUEsVUFDOUIsT0FBTyxLQUFLLFVBQVU7QUFBQSxVQUN0QixZQUFZLGNBQWMsSUFBSTtBQUFBLFVBQzlCLFdBQVcsS0FBSyxlQUFlO0FBQUEsVUFDL0IsYUFBYSxLQUFLLGlCQUFpQjtBQUFBLFFBQ3ZDO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUFBLEVBQ0o7QUFBQSxFQUVBLE1BQWEsUUFBUTtBQUNqQixTQUFLLFVBQVU7QUFBQSxNQUNYO0FBQUEsTUFDQSxLQUFLLFNBQVMsUUFBUSxjQUFjLENBQUMsUUFBUSxZQUFZO0FBQ3JELGNBQU0sT0FBTyxLQUFLLFNBQVMsU0FBUyxPQUFPO0FBQzNDLGNBQU0sUUFBbUI7QUFBQSxVQUNyQjtBQUFBLFVBQ0EsU0FBUyxLQUFLLFlBQVk7QUFBQSxVQUMxQixPQUFPLEtBQUssVUFBVTtBQUFBLFVBQ3RCLFNBQVMsaUJBQWlCLElBQUk7QUFBQSxVQUM5QixPQUFPLEtBQUssVUFBVTtBQUFBLFVBQ3RCLFlBQVksY0FBYyxJQUFJO0FBQUEsVUFDOUIsV0FBVyxLQUFLLGVBQWU7QUFBQSxVQUMvQixhQUFhLEtBQUssaUJBQWlCO0FBQUEsUUFDdkM7QUFFQSxhQUFLLFFBQVEsSUFBSSxDQUFDLEdBQUcsS0FBSyxRQUFRLElBQUksR0FBRyxLQUFLLENBQUM7QUFBQSxNQUNuRCxDQUFDO0FBQUEsSUFDTDtBQUVBLFNBQUssVUFBVTtBQUFBLE1BQ1g7QUFBQSxNQUNBLEtBQUssU0FBUyxRQUFRLGdCQUFnQixDQUFDLFFBQVEsWUFBWTtBQUN2RCxjQUFNLGlCQUFpQixLQUFLLFFBQ3ZCLElBQUksRUFDSixPQUFPLENBQUMsVUFBVSxNQUFNLFlBQVksT0FBTztBQUVoRCxhQUFLLFFBQVEsSUFBSSxjQUFjO0FBQUEsTUFDbkMsQ0FBQztBQUFBLElBQ0w7QUFBQSxFQUNKO0FBQUEsRUFFQSxNQUFhLE9BQU87QUFDaEIsU0FBSyxVQUFVLFFBQVEsQ0FBQyxJQUFJLFNBQVM7QUFDakMsV0FBSyxTQUFTLFdBQVcsRUFBRTtBQUMzQixXQUFLLFVBQVUsT0FBTyxJQUFJO0FBQUEsSUFDOUIsQ0FBQztBQUVELFNBQUssUUFBUSxLQUFLO0FBQUEsRUFDdEI7QUFBQSxFQUVPLFVBQVUsVUFBd0M7QUFDckQsV0FBTyxLQUFLLFFBQVEsVUFBVSxRQUFRO0FBQUEsRUFDMUM7QUFBQSxFQUVPLE1BQU07QUFDVCxXQUFPLEtBQUssUUFBUSxJQUFJO0FBQUEsRUFDNUI7QUFDSjtBQUVBLElBQU9DLGdCQUFRRDs7O0FDcElmLElBQU1FLGlCQUFOLE1BQTJEO0FBQUEsRUFLdkQsY0FBYztBQUpkLFNBQVEsWUFBaUMsb0JBQUksSUFBSTtBQUs3QyxTQUFLLFNBQVMsU0FBaUI7QUFBQSxNQUMzQixPQUFPO0FBQUEsSUFDWCxDQUFDO0FBQUEsRUFDTDtBQUFBLEVBRUEsTUFBYSxRQUFRO0FBQ2pCLFNBQUssVUFBVTtBQUFBLE1BQ1g7QUFBQSxNQUNBLE1BQU0sRUFBRSxTQUFTLFNBQVM7QUFBQSxRQUN0QjtBQUFBLFFBQ0EsQ0FBQyxRQUFRLFVBQVU7QUFDZixlQUFLLE9BQU8sSUFBSTtBQUFBLFlBQ1osT0FDSSxNQUFNLEVBQUUsU0FBUyxTQUFTLG1CQUFtQixHQUN2QyxTQUFTO0FBQUEsVUFDdkIsQ0FBQztBQUFBLFFBQ0w7QUFBQSxNQUNKO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFBQSxFQUVBLE1BQWEsT0FBTztBQUNoQixTQUFLLFVBQVUsUUFBUSxDQUFDLE9BQU87QUFDM0IsWUFBTSxFQUFFLFNBQVMsU0FBUyxXQUFXLEVBQUU7QUFBQSxJQUMzQyxDQUFDO0FBQ0QsU0FBSyxVQUFVLE1BQU07QUFBQSxFQUN6QjtBQUFBLEVBRU8sVUFBVSxVQUErQztBQUM1RCxXQUFPLEtBQUssT0FBTyxVQUFVLFFBQVE7QUFBQSxFQUN6QztBQUFBLEVBRU8sTUFBYztBQUNqQixXQUFPLEtBQUssT0FBTyxJQUFJO0FBQUEsRUFDM0I7QUFDSjtBQUVBLElBQU9DLHlCQUFRRDs7O0FDcENSLElBQU0sUUFBTixNQUFZO0FBQUEsRUFpQmYsY0FBYztBQUNWLFNBQUssU0FBUyxJQUFJLGVBQU87QUFFekIsU0FBSyxRQUFRLElBQUksY0FBTTtBQUN2QixTQUFLLFdBQVcsSUFBSSxpQkFBUztBQUM3QixTQUFLLGtCQUFrQixJQUFJLHdCQUFnQjtBQUMzQyxTQUFLLGlCQUFpQixJQUFJLHVCQUFlO0FBQ3pDLFNBQUssc0JBQXNCLElBQUksNEJBQW9CO0FBRW5ELFNBQUssT0FBTyxJQUFJLGFBQUs7QUFDckIsU0FBSyxhQUFhLElBQUlFLG9CQUFXO0FBQ2pDLFNBQUssVUFBVSxJQUFJQyxpQkFBUTtBQUMzQixTQUFLLFNBQVMsSUFBSUMsZ0JBQU87QUFDekIsU0FBSyxPQUFPLElBQUlDLGNBQUs7QUFDckIsU0FBSyxnQkFBZ0IsSUFBSUMsdUJBQWM7QUFBQSxFQUMzQztBQUFBLEVBRUEsTUFBTSxRQUFRO0FBQ1YsWUFBUSxJQUFJLDhCQUE4QjtBQUcxQyxVQUFNLEtBQUssU0FBUyxNQUFNO0FBQzFCLFVBQU0sS0FBSyxnQkFBZ0IsTUFBTTtBQUNqQyxVQUFNLEtBQUssZUFBZSxNQUFNO0FBQ2hDLFVBQU0sS0FBSyxvQkFBb0IsTUFBTTtBQUdyQyxVQUFNLEtBQUssS0FBSyxNQUFNO0FBQ3RCLFVBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsVUFBTSxLQUFLLFFBQVEsTUFBTTtBQUN6QixVQUFNLEtBQUssT0FBTyxNQUFNO0FBQ3hCLFVBQU0sS0FBSyxLQUFLLE1BQU07QUFDdEIsVUFBTSxLQUFLLGNBQWMsTUFBTTtBQUcvQixVQUFNLEtBQUssTUFBTSxNQUFNO0FBQUEsRUFDM0I7QUFBQSxFQUVBLE1BQU0sT0FBTztBQUNULFlBQVEsSUFBSSw4QkFBOEI7QUFHMUMsVUFBTSxLQUFLLE1BQU0sS0FBSztBQUd0QixVQUFNLEtBQUssS0FBSyxLQUFLO0FBQ3JCLFVBQU0sS0FBSyxXQUFXLEtBQUs7QUFDM0IsVUFBTSxLQUFLLFFBQVEsS0FBSztBQUN4QixVQUFNLEtBQUssT0FBTyxLQUFLO0FBQ3ZCLFVBQU0sS0FBSyxLQUFLLEtBQUs7QUFHckIsVUFBTSxLQUFLLG9CQUFvQixLQUFLO0FBQ3BDLFVBQU0sS0FBSyxlQUFlLEtBQUs7QUFDL0IsVUFBTSxLQUFLLGdCQUFnQixLQUFLO0FBQ2hDLFVBQU0sS0FBSyxTQUFTLEtBQUs7QUFDekIsVUFBTSxLQUFLLGNBQWMsS0FBSztBQUFBLEVBQ2xDO0FBQ0o7QUFZQSxJQUFJO0FBRVcsU0FBUixRQUF5QjtBQUM1QixNQUFJLENBQUMsUUFBUTtBQUNULGFBQVMsSUFBSSxNQUFNO0FBQUEsRUFDdkI7QUFDQSxTQUFPO0FBQ1g7OztBQ3ZHQSxZQUFTLE1BQU07QUFBQSxFQUNYLGNBQWM7QUFBQSxFQUNkLE9BQU87QUFDSCxVQUFNLEVBQUUsTUFBTTtBQUFBLEVBQ2xCO0FBQ0osQ0FBQzsiLAogICJuYW1lcyI6IFsiQXN0YWwiLCAiR3RrIiwgIkdkayIsICJBc3RhbCIsICJiaW5kIiwgImludGVydmFsIiwgInRpbWVvdXQiLCAiQXN0YWwiLCAiQXN0YWwiLCAiQXN0YWwiLCAidiIsICJpbnRlcnZhbCIsICJleGVjIiwgImN0b3JzIiwgIkd0ayIsICJBc3RhbCIsICJzbmFrZWlmeSIsICJwYXRjaCIsICJIeXBybGFuZCIsICJHT2JqZWN0IiwgIkFwcCIsICJHdGsiLCAiQXN0YWwiLCAiQXN0YWwiLCAiR3RrIiwgIkd0ayIsICJBc3RhbCIsICJjaCIsICJHZGsiLCAiZGVmYXVsdCIsICJBc3RhbCIsICJBc3RhbCIsICJHT2JqZWN0IiwgImRlZmF1bHQiLCAiR09iamVjdCIsICJkZWZhdWx0IiwgIlRpbWUiLCAianN4IiwgImpzeCIsICJHdGsiLCAianN4IiwgImpzeCIsICJHdGsiLCAid29ya3NwYWNlcyIsICJqc3giLCAiR3RrIiwgIkd0ayIsICJqc3giLCAianN4IiwgIkd0ayIsICJqc3giLCAiR3RrIiwgIlRpbWUiLCAianN4IiwgIlRpbWVfZGVmYXVsdCIsICJqc3giLCAiR2RrIiwgImpzeCIsICJHZGsiLCAiR3RrIiwgImpzeCIsICJUaW1lX2RlZmF1bHQiLCAiQXN0YWwiLCAianN4IiwgIkd0ayIsICJBc3RhbCIsICJqc3giLCAiR2RrIiwgImpzeCIsICJHdGsiLCAic3BlYWtlcnMiLCAianN4IiwgIkd0ayIsICJHdGsiLCAianN4IiwgIlBhbmdvIiwgIkd0ayIsICJkZWZhdWx0IiwgImpzeCIsICJQYW5nbyIsICJBc3RhbEh5cHJsYW5kIiwgIkFzdGFsSHlwcmxhbmQiLCAianN4IiwgIkd0ayIsICJqc3giLCAiQXN0YWwiLCAianN4IiwgIkd0ayIsICJ0eXBlIiwgIkFzdGFsSHlwcmxhbmQiLCAiQXN0YWxIeXBybGFuZCIsICJXb3Jrc3BhY2VzIiwgIldvcmtzcGFjZXNfZGVmYXVsdCIsICJCYXR0ZXJ5IiwgIkJhdHRlcnlfZGVmYXVsdCIsICJWb2x1bWUiLCAiVm9sdW1lX2RlZmF1bHQiLCAiQXN0YWxOb3RpZmQiLCAiQXN0YWxOb3RpZmQiLCAiQXN0YWxOb3RpZmQiLCAiVHJheSIsICJUcmF5X2RlZmF1bHQiLCAiRm9jdXNlZENsaWVudCIsICJGb2N1c2VkQ2xpZW50X2RlZmF1bHQiLCAiV29ya3NwYWNlc19kZWZhdWx0IiwgIkJhdHRlcnlfZGVmYXVsdCIsICJWb2x1bWVfZGVmYXVsdCIsICJUcmF5X2RlZmF1bHQiLCAiRm9jdXNlZENsaWVudF9kZWZhdWx0Il0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@